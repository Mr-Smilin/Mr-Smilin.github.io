<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>貓謎工坊</title>
        <link>https://smilin.net</link>
        <description>Code · Thinking · ACG</description>
        <language>zh-TW</language>
        <pubDate>Tue, 23 Apr 2024 18:00:00 +0800</pubDate>
        <lastBuildDate>Tue, 23 Apr 2024 18:00:00 +0800</lastBuildDate>
        <category>node.js</category>
        <category>bot</category>
        <category>discord</category>
        <category>discord.js</category>
        <category>教學</category>
        <category>12th鐵人賽</category>
        <category>Alist</category>
        <category>Cloudflare</category>
        <category>日記</category>
        <category>docker</category>
        <category>javascript</category>
        <category>hexo</category>
        <category>fluid</category>
        <category>heroku</category>
        <category>render</category>
        <category>render.com</category>
        <category>Rust</category>
        <category>Live2D</category>
        <category>彈射世界</category>
        <category>遊戲</category>
        <category>腳本</category>
        <category>addtoany</category>
        <item>
            <guid isPermalink="true">https://smilin.net/2024/04/23/shareButton1/</guid>
            <title>使用 AddToAny 分享箱，踩雷過程</title>
            <link>https://smilin.net/2024/04/23/shareButton1/</link>
            <category>hexo</category>
            <category>addtoany</category>
            <pubDate>Tue, 23 Apr 2024 18:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/01.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;網站之前有配置分享箱的系統，使用 &lt;a href=&#34;https://github.com/overtrue/share.js&#34;&gt;sharejs&lt;/a&gt; 依賴&lt;br&gt;該依賴只要套上預設即可，十分方便&lt;/p&gt;
&lt;p&gt;不過 sharejs 最新的 release 已經是 2016 年的事了…&lt;/p&gt;
&lt;p&gt;實際上有些按鈕已經過時，無法使用&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;&lt;a href=&#34;https://ppoffice.github.io/hexo-theme-icarus/Plugins/Share/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E5%88%86%E4%BA%AB%E6%8C%89%E9%92%AE&#34;&gt;關於本主題的分享箱適配&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;icarus 本身是支援多種分享功能的&lt;br&gt;由於 sharejs 停止維護，官方建議採用別的分享功能&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h1 id=&#34;AddToAny&#34;&gt;&lt;a href=&#34;#AddToAny&#34; class=&#34;headerlink&#34; title=&#34;AddToAny&#34;&gt;&lt;/a&gt;AddToAny&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/addtoany_logo.svg&#34; alt=&#34;addtoany&#34;&gt;&lt;/p&gt;
&lt;p&gt;看了一圈，決定改用 &lt;a href=&#34;https://www.addtoany.com/&#34;&gt;AddToAny&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其一是因為該插件支援的社群足夠多，有持續在維護&lt;/p&gt;
&lt;p&gt;與 blog 代碼沒甚麼交集，自定義客製方便&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h1 id=&#34;踩雷過程&#34;&gt;&lt;a href=&#34;#踩雷過程&#34; class=&#34;headerlink&#34; title=&#34;踩雷過程&#34;&gt;&lt;/a&gt;踩雷過程&lt;/h1&gt;&lt;p&gt;簡單選一下想要的按鈕，產出代碼後，扔進 jsx 內&lt;/p&gt;
&lt;p&gt;到此就搞定了(超快~)，build 看下輸出&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/02.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;hmmm…為什麼會是一片空白呢？&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h2 id=&#34;沒有-CSS&#34;&gt;&lt;a href=&#34;#沒有-CSS&#34; class=&#34;headerlink&#34; title=&#34;沒有 CSS ?&#34;&gt;&lt;/a&gt;沒有 CSS ?&lt;/h2&gt;&lt;p&gt;看了一下，似乎是 css 沒有載入&lt;/p&gt;
&lt;p&gt;不過 css 這些內容應該會隨著 js 一併輸出才對&lt;/p&gt;
&lt;p&gt;花了些時間尋找問題，之後發現&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/03.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;原來是被瀏覽器擋住了，會被瀏覽器攔截主要有幾個可能性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;混和內容(Mixed Content):&lt;br&gt;如果網站是透過 HTTPS 協定提供服務的，而嘗試載入的資源（如 page.js）使用的是 HTTP 鏈接，那麼這種「混合內容」可能會被現代瀏覽器封鎖。 確保所有外部載入的資源都使用 HTTPS 來避免這種問題。&lt;/li&gt;
&lt;li&gt;安全策略(CSP):&lt;br&gt;瀏覽器可能會因為安全策略(Content Security Policy)而阻止某些腳本的載入。&lt;/li&gt;
&lt;li&gt;跨域問題(CORS):&lt;br&gt;服務商有可能因為沒有提供適當的跨域策略(Cross-Origin Resource Sharing)，導致資源無法載入&lt;/li&gt;
&lt;li&gt;廣告攔截器:&lt;br&gt;一些廣告攔截器或安全相關的瀏覽器擴充功能可能會阻止諸如 AddToAny 這樣的第三方服務。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由於我們網站跟 AddToAny 都是 https，第一點可以排除&lt;br&gt;本站並沒有設置 CSP (目前沒有)&lt;br&gt;AddToAny 這類插件沒處理好 CORS 的機率是很低的&lt;/p&gt;
&lt;p&gt;簡單排除後，比較有可能的是被廣告攔截器擋住了&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/04.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;喔喔喔！總算出來了！&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h2 id=&#34;廣告攔截器&#34;&gt;&lt;a href=&#34;#廣告攔截器&#34; class=&#34;headerlink&#34; title=&#34;廣告攔截器&#34;&gt;&lt;/a&gt;廣告攔截器&lt;/h2&gt;&lt;p&gt;試了分享功能正常，就是按鈕有點多&lt;br&gt;可能減少一些..之後客製 style…&lt;/p&gt;
&lt;p&gt;恩..不過這樣好像沒有解決問題阿？&lt;/p&gt;
&lt;p&gt;根據統計，全世界有至少&lt;strong&gt;四成&lt;/strong&gt;的人口，常駐廣告攔截器在上網&lt;/p&gt;
&lt;p&gt;只是我看的到而已，如果其他人看不到的話就沒意義了 qq&lt;/p&gt;
&lt;p&gt;不過攔截的問題還算好解決，只要讓他不會被攔截就好了！(廢話)&lt;/p&gt;
&lt;p&gt;方法很多，最簡單的是將原本被攔截的檔案納入網域下&lt;br&gt;載入原本就是同域名下的資源，通常就能繞過限制了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;https://static.addtoany.com/menu/page.js&amp;quot; defer=&amp;#123;true&amp;#125;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;根據產出的代碼來看，主要是這個檔案需要拉進來&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/05.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;整理格式，創建一個 addtoany.js 放進去&lt;br&gt;以 hexo 來說就是將 js 檔案放在 &lt;code&gt;themes/&amp;#123;theme_name&amp;#125;/source/js&lt;/code&gt; 底下&lt;/p&gt;
&lt;p&gt;之後回到 addtoany.jsx 修改來源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;/js/addtoany.js&amp;quot; defer=&amp;#123;true&amp;#125;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RUN！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/02.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;失敗了！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/06.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;載入失敗的檔案反而變多了！&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h2 id=&#34;更多的廣告&#34;&gt;&lt;a href=&#34;#更多的廣告&#34; class=&#34;headerlink&#34; title=&#34;更多的廣告&#34;&gt;&lt;/a&gt;更多的廣告&lt;/h2&gt;&lt;p&gt;看了下失敗的內容，來源都是出自 addtoany.js，也就是剛剛新增的檔案&lt;/p&gt;
&lt;p&gt;回頭翻代碼…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/07.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/08.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;看來是原本的 page.js 引入了其他檔案&lt;br&gt;然後其他檔案又被攔截了…&lt;/p&gt;
&lt;p&gt;雖然有點亂，但還是好解決的&lt;/p&gt;
&lt;p&gt;首先在 &lt;code&gt;source&lt;/code&gt; 目錄新增 &lt;code&gt;addtoany&lt;/code&gt; 資料夾&lt;br&gt;將 &lt;code&gt;addtoany.js&lt;/code&gt; 改名回 &lt;code&gt;page.js&lt;/code&gt; ，放進 &lt;code&gt;addtoany&lt;/code&gt; 資料夾&lt;br&gt;原本 &lt;code&gt;addtoany.jsx&lt;/code&gt; 的 script 也要修改&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;/addtoany/page.js&amp;quot; defer=&amp;#123;true&amp;#125;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;之後將三個攔截的檔案拷貝整理後，在 &lt;code&gt;source/addtoany&lt;/code&gt; 創建同名檔案&lt;/p&gt;
&lt;p&gt;然後..然後…&lt;br&gt;然後在 &lt;code&gt;core.js&lt;/code&gt; 引用了更多會被攔截的 url…&lt;/p&gt;
&lt;p&gt;估計是進行一些第三方 icon 的載入等等…&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;br&gt;

&lt;h1 id=&#34;結語&#34;&gt;&lt;a href=&#34;#結語&#34; class=&#34;headerlink&#34; title=&#34;結語&#34;&gt;&lt;/a&gt;結語&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/09.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;重新修改 &lt;code&gt;core.js&lt;/code&gt; 的代碼，最終是成功了&lt;/p&gt;
&lt;p&gt;但是&lt;br&gt;修改已經壓縮過的代碼，過程是麻煩且沒營養的&lt;br&gt;處理方法相當於暴力破解，也不排除往後產生其他 ERROR 的可能，故這邊不多贅述———&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;p&gt;如果有幸你也在想辦法處理 AddToAny 的問題，又懶得架 cdn 等方式&lt;/p&gt;
&lt;p&gt;這邊提供整理後的檔案，歡迎參考。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/share_file/shareButton1/addtoany.7z&#34;&gt;addtoany.7z&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MD5: &lt;code&gt;9538bd7a7e38e69b473780f6e8b647ea&lt;/code&gt;&lt;br&gt;SHA1: &lt;code&gt;7ae1581db69d7ae27698fa979988d7a02ddb9f90&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2024/04/23/twikoo1/</guid>
            <title>最近想更換評論系統</title>
            <link>https://smilin.net/2024/04/23/twikoo1/</link>
            <category>日記</category>
            <category>hexo</category>
            <pubDate>Tue, 23 Apr 2024 11:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/img/post/twikoo1/twikoo-logo-home.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;最近想把 blog 的評論系統換了&lt;/p&gt;
&lt;p&gt;原本的 gittalk 免費，開源&lt;br&gt;巧妙利用 github 的 issue，在靜態網站上也能加入評論系統&lt;/p&gt;
&lt;p&gt;存在些許不方便，仍瑕不掩瑜。&lt;/p&gt;
&lt;p&gt;不過既然存在限制，總有人會想開發更好的工具&lt;br&gt;twikoo 就挺符合 blog 需求的&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h1 id=&#34;gittalk&#34;&gt;&lt;a href=&#34;#gittalk&#34; class=&#34;headerlink&#34; title=&#34;gittalk&#34;&gt;&lt;/a&gt;gittalk&lt;/h1&gt;&lt;p&gt;既然原本是用 gittalk，先說說 gittalk 的優點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;與 github page 的高度適配&lt;/li&gt;
&lt;li&gt;基於 issue 特性，綁定 github 帳戶，防止小白&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;兩邊都有的優點不提，大概是這些&lt;br&gt;至於缺點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因為綁在 issue，評論必須先註冊 github&lt;/li&gt;
&lt;li&gt;對中國使用者的支援較差(疑似)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/twikoo1/01.jpg&#34; alt=&#34;01&#34;&gt;&lt;/p&gt;
&lt;p&gt;而且本站基於 gittalk ，魔改了許多功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;撈取最新留言&lt;/li&gt;
&lt;li&gt;撈取熱門留言&lt;/li&gt;
&lt;li&gt;從外部撈取文章留言數&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;替換評論系統，不只是舊有的評論會消失&lt;br&gt;也代表著這些功能都需要重新適配，或是棄用。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;twikoo&#34;&gt;&lt;a href=&#34;#twikoo&#34; class=&#34;headerlink&#34; title=&#34;twikoo&#34;&gt;&lt;/a&gt;twikoo&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://twikoo.js.org/&#34;&gt;官方文檔&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;twikoo 與 gittalk 不同，資料存放於 MongoDB&lt;br&gt;意味著我們需要自行架設 DB 跟 API Server&lt;/p&gt;
&lt;p&gt;不過兩者在網路上都有許多免費資源可用，用來支持一個 blog 的運作綽綽有餘&lt;/p&gt;
&lt;p&gt;說說這個評論系統的優點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;無須登入即可留言&lt;/li&gt;
&lt;li&gt;避免騷擾留言，分別配有多種自動偵測垃圾留言的接口，也能開啟人工審核&lt;/li&gt;
&lt;li&gt;暱稱&amp;amp;信箱&amp;amp;網址 的填寫方式，很有幾十年前，傳統 blog 那味，我超愛&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至於缺點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比起 gittalk，由於個人資料是自由填寫，相對難以得知發文者的背景&lt;/li&gt;
&lt;li&gt;與依附著 github issue 的 gittalk 相比，twikoo 於第三方架設 DB 跟 API Server 環境，長遠來看需要消耗更多的維護成本&lt;/li&gt;
&lt;li&gt;以前的評論會全部消失，嗚嗚嗚&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/twikoo1/02.jpg&#34; alt=&#34;02&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本的配置已經做好了，只是還在猶豫是否該使用&lt;/p&gt;
&lt;p&gt;個人 blog 要提高評論數還是比較難的，至少沒辦法跟社群平台競爭&lt;br&gt;在這個前提下，評論門檻相對高的 gittalk，這份缺點也會被不斷放大&lt;/p&gt;
&lt;p&gt;但 gittalk 同樣有著他本身天然的優勢在——&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2024/04/13/autoPixai/</guid>
            <title>自動領取 Pixai 每日獎勵</title>
            <link>https://smilin.net/2024/04/13/autoPixai/</link>
            <category>node.js</category>
            <category>教學</category>
            <category>docker</category>
            <pubDate>Sat, 13 Apr 2024 19:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/img/post/autoPixai/01.jpg&#34; alt=&#34;title&#34;&gt;&lt;/p&gt;
&lt;p&gt;工程網址&lt;br&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/auto-pixai&#34;&gt;Github&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/smile0301/auto-pixai&#34;&gt;Docker Hub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近幾年 AI 工具日新月異&lt;br&gt;我也有幸接觸了 AI 繪圖的一鱗半爪&lt;/p&gt;
&lt;p&gt;其中 &lt;a href=&#34;https://pixai.art/&#34;&gt;pixai&lt;/a&gt; 是少有的雲端免費算圖網站&lt;/p&gt;
&lt;p&gt;在 pixai 如果對產出來的圖感到滿意的話&lt;br&gt;可以透過 AI 進一步運算，產出會動的圖&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;br&gt;

&lt;p&gt;說是免費，其實還是有些限制的&lt;/p&gt;
&lt;p&gt;在網站上的運算行為都需要消耗點數，無論是靜態或動態&lt;/p&gt;
&lt;p&gt;而點數除了透過付費與活動取得以外&lt;br&gt;pixai 每日都有一萬點數可供會員領取，也就是每日獎勵&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/autoPixai/02.jpg&#34; alt=&#34;每日獎勵&#34;&gt;&lt;/p&gt;
&lt;p&gt;只要每天領取就可以免費算圖了，整個佛心來著對吧&lt;/p&gt;
&lt;p&gt;不過筆者最喜歡花費幾個小時來搞定原本一分鐘可以做到的事情(x&lt;/p&gt;
&lt;hr&gt;
&lt;br&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/auto-pixai&#34;&gt;auto-pixai&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;輸入帳號跟密碼，該腳本執行一次就會自動進網站領取每日獎勵&lt;/p&gt;
&lt;p&gt;使用 node.js 撰寫，另有 Docker 容器化，開箱即用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull smile0301/auto-pixai
docker run -e LOGINNAME=&amp;lt;你的帳號&amp;gt; -e PASSWORD=&amp;lt;你的密碼&amp;gt; --name &amp;lt;container-name&amp;gt; smile0301/auto-pixai
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2024/04/11/giveUp/</guid>
            <title>我的人生不需要英文</title>
            <link>https://smilin.net/2024/04/11/giveUp/</link>
            <category>日記</category>
            <pubDate>Thu, 11 Apr 2024 12:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;https://i.imgur.com/gwL59EQ.jpg&#34; alt=&#34;title&#34;&gt;&lt;/p&gt;
&lt;p&gt;學不會，沒動力學，沒必要學&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;最近，大概半年，持續沒甚麼動力學習&lt;br&gt;只是乏味的原地踏步，工作著&lt;/p&gt;
&lt;p&gt;以前明明每天都會抽空看一點知識的&lt;/p&gt;
&lt;p&gt;原本覺得為了找到更好的工作，我應該開始加強英文，補回我以前怠惰學習的債務&lt;/p&gt;
&lt;p&gt;事實是我對這東西真的完全沒有興趣&lt;/p&gt;
&lt;p&gt;這幾天放棄學習英文後，逐漸找回了那個可以繼續對學習程式有熱忱的自己&lt;/p&gt;
&lt;p&gt;感覺有點悲哀，但又很歡喜&lt;/p&gt;
&lt;p&gt;也許這個人就是如此，既然沒辦法揠苗助長，那就順其自然吧。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/10/27/rust_learning_02/</guid>
            <title>Rust 學習紀錄[2] = Rust 的 NPM</title>
            <link>https://smilin.net/2023/10/27/rust_learning_02/</link>
            <category>Rust</category>
            <pubDate>Fri, 27 Oct 2023 21:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;讓我們接著原本的進度繼續&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;br&gt;

&lt;h1 id=&#34;Cargo&#34;&gt;&lt;a href=&#34;#Cargo&#34; class=&#34;headerlink&#34; title=&#34;Cargo&#34;&gt;&lt;/a&gt;Cargo&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;&lt;code&gt;Cargo&lt;/code&gt; 是 &lt;code&gt;Rust&lt;/code&gt; 的專案建置工具以及套件管理器&lt;br&gt;恩..聽起來是個 &lt;code&gt;npm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我們在安裝 &lt;code&gt;rustup&lt;/code&gt; 時已經一併安裝了 &lt;code&gt;Cargo&lt;/code&gt;&lt;br&gt;使用 &lt;code&gt;cargo --version&lt;/code&gt; 來確認是否正確安裝&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cargo --version // cargo 1.73.0 (9c4383fb5 2023-08-26)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;沒問題的話，接著使用 &lt;code&gt;Cargo&lt;/code&gt; 創建跟昨天相似的專案。&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&#34;創建專案&#34;&gt;&lt;a href=&#34;#創建專案&#34; class=&#34;headerlink&#34; title=&#34;創建專案&#34;&gt;&lt;/a&gt;創建專案&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;在專案目錄(rust_project)下輸入創建專案的指令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo new _02_hello_cargo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;現在我們有名為 &lt;code&gt;_02_hello_cargo&lt;/code&gt; 的資料夾，裡面結構如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;src
  main.rs
.gitignore
Cargo.toml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;src&lt;/code&gt; - 常見程式開發檔案目錄，看就知道&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src\main.rs&lt;/code&gt; - 主程式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; - git 的描述文件，主要功能是防止裡面提到的檔案在 git 傳輸時被包進去(Ex:log&amp;#x2F;target)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Cargo.toml&lt;/code&gt; - 打開來看了下，應該是專案描述文件，對應 node 的 &lt;code&gt;package.json&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&#34;編譯-build&#34;&gt;&lt;a href=&#34;#編譯-build&#34; class=&#34;headerlink&#34; title=&#34;編譯(build)&#34;&gt;&lt;/a&gt;編譯(build)&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;試著 build 起這個專案看看&lt;br&gt;&lt;code&gt;cargo build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;執行後，專案內多出了幾個檔案&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;target
  debug
    _02_hello_cargo.exe
    more debug files...
  .rustc_info.json
  CACHEDIR.TAG
Cargo.lock
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Cargo.lock&lt;/code&gt; - 對應 node 的 &lt;code&gt;package-lock.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;target\debug\_02_hello_cargo.exe&lt;/code&gt; - 我們產出的執行檔，debug 大概是 building 的默認方式，之後應該會有相對嚴謹的方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.\target\debug\_02_hello_cargo // Hello, world!
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

&lt;h2 id=&#34;編譯並運行-run&#34;&gt;&lt;a href=&#34;#編譯並運行-run&#34; class=&#34;headerlink&#34; title=&#34;編譯並運行(run)&#34;&gt;&lt;/a&gt;編譯並運行(run)&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;Cargo 有提供一種命令，可以將編譯與運行合併成一個指令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cargo run // Hello, world!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果開發檔案沒有修改，&lt;code&gt;cargo run&lt;/code&gt; 不會重建 target&lt;br&gt;加上合併兩個步驟，比 &lt;code&gt;cargo build&lt;/code&gt; 方便許多。&lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&#34;檢查-check&#34;&gt;&lt;a href=&#34;#檢查-check&#34; class=&#34;headerlink&#34; title=&#34;檢查(check)&#34;&gt;&lt;/a&gt;檢查(check)&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;除了編譯與運行，Cargo 當然也提供了檢查命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cargo check
  /**
    Checking _02_hello_cargo v0.1.0(C:\my\01\git\rust\_02_hello_cargo)
    Finished dev [unoptimized + debuginfo] target(s) in 0.07s
  **/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;單純的 &lt;code&gt;check&lt;/code&gt; 比 &lt;code&gt;build&lt;/code&gt; 快上許多&lt;br&gt;在自動化部屬等一類場景中廣泛運用。&lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&#34;正式編譯-release&#34;&gt;&lt;a href=&#34;#正式編譯-release&#34; class=&#34;headerlink&#34; title=&#34;正式編譯(release)&#34;&gt;&lt;/a&gt;正式編譯(release)&lt;/h2&gt;&lt;br&gt;

&lt;pre&gt;&lt;code&gt;cargo build --release
  /**
    Compiling _02_hello_cargo v0.1.0 (C:\my\01\git\rust\_02_hello_cargo)
        Finished release [optimized] target(s) in 0.36s
  **/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用 &lt;code&gt;--release&lt;/code&gt; building 的檔案會放在 &lt;code&gt;target\release&lt;/code&gt;&lt;br&gt;與 debug 版本不同，release 的編譯過程比較久，但會最佳化產出的結果&lt;/p&gt;
&lt;p&gt;因此，使用 debug 開發可以有效降低等待編譯的時間&lt;br&gt;需要發佈檔案時，再使用 release。&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&#34;今日小結&#34;&gt;&lt;a href=&#34;#今日小結&#34; class=&#34;headerlink&#34; title=&#34;今日小結&#34;&gt;&lt;/a&gt;今日小結&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;&lt;code&gt;cargo --version&lt;/code&gt; 驗證版本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo new &amp;#123;project_name&amp;#125;&lt;/code&gt; 創建專案&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo build&lt;/code&gt; 編譯專案&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo run&lt;/code&gt; 編譯&amp;amp;運行專案&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo check&lt;/code&gt; 驗證專案&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo build --release&lt;/code&gt; 正式版本的編譯&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/10/27/rust_learning_01/</guid>
            <title>Rust 學習紀錄[1] = 日誌中的教學</title>
            <link>https://smilin.net/2023/10/27/rust_learning_01/</link>
            <category>Rust</category>
            <pubDate>Fri, 27 Oct 2023 18:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;工欲善其事，必先利其器&lt;br&gt;想學一門語言，要從一篇教學文檔找起&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://doc.rust-lang.org/book/&#34;&gt;官方文檔&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;恩，官方文檔看起來挺不錯的，就這個吧&lt;/p&gt;
&lt;p&gt;這篇文撰寫當下，文檔對應 Rust 版本為 &lt;code&gt;Rust 1.67.1 (released 2023-02-09) or later&lt;/code&gt;&lt;br&gt;如果因為版本不同造成閱讀的困擾的話，可以在學會安裝 Rust 後自行降版學習。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;br&gt;

&lt;h1 id=&#34;安裝&#34;&gt;&lt;a href=&#34;#安裝&#34; class=&#34;headerlink&#34; title=&#34;安裝&#34;&gt;&lt;/a&gt;安裝&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;說是 Rust，其實第一個遇到的是 &lt;code&gt;rustup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Window 安裝 rustup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安裝過程一直 Enter 就好，之後在 cmd 下 &lt;code&gt;rustc --version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;得到版本號 &lt;code&gt;rustc 1.73.0 (cc66ad468 2023-10-03)&lt;/code&gt;，表示安裝成功&lt;/p&gt;
&lt;p&gt;其他比較常用的指令還有&lt;/p&gt;
&lt;p&gt;更新 Rust 版本 - &lt;code&gt;rustup update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;卸載 Rust 跟 rustup - &lt;code&gt;rustup self uninstall&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看 Rust Doc 本機離線版 - &lt;code&gt;rustup doc&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;根據 Rust 自己的說明，約莫每兩周會有一次小版更新&lt;br&gt;也因此，除非目標是維護專案，理論上更新版本 &amp;amp; 追蹤文檔改動會很頻繁。&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&#34;HELLO-RUST！&#34;&gt;&lt;a href=&#34;#HELLO-RUST！&#34; class=&#34;headerlink&#34; title=&#34;HELLO RUST！&#34;&gt;&lt;/a&gt;HELLO RUST！&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;首先讓我們創建一個資料夾&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rust_project&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;往後任何的 Rust 程式都會放在這個資料夾下&lt;br&gt;現在在專案資料夾下新增我們要製作的第一個 Rust 程式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rust_project\_01_hello_rust\main.rs&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fn main() &amp;#123;
    println!(&amp;quot;Hello, Rust!&amp;quot;);
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;之後打開 cmd ，輸入以下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rustc main.rs
.\main.exe // 印出 Hello, Rust!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如此，我們完成了第一隻 Rust 程式。&lt;br&gt;&lt;del&gt;超快！！&lt;/del&gt;&lt;br&gt;&lt;del&gt;嘛、畢竟是 Hello World 嘛&lt;/del&gt;&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&#34;感想&#34;&gt;&lt;a href=&#34;#感想&#34; class=&#34;headerlink&#34; title=&#34;感想&#34;&gt;&lt;/a&gt;感想&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;首先注意到的，是執行的指令拆成了兩個&lt;br&gt;分別是 &lt;strong&gt;編譯&lt;/strong&gt; 的行為與 &lt;strong&gt;執行&lt;/strong&gt; 的行為&lt;/p&gt;
&lt;p&gt;編譯出來的檔案是 &lt;code&gt;.exe&lt;/code&gt;，意味著寫好的程式不需要借助 Rust 就能運行&lt;br&gt;這在筆者之前的經驗中是比較少見的&lt;/p&gt;
&lt;p&gt;同樣被編譯出來的還有一個 &lt;code&gt;main.pdb&lt;/code&gt;&lt;br&gt;暫時不知道是做甚麼用的，之後學到再回來更新&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;code&gt;println!();&lt;/code&gt;&lt;br&gt;在這段酷似 JAVASCRIPT 風格的 JAVA 式命名輸出語法上，突兀的出現了個 &lt;code&gt;!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;這是 Rust 的 &lt;code&gt;macro&lt;/code&gt;&lt;br&gt;比起 Rust 的 &lt;code&gt;function&lt;/code&gt;，&lt;code&gt;macro&lt;/code&gt; 更接近 JAVASCRIPT 的 &lt;code&gt;function&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rust 中，存在 &lt;code&gt;fn(function)&lt;/code&gt; 跟 &lt;code&gt;macro_rules(macro)&lt;/code&gt;&lt;br&gt;他們的差別主要在於 &lt;code&gt;function(函式)&lt;/code&gt; 的參數數量是固定的&lt;br&gt;而 &lt;code&gt;macro(巨集)&lt;/code&gt; 則可以動態傳入參數&lt;/p&gt;
&lt;p&gt;&lt;code&gt;println&lt;/code&gt; 預期要能夠傳入多個參數，當他要做格式化傳輸時&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;println!(&amp;quot;Hello, Macro! My name is &amp;#123;&amp;#125;!&amp;quot;, &amp;quot;Smilin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比起 &lt;code&gt;fn&lt;/code&gt;，&lt;code&gt;macro_rules&lt;/code&gt; 顯然更符合需求。&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&#34;今日小結&#34;&gt;&lt;a href=&#34;#今日小結&#34; class=&#34;headerlink&#34; title=&#34;今日小結&#34;&gt;&lt;/a&gt;今日小結&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;&lt;code&gt;rustc --version&lt;/code&gt; 驗證版本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rustup update&lt;/code&gt; 更新 Rust&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rustup self uninstall&lt;/code&gt; 反安裝 Rust&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rustup doc&lt;/code&gt; 運行 Rust Local Doc&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rustc main.rs&lt;/code&gt; 編譯 rs 檔&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.pdb&lt;/code&gt; ???&lt;/p&gt;
&lt;p&gt;&lt;code&gt;macro&lt;/code&gt; 巨集 &amp;#x2F; 宏，可以傳入動態參數&lt;/p&gt;
&lt;p&gt;&lt;code&gt;function&lt;/code&gt; 函式 &amp;#x2F; 方法，宣告時就要規範好參數數量與型別&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&#34;資料參考&#34;&gt;&lt;a href=&#34;#資料參考&#34; class=&#34;headerlink&#34; title=&#34;資料參考&#34;&gt;&lt;/a&gt;資料參考&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;&lt;a href=&#34;https://doc.rust-lang.org/book/&#34;&gt;Rust 官方文檔&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Window 安裝 rustup&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/10/27/rust_learning_00/</guid>
            <title>Rust 學習紀錄[0] = 前言</title>
            <link>https://smilin.net/2023/10/27/rust_learning_00/</link>
            <category>Rust</category>
            <pubDate>Fri, 27 Oct 2023 12:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Rust_programming_language_black_logo.svg/216px-Rust_programming_language_black_logo.svg.png&#34; alt=&#34;Rust&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;2021 年 2 月，Rust 基金會成立&lt;/p&gt;
&lt;p&gt;以 AWS、GOOGLE 等多家資訊巨頭為首&lt;br&gt;因為看好 Rust 兼顧了高效能 &amp;amp; 安全性而投資&lt;br&gt;使得 Rust 這兩年有了巨大的成長。&lt;/p&gt;
&lt;p&gt;這也是為什麼，近幾年工程師無論如何不願意&lt;br&gt;多少也會聽過 Rust 的名號，隱隱有與 C++ 並駕齊驅的勢頭。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;筆者平常習慣 node.js or java 的開發，接觸 Rust 算是偶然&lt;br&gt;剛好想嘗試所謂能真正實現高效能程式碼(沒碰過 C++)&lt;/p&gt;
&lt;p&gt;做為學習動力，一方面會將自己的學習過程發布在 blog&lt;br&gt;另一方面打算在學到一個階段後，試著用 Rust 構建一個微型社群平台，當作目標。&lt;/p&gt;
&lt;p&gt;本次系列與其說是教學，更像是日記一類的東西，如果能激起看這篇文的你的興趣的話，我會很高興的。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/09/15/deepCopyAndShallowCopy/</guid>
            <title>淺談 js 深拷貝與淺拷貝的差異</title>
            <link>https://smilin.net/2023/09/15/deepCopyAndShallowCopy/</link>
            <category>javascript</category>
            <pubDate>Fri, 15 Sep 2023 12:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Deep-copy-和-Shallow-copy&#34;&gt;&lt;a href=&#34;#Deep-copy-和-Shallow-copy&#34; class=&#34;headerlink&#34; title=&#34;Deep copy 和 Shallow copy&#34;&gt;&lt;/a&gt;Deep copy 和 Shallow copy&lt;/h1&gt;&lt;br&gt;

&lt;p&gt;先來個考題：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a = &amp;#123; foo: &amp;quot;bar&amp;quot; &amp;#125;;
b = a;
b.foo = &amp;quot;baz&amp;quot;;

console.log(a.foo); // 印出?
&lt;/code&gt;&lt;/pre&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;details&gt;
&lt;summary&gt;答案&lt;/summary&gt;
&lt;br&gt;
baz
&lt;/details&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;下一題：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a = &amp;#123; foo: &amp;quot;bar&amp;quot; &amp;#125;;
b = structuredClone(a); // 深拷貝
b.foo = &amp;quot;baz&amp;quot;;

console.log(a.foo); // 印出?
&lt;/code&gt;&lt;/pre&gt;
&lt;details&gt;
&lt;summary&gt;答案&lt;/summary&gt;
&lt;br&gt;
bar  
&lt;br&gt;&lt;br&gt;
深拷貝(Deep Copy) 可以將內層對象一併拷貝  
&lt;/details&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;br&gt;

&lt;h2 id=&#34;Shallow-copy&#34;&gt;&lt;a href=&#34;#Shallow-copy&#34; class=&#34;headerlink&#34; title=&#34;Shallow copy&#34;&gt;&lt;/a&gt;Shallow copy&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;淺拷貝(Shallow Copy) 與深拷貝同樣是用來拷貝物件層級，避免指向同一記憶體位置&lt;/p&gt;
&lt;p&gt;與深拷貝不同的是，淺拷貝只會複製第一層的對象，如果是 &lt;code&gt;Object.Object&lt;/code&gt; 的結構就沒轍。&lt;/p&gt;
&lt;br&gt;

&lt;h3 id=&#34;Object-assign&#34;&gt;&lt;a href=&#34;#Object-assign&#34; class=&#34;headerlink&#34; title=&#34;Object.assign&#34;&gt;&lt;/a&gt;Object.assign&lt;/h3&gt;&lt;br&gt;

&lt;p&gt;&lt;code&gt;Object.assign&lt;/code&gt; 屬於淺拷貝(Shallow Copy)&lt;br&gt;在上述案例中，可以得到跟深拷貝一樣的結果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a = &amp;#123; foo: &amp;#123; fpp: &amp;quot;bar&amp;quot; &amp;#125; &amp;#125;;
b = Object.assign(&amp;#123;&amp;#125;, a);
b.foo.fpp = &amp;quot;baz&amp;quot;;

console.log(a.foo.fpp); // 印出baz
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

&lt;h3 id=&#34;解構賦值&#34;&gt;&lt;a href=&#34;#解構賦值&#34; class=&#34;headerlink&#34; title=&#34;解構賦值&#34;&gt;&lt;/a&gt;解構賦值&lt;/h3&gt;&lt;br&gt;

&lt;p&gt;解構賦值是 &lt;code&gt;ES6&lt;/code&gt; 以後的語法糖，同樣屬於淺拷貝&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;const a = &amp;#123; b: 1 &amp;#125;;
const c = &amp;#123; ...a &amp;#125;; // 解構賦值
c.b = 2;
console.log(a); // &amp;#123; b: 1 &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得益於其精簡的代碼，實務上很常使用。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;br&gt;

&lt;h2 id=&#34;Deep-copy&#34;&gt;&lt;a href=&#34;#Deep-copy&#34; class=&#34;headerlink&#34; title=&#34;Deep copy&#34;&gt;&lt;/a&gt;Deep copy&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;與前面提到的淺拷貝不同，深拷貝對於深層結構也能一併複製&lt;/p&gt;
&lt;br&gt;

&lt;h3 id=&#34;早期的深拷貝&#34;&gt;&lt;a href=&#34;#早期的深拷貝&#34; class=&#34;headerlink&#34; title=&#34;早期的深拷貝&#34;&gt;&lt;/a&gt;早期的深拷貝&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;JSON.parse(JSON.stringify());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這個寫法大致上有以下缺點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;忽略 &lt;code&gt;function&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;忽略原形鏈&lt;/li&gt;
&lt;li&gt;忽略 &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;子層太多會導致 &lt;code&gt;stack overflow&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;儘管如此，由於已經可以處理大多狀況&lt;br&gt;如果不是為了性能或是特殊邏輯，此寫法已經夠用，是常見的深拷貝實現。&lt;/p&gt;
&lt;br&gt;

&lt;h3 id=&#34;structuredClone&#34;&gt;&lt;a href=&#34;#structuredClone&#34; class=&#34;headerlink&#34; title=&#34;structuredClone&#34;&gt;&lt;/a&gt;structuredClone&lt;/h3&gt;&lt;p&gt;&lt;code&gt;structuredClone&lt;/code&gt; 是 &lt;code&gt;node.js&lt;/code&gt; 17 版以後支援的官方深拷貝實現&lt;/p&gt;
&lt;p&gt;目前各大瀏覽器默認支援此語法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/tPXjO1o.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;code&gt;structuredClone&lt;/code&gt; 存在一些限制&lt;/p&gt;
&lt;p&gt;不允許結構中存在 &lt;code&gt;Error&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 以及 &lt;code&gt;DOM&lt;/code&gt; 對象&lt;/p&gt;
&lt;p&gt;不保留 &lt;code&gt;RegExp&lt;/code&gt; 對象的 &lt;code&gt;lastIndex&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不保留 &lt;code&gt;read-only&lt;/code&gt; 等描述符，即無法限制 &lt;code&gt;setters&lt;/code&gt; &lt;code&gt;getters&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不保留原形鏈&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/09/11/alist-file-error/</guid>
            <title>Alist 單檔太大上傳失敗，思路整理</title>
            <link>https://smilin.net/2023/09/11/alist-file-error/</link>
            <category>Alist</category>
            <category>Cloudflare</category>
            <pubDate>Mon, 11 Sep 2023 18:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;註：本文並沒有完全解決遇到的上傳問題&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;筆者只想到替代方案，曲線救國&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;筆者是自建雲端的愛用者，目前使用 Alist&lt;/p&gt;
&lt;p&gt;前一陣子因為自身需求，添加了 Cloudflare 反向代理&lt;/p&gt;
&lt;p&gt;原本一切看起來都很美好，但某天上傳檔案時才發現不對，只要檔案大於 100 MB 就有機會遇到 413 問題。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/rNNhTq5.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://alist.nn.ci/zh/guide/install/reverse-proxy.html&#34;&gt;官方的反向代理配置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以看到，文檔下大多也是哀鴻遍野，看來只要配置了反代很容易就會碰到這個問題&lt;/p&gt;
&lt;p&gt;尤其文檔不支援 Cloudflare，實在頭痛..&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h1 id=&#34;問題排查&#34;&gt;&lt;a href=&#34;#問題排查&#34; class=&#34;headerlink&#34; title=&#34;問題排查&#34;&gt;&lt;/a&gt;問題排查&lt;/h1&gt;&lt;h2 id=&#34;NGINX-設定-client-max-body-size&#34;&gt;&lt;a href=&#34;#NGINX-設定-client-max-body-size&#34; class=&#34;headerlink&#34; title=&#34;NGINX 設定 client_max_body_size&#34;&gt;&lt;/a&gt;NGINX 設定 client_max_body_size&lt;/h2&gt;&lt;p&gt;參考資料時，大多資料都指向是 NGINX 設定的問題&lt;br&gt;只要將 &lt;code&gt;client_max_body_size&lt;/code&gt; 上限拉高即可解決&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server &amp;#123;
    ．．．．．．．．．
    location / &amp;#123;
    ．．．．
        client_max_body_size 10G;
    ．．．．
    &amp;#125;
    ．．．．．．．．．
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不過筆者並沒有使用到 NGINX，此解顯然並非這次遇到的問題&lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&#34;Cloudflare-緩存問題&#34;&gt;&lt;a href=&#34;#Cloudflare-緩存問題&#34; class=&#34;headerlink&#34; title=&#34;Cloudflare 緩存問題&#34;&gt;&lt;/a&gt;Cloudflare 緩存問題&lt;/h2&gt;&lt;p&gt;爬文發現有人提到可能是 Cloudflare 緩存的問題&lt;/p&gt;
&lt;p&gt;在 Rule -&amp;gt; Page Rules -&amp;gt; Create Page Rule&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/N8gi01N.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;p&gt;之後再到 Caching -&amp;gt; Cache Rules -&amp;gt; Create rule&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/TAkvVl3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt;
&lt;p&gt;設定完後再上傳，成功迴避掉 413 問題!&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&#34;新的問題&#34;&gt;&lt;a href=&#34;#新的問題&#34; class=&#34;headerlink&#34; title=&#34;新的問題&#34;&gt;&lt;/a&gt;新的問題&lt;/h1&gt;&lt;p&gt;甜美的日子沒過多久&lt;br&gt;雖然照著上述配置後，不會再出現 413 了，但..&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/hHjLAns.png&#34; alt=&#34;4&#34;&gt;&lt;/p&gt;
&lt;p&gt;馬上就遇到新的錯誤了 QQ…&lt;/p&gt;
&lt;p&gt;這個問題問 google 大神也沒甚麼好辦法&lt;br&gt;沒辦法囉，只好再次自己動手檢查&lt;/p&gt;
&lt;h2 id=&#34;測試過程&#34;&gt;&lt;a href=&#34;#測試過程&#34; class=&#34;headerlink&#34; title=&#34;測試過程&#34;&gt;&lt;/a&gt;測試過程&lt;/h2&gt;&lt;p&gt;Error Log 只寫了網路問題，偶而會提示&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;&amp;quot;message&amp;quot;:&amp;quot;A listener indicated an asynchronous response by returning true, but the message channel closed before a response was received&amp;quot;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;猜測是 Cloudflare 提早關閉了連線&lt;/p&gt;
&lt;p&gt;有趣的是只要同時下載檔案，上傳不會失敗&lt;/p&gt;
&lt;p&gt;開啟 Cloudflare Development Mode ，上傳失敗&lt;/p&gt;
&lt;h2 id=&#34;Cloudflare-免費版限制&#34;&gt;&lt;a href=&#34;#Cloudflare-免費版限制&#34; class=&#34;headerlink&#34; title=&#34;Cloudflare 免費版限制&#34;&gt;&lt;/a&gt;Cloudflare 免費版限制&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/lm8M9jc.png&#34; alt=&#34;5&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cloudflare 免費版用戶上傳檔案時，有著 100MB 的上限&lt;/p&gt;
&lt;p&gt;Alist 僅支援單檔上傳&lt;br&gt;&lt;a href=&#34;https://github.com/alist-org/alist/issues/5176&#34;&gt;github issue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;想來或許就是在這關上卡住了&lt;/p&gt;
&lt;p&gt;如開發者所說， Alist 的上傳存在一定的缺陷&lt;/p&gt;
&lt;p&gt;就算不使用 Cloudflare，直連上傳過大的檔案也有機會失敗&lt;/p&gt;
&lt;p&gt;好在除此之外功能正常，頂多不透過網頁，自行額外實現上傳方法即可(Ex:webdav&amp;#x2F;ftp&amp;#x2F;nasGui&amp;#x2F;local..)&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;p&gt;文章參考:&lt;br&gt;&lt;a href=&#34;https://lanwp.org/12-cloudreve-nextcloud-alist-and-cloudflare_cdn/&#34;&gt;https://lanwp.org/12-cloudreve-nextcloud-alist-and-cloudflare_cdn/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/09/06/alist-started/</guid>
            <title>Alist 好用的自建雲端分享</title>
            <link>https://smilin.net/2023/09/06/alist-started/</link>
            <category>Alist</category>
            <pubDate>Wed, 06 Sep 2023 10:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;隨著 GOOGLE &amp;#x2F; ONEDRIVE 等空間限制增多&lt;/p&gt;
&lt;p&gt;筆者轉為使用自架雲端方案一段時間，其中特別中意 Alist 的畫面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/cwZF7fX.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;高自定義的 UI，強大的用戶管理&lt;br&gt;最重要的是在目錄下默認讀取 readme.md 做介紹！&lt;/p&gt;
&lt;p&gt;整理雲端檔案，最常遇到的難題&lt;br&gt;就是多年後很難輕易在一堆檔案中找到自己需要的資料&lt;/p&gt;
&lt;p&gt;除此以外還支援&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元數據(載入特定目錄會跳出的訊息)&lt;/li&gt;
&lt;li&gt;文件搜索&lt;/li&gt;
&lt;li&gt;雲端掛載(GD&amp;#x2F;OD&amp;#x2F;MEGA&amp;#x2F;還有一堆..)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Alist 不僅能讓雲端變得美觀，還能很輕鬆的管理文件&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Alist-官方文檔&#34;&gt;&lt;a href=&#34;#Alist-官方文檔&#34; class=&#34;headerlink&#34; title=&#34;Alist 官方文檔&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://alist.nn.ci/zh/&#34;&gt;Alist 官方文檔&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/pbxhpkZ.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;p&gt;從文檔首頁可以感受到，Alist 有著強大的功能&lt;/p&gt;
&lt;p&gt;因為支援中文，在閱讀文檔時不會遇到障礙&lt;/p&gt;
&lt;h2 id=&#34;環境建置&#34;&gt;&lt;a href=&#34;#環境建置&#34; class=&#34;headerlink&#34; title=&#34;環境建置&#34;&gt;&lt;/a&gt;環境建置&lt;/h2&gt;&lt;p&gt;筆者使用 Docker 運行 Alist&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull xhofe/alist:v3.13.2

docker run -d --restart=always -v &amp;#123;你的本機目錄&amp;#125;:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&amp;quot;alist&amp;quot; xhofe/alist:v3.13.2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;記得將上方的 {你的本機目錄} 替換成你的環境&lt;/p&gt;
&lt;p&gt;Container run 起後使用這段指令查看預設帳號密碼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker exec -it alist ./alist admin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/sKMQUPf.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/wvAH9Od.png&#34; alt=&#34;4&#34;&gt;&lt;/p&gt;
&lt;p&gt;登入成功後我們會回到首頁，這裡目前甚麼都沒有&lt;/p&gt;
&lt;p&gt;在網址後方加入 @manage 進入控制台&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/8ziYJ8B.png&#34; alt=&#34;5&#34;&gt;&lt;/p&gt;
&lt;p&gt;這邊先將管理員帳密改成你好記的樣子&lt;/p&gt;
&lt;p&gt;在存儲可以添加需要加入到 Alist 的空間&lt;br&gt;從基本的本地環境到雲端都可以放在 Alist 管理&lt;/p&gt;
&lt;p&gt;設置雲端掛載時記得根據 Alist 版本，查看對應的文檔，留意任何留言，記得備份~&lt;/p&gt;
&lt;p&gt;筆者這邊以本地環境做示範&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;br&gt;

&lt;p&gt;首先到設定 {你的本機目錄} 的地方，創建一個資料夾&lt;/p&gt;
&lt;p&gt;這會做為未來我們掛載本地檔案的路徑&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/FKzeLks.png&#34; alt=&#34;6&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;驅動選擇 本地存儲&lt;/li&gt;
&lt;li&gt;掛載路徑 &amp;#x2F;{資料夾名稱}&lt;/li&gt;
&lt;li&gt;根資料夾路徑 &amp;#x2F;opt&amp;#x2F;alist&amp;#x2F;data&amp;#x2F;{資料夾名稱}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/oCqbTCR.png&#34; alt=&#34;7&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://i.imgur.com/mOr53lK.png&#34; alt=&#34;8&#34;&gt;&lt;/p&gt;
&lt;p&gt;設定完大致如上&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ZimHdEW.png&#34; alt=&#34;9&#34;&gt;&lt;/p&gt;
&lt;p&gt;回首頁看就會有空間了!&lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&#34;實用-CSS&#34;&gt;&lt;a href=&#34;#實用-CSS&#34; class=&#34;headerlink&#34; title=&#34;實用 CSS&#34;&gt;&lt;/a&gt;實用 CSS&lt;/h2&gt;&lt;p&gt;Alist 後台的 “設置” ，可以調整絕大多數的 UI 畫面&lt;br&gt;不過如果想自定義一些細節，推薦使用 CSS 達成&lt;/p&gt;
&lt;p&gt;設置 -&amp;gt; 全域設定 -&amp;gt; 自定義頭部&lt;/p&gt;
&lt;p&gt;可以在這做自定義 CSS 的添加&lt;br&gt;以下提供一些不錯的樣式&lt;/p&gt;
&lt;br&gt;

&lt;h3 id=&#34;去除網站圖標與搜索&#34;&gt;&lt;a href=&#34;#去除網站圖標與搜索&#34; class=&#34;headerlink&#34; title=&#34;去除網站圖標與搜索&#34;&gt;&lt;/a&gt;去除網站圖標與搜索&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.hope-stack.hope-c-dhzjXW.hope-c-PJLV.hope-c-PJLV-iiOacaA-css &amp;#123;display: none!important;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;站點公告去除-X-關閉按鈕&#34;&gt;&lt;a href=&#34;#站點公告去除-X-關閉按鈕&#34; class=&#34;headerlink&#34; title=&#34;站點公告去除 X 關閉按鈕&#34;&gt;&lt;/a&gt;站點公告去除 X 關閉按鈕&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.notify-render .hope-close-button&amp;#123;display: none;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用背景圖-亮色背景-GIF-可用&#34;&gt;&lt;a href=&#34;#使用背景圖-亮色背景-GIF-可用&#34; class=&#34;headerlink&#34; title=&#34;使用背景圖(亮色背景)(GIF 可用)&#34;&gt;&lt;/a&gt;使用背景圖(亮色背景)(GIF 可用)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.hope-ui-light&amp;#123;background-image: url(&amp;quot;&amp;quot;)!important;background-repeat:no-repeat;background-size:cover;background-attachment:fixed;background-position-x:center;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用背景圖-暗色背景-GIF-可用&#34;&gt;&lt;a href=&#34;#使用背景圖-暗色背景-GIF-可用&#34; class=&#34;headerlink&#34; title=&#34;使用背景圖(暗色背景)(GIF 可用)&#34;&gt;&lt;/a&gt;使用背景圖(暗色背景)(GIF 可用)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.hope-ui-dark &amp;#123;background-image: url(&amp;quot;&amp;quot;) !important;background-repeat:no-repeat;background-size:cover;background-attachment:fixed;background-position-x:center;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;列表改透明-亮色背景&#34;&gt;&lt;a href=&#34;#列表改透明-亮色背景&#34; class=&#34;headerlink&#34; title=&#34;列表改透明(亮色背景)&#34;&gt;&lt;/a&gt;列表改透明(亮色背景)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.obj-box.hope-stack.hope-c-dhzjXW.hope-c-PJLV.hope-c-PJLV-igScBhH-css&amp;#123;background-color: rgba(255, 255, 255, 0.5) !important;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;列表改透明-暗色背景&#34;&gt;&lt;a href=&#34;#列表改透明-暗色背景&#34; class=&#34;headerlink&#34; title=&#34;列表改透明(暗色背景)&#34;&gt;&lt;/a&gt;列表改透明(暗色背景)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.obj-box.hope-stack.hope-c-dhzjXW.hope-c-PJLV.hope-c-PJLV-iigjoxS-css&amp;#123;background-color:rgb(0 0 0 / 50%) !important;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;元信息改透明-亮色背景&#34;&gt;&lt;a href=&#34;#元信息改透明-亮色背景&#34; class=&#34;headerlink&#34; title=&#34;元信息改透明(亮色背景)&#34;&gt;&lt;/a&gt;元信息改透明(亮色背景)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.hope-c-PJLV.hope-c-PJLV-ikSuVsl-css&amp;#123;background-color: rgba(255, 255, 255, 0.5)!important;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;元信息改透明-暗色背景&#34;&gt;&lt;a href=&#34;#元信息改透明-暗色背景&#34; class=&#34;headerlink&#34; title=&#34;元信息改透明(暗色背景)&#34;&gt;&lt;/a&gt;元信息改透明(暗色背景)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.hope-c-PJLV.hope-c-PJLV-iiuDLME-css&amp;#123;background-color:rgb(0 0 0 / 50%)!important;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;去除尾頁&#34;&gt;&lt;a href=&#34;#去除尾頁&#34; class=&#34;headerlink&#34; title=&#34;去除尾頁&#34;&gt;&lt;/a&gt;去除尾頁&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.footer &amp;#123;display: none !important;&amp;#125;]&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;移除下載選項&#34;&gt;&lt;a href=&#34;#移除下載選項&#34; class=&#34;headerlink&#34; title=&#34;移除下載選項&#34;&gt;&lt;/a&gt;移除下載選項&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;.hope-select__trigger.hope-c-kvTTWD.hope-c-huZphZ.hope-c-kvTTWD-hYRNAb-variant-filled.hope-c-kvTTWD-gfwxhr-size-md.hope-c-huZphZ-cIGthf-cv.hope-c-PJLV.hope-c-PJLV-ijSQbqe-css&amp;#123;display: none !important;&amp;#125;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

&lt;p&gt;推薦一些網站:&lt;br&gt;&lt;a href=&#34;https://anwen-anyi.github.io/&#34;&gt;Alist 魔改代碼分享&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://telegra.ph/AList-UI-01-11&#34;&gt;CSS 參考&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/06/01/discordJs14-1/</guid>
            <title>discord.js 升上 14 版，架構說明</title>
            <link>https://smilin.net/2023/06/01/discordJs14-1/</link>
            <category>node.js</category>
            <category>bot</category>
            <category>discord</category>
            <category>discord.js</category>
            <pubDate>Thu, 01 Jun 2023 20:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/AliceZero/tree/v14&#34;&gt;github 連結&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;從 2021 年，discord.js 升上 13 版&lt;br&gt;heroku 改成收費&lt;br&gt;youtube 不喜歡 discord 蹭他們的服務&lt;br&gt;音樂機器人相繼關閉 yt 服務&lt;br&gt;12 版許多功能時常報錯&lt;br&gt;discord.js 升上 14 版..&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;期間不管是工作又或是休假時，都很希望能升級以前寫的機器人&lt;br&gt;不斷想重構出更好維護的程式架構，也一再推翻之前的程式&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;終於..！在最近 Alice 也正式升上了 discord.js 14.11.0 版本&lt;br&gt;不會總是因為舊版本不支援而爆炸啦！(誤)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/M6hj8wU.jpg&#34; alt=&#34;levelUp!&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;br&gt;

&lt;hr&gt;
&lt;br&gt;

&lt;h2 id=&#34;安裝套件&#34;&gt;&lt;a href=&#34;#安裝套件&#34; class=&#34;headerlink&#34; title=&#34;安裝套件&#34;&gt;&lt;/a&gt;安裝套件&lt;/h2&gt;&lt;p&gt;必備&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node.js v16.9.0 或以上&lt;/li&gt;
&lt;li&gt;Discord.js v14.11.0&lt;br&gt;discord.js 核心套件&lt;pre&gt;&lt;code&gt;npm install discord.js@14.11.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;dotenv v16.0.3&lt;br&gt;讀取 .env ，即 token 的套件&lt;pre&gt;&lt;code&gt;npm install dotenv@16.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt;點我展開BDB(baseDiscordBot.js)所需套件&lt;/summary&gt;

&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;@discordjs&amp;#x2F;builders v1.3.0&lt;br&gt;discord.js 提供的類別產生器類型&lt;pre&gt;&lt;code&gt;npm install @discordjs/builders@1.3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;

&lt;br&gt;

&lt;details&gt;
&lt;summary&gt;點我展開音樂系統所需套件&lt;/summary&gt;

&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;@discordjs&amp;#x2F;voice v0.16.0&lt;br&gt;控制 discord 語音的核心套件&lt;br&gt;p.s.使用舊版本極度容易出現問題，如果播放過程發生 bug 可以先檢查 voice 是不是最新版&lt;pre&gt;&lt;code&gt;npm install @discordjs/voice@0.16.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;@discordjs&amp;#x2F;opus v0.9.0&lt;br&gt;Opus 編碼器&lt;pre&gt;&lt;code&gt;npm install @discordjs/opus@0.9.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;ffmpeg-static v5.1.0&lt;br&gt;ffmpeg 轉碼器&lt;pre&gt;&lt;code&gt;npm install ffmpeg-static@5.1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;libsodium-wrappers v0.7.11&lt;br&gt;串流加密工具&lt;pre&gt;&lt;code&gt;npm install libsodium-wrappers@0.7.11
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;play-dl v1.9.6&lt;br&gt; 串流套件，取代 ytdl-core&lt;pre&gt;&lt;code&gt;npm install play-dl@1.9.6
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;

&lt;br&gt;

&lt;details&gt;
&lt;summary&gt;點我展開Render託管推薦套件&lt;/summary&gt;

&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;axios v1.4.0&lt;br&gt;打 http 使用的套件&lt;pre&gt;&lt;code&gt;npm install axios@1.4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;node-schedule v2.1.0&lt;br&gt;定時任務套件&lt;pre&gt;&lt;code&gt;npm node-schedule@2.1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;

&lt;br&gt;

&lt;hr&gt;
&lt;br&gt;

&lt;h2 id=&#34;前置動作&#34;&gt;&lt;a href=&#34;#前置動作&#34; class=&#34;headerlink&#34; title=&#34;前置動作&#34;&gt;&lt;/a&gt;前置動作&lt;/h2&gt;&lt;p&gt;如果是舊版 discord bot ，要先去 &lt;a href=&#34;https://discord.com/developers/applications&#34;&gt;discordDeveloper&lt;/a&gt;&lt;br&gt;選中自己的 bot 後，選擇左邊 Bot 選項，然後將這邊的開關都打開&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/GoIc5Ld.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;p&gt;這是一些限制機器人存取特定資訊的開關，默認是關閉的，如果沒有打開，就算在程式中要求存取權，也是拿不到這些資訊的喔！&lt;/p&gt;
&lt;p&gt;之後在專案根目錄創建一個 &lt;code&gt;.env&lt;/code&gt; 檔案，性質類似於以前教學中的 &lt;code&gt;auth.json&lt;/code&gt;&lt;br&gt;差別在於，放在 &lt;code&gt;Environment&lt;/code&gt; 的參數意味著參數不該被公開，不會在任何的公開場合獲得此類 value (例如 github)，僅在執行專案時會被注入&lt;/p&gt;
&lt;h3 id=&#34;env-預覽&#34;&gt;&lt;a href=&#34;#env-預覽&#34; class=&#34;headerlink&#34; title=&#34;.env 預覽&#34;&gt;&lt;/a&gt;.env 預覽&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;TOKEN=&amp;quot;your bot token&amp;quot;
MASTER_ID=&amp;quot;your client ID&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;專案結構&#34;&gt;&lt;a href=&#34;#專案結構&#34; class=&#34;headerlink&#34; title=&#34;專案結構&#34;&gt;&lt;/a&gt;專案結構&lt;/h2&gt;&lt;br&gt;

&lt;details&gt;
&lt;summary&gt;點我展開專案結構&lt;/summary&gt;

&lt;p&gt;AliceZero&amp;#x2F;&lt;br&gt;├─ baseJS&amp;#x2F;&lt;br&gt;│ 　　 ├ BaseDiscordBot.js&lt;br&gt;│ 　　 ├ CatchF.js&lt;br&gt;│ 　　 ├ CronTask.js&lt;br&gt;│ 　　 ├ HealthCheck.js&lt;br&gt;├─ manager&amp;#x2F;&lt;br&gt;│ 　　 ├ buttonManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ commands&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpNowQueue.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpPause.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpPlay.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpPlayFirst.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpResume.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpSkip.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpSleep.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpTrpgDice.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ helpTrpgSort.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ myKiritoSkillNicename.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ myKiritoSkillSkill.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ myKiritoSkillStatus.js&lt;br&gt;│ 　　 ├ 　　 ├ buttonC.js&lt;br&gt;│ 　　 ├ 　　 ├ buttonM.js&lt;br&gt;│ 　　 ├ 　　 ├ buttonType.json&lt;br&gt;│ 　　 ├ componentManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ componentM.js&lt;br&gt;│ 　　 ├ embedManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ embedC.js&lt;br&gt;│ 　　 ├ messageManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ messageC.js&lt;br&gt;│ 　　 ├ 　　 ├ messageM.js&lt;br&gt;│ 　　 ├ 　　 ├ messagePrefix.json&lt;br&gt;│ 　　 ├ 　　 ├ messageUpdateM.js&lt;br&gt;│ 　　 ├ 　　 ├ nineData.js&lt;br&gt;│ 　　 ├ musicManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ musicC.js&lt;br&gt;│ 　　 ├ 　　 ├ musicM.js&lt;br&gt;│ 　　 ├ mykiritoManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ requests&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ boss.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ level.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ skill.js&lt;br&gt;│ 　　 ├ 　　 ├ myKiritoC.js&lt;br&gt;│ 　　 ├ 　　 ├ myKiritoM.js&lt;br&gt;│ 　　 ├ selectMenuManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ commands&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ help.js&lt;br&gt;│ 　　 ├ 　　 ├ selectMenuC.js&lt;br&gt;│ 　　 ├ 　　 ├ selectMenuM.js&lt;br&gt;│ 　　 ├ slashManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ commands&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ help.js&lt;br&gt;│ 　　 ├ 　　 ├ 　　 ├ m.js&lt;br&gt;│ 　　 ├ 　　 ├ slashM.js&lt;br&gt;│ 　　 ├ trpgManager&amp;#x2F;&lt;br&gt;│ 　　 ├ 　　 ├ trpgC.js&lt;br&gt;│ 　　 ├ 　　 ├ trpgM.js&lt;br&gt;├─ .env&lt;br&gt;├─ alice.js&lt;br&gt;├─ package.json&lt;br&gt;├─ package-lock.json&lt;/p&gt;
&lt;/details&gt;

&lt;br&gt;

&lt;p&gt;因為這篇不是教學，不會一個個講解，大概說明一下各 Manager 的作用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BaseDiscordBot.js&lt;br&gt;從登入 token 到訊息傳送&lt;br&gt;與 discord.js 的任何交互都在這，唯一引用 discord.js 的地方&lt;br&gt;好處是當 discord.js 改版時只要更改 BDB 即可&lt;br&gt;壞處是其他地方的邏輯可能會比較難以理解，都需要點進 BDB 查看&lt;/li&gt;
&lt;li&gt;CatchF.js&lt;br&gt;自定義的 log 工具，改這裡就可以一次更改所有的 log style&lt;/li&gt;
&lt;li&gt;CronTask.js&lt;br&gt;託管平台用到的工具&lt;/li&gt;
&lt;li&gt;HealthCheck.js&lt;br&gt;同上&lt;/li&gt;
&lt;li&gt;alice.js&lt;br&gt;&lt;code&gt;npm start&lt;/code&gt; 的執行檔，敘述了啟動時會執行的內容&lt;/li&gt;
&lt;li&gt;slashManager&lt;br&gt;discord.js 13 版以後新增的斜線指令，包含其註冊與監聽的方法都寫在這&lt;br&gt;commands 可以看出這個 bot 目前有多少指令(本次範例來說有 &lt;code&gt;help&lt;/code&gt; 跟 &lt;code&gt;m&lt;/code&gt; 指令)&lt;/li&gt;
&lt;li&gt;messageManager&lt;br&gt;傳統 bot 對文字訊息回應的主要行為，&lt;code&gt;messageUpdate&lt;/code&gt; 訊息更新觸發的行為也放在這&lt;/li&gt;
&lt;li&gt;selectMenuManager&lt;br&gt;菜單組件，commands 可以看出這個 bot 目前有多少菜單組件&lt;/li&gt;
&lt;li&gt;buttonManager&lt;br&gt;按鈕組件，commands 可以看出這個 bot 目前有多少按鈕組件&lt;/li&gt;
&lt;li&gt;embedManager&lt;br&gt;嵌入式訊息組件，&lt;code&gt;@discordjs/builders&lt;/code&gt; 有著 &lt;code&gt;EmbedBuilder&lt;/code&gt; 這個 embed 產生器&lt;br&gt;避免往後的更新要改一堆地方，在 BDB 中被繼承完才給 embedManager 使用&lt;/li&gt;
&lt;li&gt;componentManager&lt;br&gt;組件管理器，當訊息非單純的文字訊息，有使用到 菜單 &amp;#x2F; 按鈕 &amp;#x2F; 嵌入訊息 任一組件時，會從這裡拿&lt;/li&gt;
&lt;li&gt;musicManager&lt;br&gt;音樂相關邏輯，musicM 負責定義邏輯，musicC 實例實際內容，與 &lt;code&gt;play-dl&lt;/code&gt; 等套件互動&lt;/li&gt;
&lt;li&gt;trpgManager&lt;br&gt;派對系統，目前只會骰骰子，而且 code 還是從舊版直接搬過來的..&lt;/li&gt;
&lt;li&gt;mykiritoManager&lt;br&gt;攻略組系統，提供 mykirito 大群的資訊查詢，雖然很久沒更新，但仍然還有人在使用，所以也更新過來了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/AliceZero/tree/v14&#34;&gt;github 連結&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;現在的架構算是終於確定下來，以後會在這個架構上繼續更新&lt;br&gt;不過畢竟是 side project ，架構中有些地方整理的比較草率&lt;br&gt;如果之後寫教學，會重新寫一個 bot 的&lt;/p&gt;
&lt;p&gt;看到這裡的朋友，如果在寫 bot ，但苦於不知該如何下手的話&lt;br&gt;這裡推薦可以看看 &lt;a href=&#34;https://b-l-u-e-b-e-r-r-y.github.io/post/DiscordBot03/&#34;&gt;藍莓大大&lt;/a&gt; 的文章&lt;br&gt;淺顯以懂，最後甚至是給了乾貨，可以直接載了拿去用~&lt;/p&gt;
&lt;p&gt;或是使用 &lt;a href=&#34;https://github.com/Mr-Smilin/BaseDiscordBot&#34;&gt;我的 BDB&lt;/a&gt;&lt;br&gt;除了像是 mykirito 這種比較偏門的功能，其他 alice 會的指令都會慢慢更新在 BDB 專案上，可以自由取用~&lt;/p&gt;
&lt;p&gt;感謝看到這裡的你^^!&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2023/03/17/goodbyeNalocal/</guid>
            <title>blog 網址搬遷 &amp; github改名</title>
            <link>https://smilin.net/2023/03/17/goodbyeNalocal/</link>
            <category>日記</category>
            <pubDate>Fri, 17 Mar 2023 14:30:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;https://i.imgur.com/1EqvZfv.png&#34; alt=&#34;title&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;再見-Nalocal&#34;&gt;&lt;a href=&#34;#再見-Nalocal&#34; class=&#34;headerlink&#34; title=&#34;再見 Nalocal&#34;&gt;&lt;/a&gt;再見 Nalocal&lt;/h2&gt;&lt;p&gt;最初使用 Nalocal，做為 Github 上使用的名字&lt;/p&gt;
&lt;p&gt;想著這個名字的發音還挺順口的，近似於貓咪的喵叫聲&lt;/p&gt;
&lt;p&gt;拆開來看的話有非本地，支持雲端概念存在的好名字..&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;&lt;strong&gt;不過我的名字實在太多啦!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 FB 上叫做漣漪，網名叫微笑，換個論壇又會有別的名字&lt;/p&gt;
&lt;p&gt;而且對於名字是否順口好記，也是近期挺在意的事情&lt;/p&gt;
&lt;p&gt;經營 blog，似乎逐漸從原本單純的樣貌，變成必需慎重考慮該如何營造的一個個人品牌了&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;所以，趁此機會一併更改了網域，github page 提供的免費網域終究存在侷限&lt;/p&gt;
&lt;p&gt;雖然替換初期會有點痛苦，往後也算是重新經營了&lt;/p&gt;
&lt;p&gt;但我想這會是必要的，也希望以後我能堅持多寫些文章，添加柴火。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2022/11/01/bdb3/</guid>
            <title>BDB更新日誌#3</title>
            <link>https://smilin.net/2022/11/01/bdb3/</link>
            <category>node.js</category>
            <category>bot</category>
            <category>discord</category>
            <category>discord.js</category>
            <category>教學</category>
            <pubDate>Tue, 01 Nov 2022 18:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;主要更新&#34;&gt;&lt;a href=&#34;#主要更新&#34; class=&#34;headerlink&#34; title=&#34;主要更新&#34;&gt;&lt;/a&gt;主要更新&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;DiscordJSmySelf 更名為 BaseDiscordBot&lt;/li&gt;
&lt;li&gt;discord.js 的所有參考都塞進 BaseDiscordBot&lt;/li&gt;
&lt;li&gt;斜線 &amp;#x2F; 選項 &amp;#x2F; 按鈕 &amp;#x2F; 菜單 框架完成&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;次要更新&#34;&gt;&lt;a href=&#34;#次要更新&#34; class=&#34;headerlink&#34; title=&#34;次要更新&#34;&gt;&lt;/a&gt;次要更新&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;env 更新&lt;/li&gt;
&lt;li&gt;readMe 更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;github&#34;&gt;&lt;a href=&#34;#github&#34; class=&#34;headerlink&#34; title=&#34;github&#34;&gt;&lt;/a&gt;github&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/BaseDiscordBot/tree/v14.6.0&#34;&gt;github 頁面&lt;/a&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;一些話&#34;&gt;&lt;a href=&#34;#一些話&#34; class=&#34;headerlink&#34; title=&#34;一些話&#34;&gt;&lt;/a&gt;一些話&lt;/h2&gt;&lt;br&gt;
嗨，昨天才見面呢  
最近比較閒，忽然就可以比較常更新日誌了

&lt;p&gt;其實原本有點懶得寫，但 BDB 目前的狀態，跟之前相比算是有了非常大的改變&lt;br&gt;所以就稍微紀錄一下，雖然、大概、沒人看就是了 xD ~~&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;主要更新說明&#34;&gt;&lt;a href=&#34;#主要更新說明&#34; class=&#34;headerlink&#34; title=&#34;主要更新說明&#34;&gt;&lt;/a&gt;主要更新說明&lt;/h3&gt;  &lt;br&gt;
首先，最重要的就是，DBD 的核心文件做了一次更名啦 ~~ &lt;br&gt; 
筆者實在是對命名很不在行，原本的想法很單純，想寫一套屬於我的翻譯文件  &lt;br&gt;
用來翻譯 discord.js 的 API ，這樣以後 discord.js 改版的時候，就不用再把原有的邏輯拆掉重組了  
  &lt;br&gt;&lt;br&gt;
新的名字與專案相同，也算是重新確立了本專案的方向 (啪嘰啪嘰~)  
  
  &lt;br&gt;
  
&lt;p&gt;雖然認真的朋友應該早就看出來了，其實筆者的程式水平並不怎樣呢，也難怪會當受薪階級了 (x)&lt;br&gt;不過筆者也沒有因此放棄，目標一直都是在程式的道路上磨練，所以相較於以往，對程式的理解還是有提高的喔&lt;/p&gt;
&lt;p&gt;這次花了些時間整理，正式將所有與 discord.js 有關的 import 都塞入 BDB 內了&lt;br&gt;也就是以後使用 BDB，就真正可以做到換一個檔案 -&amp;gt; 升級完畢，的這種事情了 ~~&lt;br&gt;雖然只是初衷一般的事情，也是最近稍微閒下來才終於可以整理好啊..感覺審視了一次自己的作業效率阿 (汗)&lt;/p&gt;
  &lt;br&gt;

&lt;p&gt;以及相比前兩個比較小咖，但也算是主要更新的&lt;br&gt;discord.js 13 版引入，14 版改過一次實例方式的各種功能都做出框架了&lt;br&gt;雖然沒能在 13 版時就做出來有點遺憾，但筆者對目前的框架很有自信，相信等 15 版出來的時候，這些 code 也會很容易維護吧！&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;次要更新說明&#34;&gt;&lt;a href=&#34;#次要更新說明&#34; class=&#34;headerlink&#34; title=&#34;次要更新說明&#34;&gt;&lt;/a&gt;次要更新說明&lt;/h3&gt;  &lt;br&gt;
在env的部分加上了 `MASTER_ID`，並沒有實際功能&lt;br&gt;    
更多是用於 DEBUG，或是往後要開一些只有自己能用的開發人員指令時可以使用  
  
  &lt;br&gt;
  
&lt;p&gt;因為更新內容眾多， readMe 也做了一次更新，改了不少，但還是缺很多東西，只交代了最基本的內容&lt;br&gt;畢竟使用 BDB 相當於重新認識一種 API ，未來想開一份專屬於 BDB 的文檔&lt;br&gt;不知道還要多久就是了，請大家等等我囉 xD ~&lt;/p&gt;
&lt;br&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2022/10/31/bdb2/</guid>
            <title>BDB更新日誌#2 - discord.js v14.6.0</title>
            <link>https://smilin.net/2022/10/31/bdb2/</link>
            <category>node.js</category>
            <category>bot</category>
            <category>discord</category>
            <category>discord.js</category>
            <category>教學</category>
            <pubDate>Mon, 31 Oct 2022 18:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;主要更新&#34;&gt;&lt;a href=&#34;#主要更新&#34; class=&#34;headerlink&#34; title=&#34;主要更新&#34;&gt;&lt;/a&gt;主要更新&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;將專案適配到 &lt;code&gt;discord.js&lt;/code&gt; v14.6.0 版本&lt;/li&gt;
&lt;li&gt;全版本專案棄用 &lt;code&gt;auth.json&lt;/code&gt; ，改成 &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;次要更新&#34;&gt;&lt;a href=&#34;#次要更新&#34; class=&#34;headerlink&#34; title=&#34;次要更新&#34;&gt;&lt;/a&gt;次要更新&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;message 邏輯整合&lt;/li&gt;
&lt;li&gt;修改部分註解&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;github&#34;&gt;&lt;a href=&#34;#github&#34; class=&#34;headerlink&#34; title=&#34;github&#34;&gt;&lt;/a&gt;github&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/BaseDiscordBot/tree/v14.6.0&#34;&gt;github 頁面&lt;/a&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;一些話&#34;&gt;&lt;a href=&#34;#一些話&#34; class=&#34;headerlink&#34; title=&#34;一些話&#34;&gt;&lt;/a&gt;一些話&lt;/h2&gt;&lt;p&gt;大家好，我是微笑&lt;/p&gt;
&lt;p&gt;這次版本更新，在基本架構上跟 13 並沒有差太多&lt;br&gt;主要是修改了之前 code 的一些架構設計，讓主體更加精簡了一些，以及使用更加正規的方式儲存私密數值&lt;/p&gt;
&lt;p&gt;之後如果時間允許，希望可以將自己的 bot 提升到 14.6.0 的版本(12 遇到的 bug 越來越多了&lt;del&gt;)&lt;br&gt;屆時或許會再將功能拆分，更新到這邊吧，不過因為已經真鹿太多次了，已經有點不好意思給承諾了，各位看看就好吧，哈哈哈&lt;/del&gt;&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;主要更新說明&#34;&gt;&lt;a href=&#34;#主要更新說明&#34; class=&#34;headerlink&#34; title=&#34;主要更新說明&#34;&gt;&lt;/a&gt;主要更新說明&lt;/h3&gt;&lt;p&gt;原本專案使用 json 做參數管理&lt;br&gt;最近筆者因為換了上雲平台，重新研究了一次相關資料，這次索性將 &lt;code&gt;auth.json&lt;/code&gt; 棄用，統一改成 &lt;code&gt;.env&lt;/code&gt;&lt;br&gt;利用 &lt;code&gt;dotenv&lt;/code&gt; 的效果，就可以用 &lt;code&gt;process.env.&lt;/code&gt; 的方式載入各種環境參數了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/yCrkWDD.png&#34; alt=&#34;引入dotenv，改用process.env.xxx來取值&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;次要更新說明&#34;&gt;&lt;a href=&#34;#次要更新說明&#34; class=&#34;headerlink&#34; title=&#34;次要更新說明&#34;&gt;&lt;/a&gt;次要更新說明&lt;/h3&gt;&lt;p&gt;另外比較重要的修改，就是原本將 message 入口放在主程序，看起來挺奇怪的，就跟 &lt;code&gt;prefix.json&lt;/code&gt; 一起重新統合到獨立的分類了&lt;br&gt;以及在註解上，也重新做了一輪調整，讓文件間的註解存在統一性，相對不會太過雜亂&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/0m0R3m4.png&#34; alt=&#34;prefix.json更名，並且放入messageManager模組內&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/c7brWXz.png&#34; alt=&#34;把message邏輯搬到獨立文件內，以及部分註解統一&#34;&gt;&lt;/p&gt;
&lt;br&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2022/10/25/herokuToRender/</guid>
            <title>將專案從heroku轉到render過程思路</title>
            <link>https://smilin.net/2022/10/25/herokuToRender/</link>
            <category>node.js</category>
            <category>bot</category>
            <category>discord</category>
            <category>discord.js</category>
            <category>教學</category>
            <category>heroku</category>
            <category>render</category>
            <category>render.com</category>
            <pubDate>Tue, 25 Oct 2022 18:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;大家好，我是微笑&lt;/p&gt;
&lt;p&gt;繼上次發文過了九個月了&lt;/p&gt;
&lt;p&gt;很可怕啊，感覺自己好混，哈哈哈&lt;/p&gt;
&lt;p&gt;疫情期間，遇到了不少事情，最近才終於有一點調整回正軌的感覺&lt;/p&gt;
&lt;p&gt;剛好 Heroku 發生了一些問題，需要搬移程序到其他託管平台，這邊順便 &lt;del&gt;水一點文章&lt;/del&gt;&lt;/p&gt;
&lt;br&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h3 id=&#34;關於發生在-Heroku-上的一些問題&#34;&gt;&lt;a href=&#34;#關於發生在-Heroku-上的一些問題&#34; class=&#34;headerlink&#34; title=&#34;關於發生在 Heroku 上的一些問題&#34;&gt;&lt;/a&gt;關於發生在 Heroku 上的一些問題&lt;/h3&gt;&lt;p&gt;Heroku 在10月初時，寄送給了開發者一封信&lt;/p&gt;
&lt;p&gt;裡面提到，Heroku 將於2022年11月28號以後，全面關閉免費方案的主機&lt;/p&gt;
&lt;p&gt;如果繼續使用 Heroku 的話，根據目前定價方案，一台託管主機需要負擔一個月 7 美元的成本&lt;/p&gt;
&lt;p&gt;對於單純在學習的學生，又或是我這種程序用愛發電沒有利益的行為，顯然是十足的噩耗&lt;/p&gt;
&lt;p&gt;也因此，原本在 Heroku 上使用免費方案的使用者，開始到處尋找可以繼續使用的平台。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/K3Pngg8.png&#34; alt=&#34;heroku將於2022年11月28號以後，全面關閉免費方案的主機&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;多樣化的選擇&#34;&gt;&lt;a href=&#34;#多樣化的選擇&#34; class=&#34;headerlink&#34; title=&#34;多樣化的選擇&#34;&gt;&lt;/a&gt;多樣化的選擇&lt;/h3&gt;&lt;p&gt;因應 Heroku 收費化的開始，有許多平台陸續浮現到開發者的眼前，其中甚至有網站的標題是「Migrate from Heroku to Railway」&lt;/p&gt;
&lt;p&gt;可以看到，除了 Heroku 以外仍有許多平台等待著開發者發掘(Fly.io&amp;#x2F;Railway.app&amp;#x2F;GoogleCloudPlatform - CloudRun等..)&lt;/p&gt;
&lt;p&gt;雖然根據專案不同，沒有所謂最好的選擇，不過筆者在多次嘗試後，最後決定將程式搬遷到 Render 上&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;render-com&#34;&gt;&lt;a href=&#34;#render-com&#34; class=&#34;headerlink&#34; title=&#34;render.com&#34;&gt;&lt;/a&gt;render.com&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/JqcraLM.png&#34; alt=&#34;render.com&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;當初搬遷主機時，最看中的點就是希望能盡量不用改動原本的架構，免費額度足夠&lt;/p&gt;
&lt;p&gt;Render 目前有著每月 750 小時的免費額度，只開一台機器的話等同免費&lt;/p&gt;
&lt;p&gt;並且他支援從 GitHub &amp;#x2F; GitLab 等開源平台專案部署的方式，功能單一讓流程簡化&lt;/p&gt;
&lt;p&gt;除了支援許多語言直接部署，也支援 Docker 映像檔部署，這幾乎是現在主流平台都有的功能了。&lt;/p&gt;
&lt;p&gt;那因為筆者的專案使用 Node.js，剛好在 Render 支援的語言列表內，所以設定好之後，將專案推到 Github，他就會自動做部署行為了&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;部署流程&#34;&gt;&lt;a href=&#34;#部署流程&#34; class=&#34;headerlink&#34; title=&#34;部署流程&#34;&gt;&lt;/a&gt;部署流程&lt;/h3&gt;&lt;br&gt;

&lt;p&gt;第一次部署肯定會比較麻煩的&lt;/p&gt;
&lt;p&gt;首先我們要先用 Github 帳號登入 Render 註冊帳號，進來後他會先告訴你，免費方案如以下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/TFqJqEB.png&#34; alt=&#34;免費方案&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;Render 提供許多方案，這邊我們要找到 web services 才能使用免費主機&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/JgEO1dE.png&#34; alt=&#34;Overview&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;之後取得 Github 授權 repository，就可以載入專案，選擇主機地區，語言等設置&lt;/p&gt;
&lt;p&gt;比較需要注意的是，因為 Render 的 web 每個半小時無人訪問，會進入休眠(記得 Heroku 也有這類設定)&lt;/p&gt;
&lt;p&gt;需要再次訪問網站才能讓他喚醒&lt;/p&gt;
&lt;p&gt;以 Node 來說，我們可以使用 request 跟 node-schedule ，呼叫自己防止進入睡眠的方式，來讓真正需要的程序能不間斷運行&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;env&#34;&gt;&lt;a href=&#34;#env&#34; class=&#34;headerlink&#34; title=&#34;env&#34;&gt;&lt;/a&gt;env&lt;/h3&gt;&lt;br&gt;

&lt;p&gt;以前在 Heroku ，如果不透過 Github 自動部署，而是用 Heroku Git 的話，是可以直接將較為私密的 key 等資料，直接明碼上傳上去的&lt;/p&gt;
&lt;p&gt;雖然不是很好的做法，但是對於私人專案來說，這的確是個很方便的做法，只上傳在 Heroku 也有效的保障了程序的安全性&lt;/p&gt;
&lt;p&gt;但是 Render 只接受 Github 鏡像部署，私密的 key 是無論如何都不會放在 Github 上的&lt;/p&gt;
&lt;p&gt;Render 在 env 的設定上也是十分方便，&lt;a href=&#34;https://render.com/docs/configure-environment-variables&#34;&gt;官方流程可參考這篇文檔&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dvzYkqs.png&#34; alt=&#34;env&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;單一的 key 要放在 Environment Variables&lt;/p&gt;
&lt;p&gt;如果原本就習慣使用 .env 管理所有參數的話，可以將檔案的內容複製進 Secret Files&lt;/p&gt;
&lt;p&gt;Render 在 env 有個好處是，一般平台設置 env 後，基於安全性，平台都不會讓使用者在前台存取 env 的真實資料&lt;/p&gt;
&lt;p&gt;但是 Render 可以，而且還可以直接修改內容，雖然必須犧牲一些安全性，但這樣也方便了開發者對值的管理，對筆者來說是利大於弊&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;結語&#34;&gt;&lt;a href=&#34;#結語&#34; class=&#34;headerlink&#34; title=&#34;結語&#34;&gt;&lt;/a&gt;結語&lt;/h3&gt;&lt;br&gt;

&lt;p&gt;筆者當初使用 Heroku，是因為接觸了 discord bot，為此還寫了鐵人賽&lt;/p&gt;
&lt;p&gt;說長不長說短不短的兩年，Heroku 宣告收費化，對於筆者這樣的使用者來說，就像是一個平台的關閉一般&lt;/p&gt;
&lt;p&gt;這兩年從後端摸到前端，再從前端學回後端，因為疫情也遇到了不少事情，原本覺得搬遷主機，對於筆者這點能力來說一定是一件艱鉅的工程&lt;/p&gt;
&lt;p&gt;不過在搬遷的過程中，重新拾起 Node，摸索對筆者最好的平台時，感受到許多愉快，有一種 原來我還是能快樂寫 code 阿，的感想&lt;/p&gt;
&lt;p&gt;我想 sideProject 就像是開發者們心靈的綠洲吧，能因為這次機會，重新澆灌他，我也收穫頗豐。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10255630&#34;&gt;文末附上去年內部員工自己寫的推薦文&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2022/01/17/bdb1/</guid>
            <title>BDB更新日誌#1</title>
            <link>https://smilin.net/2022/01/17/bdb1/</link>
            <category>node.js</category>
            <category>bot</category>
            <category>discord</category>
            <category>discord.js</category>
            <category>教學</category>
            <pubDate>Mon, 17 Jan 2022 18:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;主要更新&#34;&gt;&lt;a href=&#34;#主要更新&#34; class=&#34;headerlink&#34; title=&#34;主要更新&#34;&gt;&lt;/a&gt;主要更新&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;bot 啟動時自動註冊斜線命令&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;次要更新&#34;&gt;&lt;a href=&#34;#次要更新&#34; class=&#34;headerlink&#34; title=&#34;次要更新&#34;&gt;&lt;/a&gt;次要更新&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;斜線命令相關邏輯調整&lt;/li&gt;
&lt;li&gt;修改 js 檔名&lt;/li&gt;
&lt;li&gt;修改部分註解&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;github&#34;&gt;&lt;a href=&#34;#github&#34; class=&#34;headerlink&#34; title=&#34;github&#34;&gt;&lt;/a&gt;github&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/BaseDiscordBot/tree/2e168a31c74994c18e276f8f4bf1ff67d74803c9&#34;&gt;github 頁面&lt;/a&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;br&gt;

&lt;hr&gt;
&lt;h2 id=&#34;一些話&#34;&gt;&lt;a href=&#34;#一些話&#34; class=&#34;headerlink&#34; title=&#34;一些話&#34;&gt;&lt;/a&gt;一些話&lt;/h2&gt;&lt;p&gt;大家好，我是微笑&lt;/p&gt;
&lt;p&gt;總覺得很久沒發文，自上次簡單介紹 discord.js 升版後有四個月了…&lt;/p&gt;
&lt;p&gt;與以往渾渾噩噩不同，&lt;br&gt;架設了 blog、有了實際的紀錄後更可以感覺到自己必需努力(雖然平常更多時間都在放電 haha)&lt;/p&gt;
&lt;p&gt;原本新年後第一篇文章，希望可以寫點想說的話；&lt;br&gt;可之前沒有相關經驗，一到真的要動筆時總是不知道該寫些甚麼。&lt;br&gt;結果就拖到現在了，實在是有點慚愧(抹臉&lt;/p&gt;
&lt;p&gt;雖然不是 2022 第一篇，相關的雜談就留待日後吧~&lt;br&gt;這邊做為更新日誌，會盡量以介紹更新為主的，恩恩。&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;主要更新說明&#34;&gt;&lt;a href=&#34;#主要更新說明&#34; class=&#34;headerlink&#34; title=&#34;主要更新說明&#34;&gt;&lt;/a&gt;主要更新說明&lt;/h3&gt;&lt;p&gt;敘述上挺好懂的，BDB(BaseDiscordBot)原本並不會在註冊時自動跑&lt;a href=&#34;https://discord.js.org/#/docs/discord.js/v13/class/GuildApplicationCommandManager&#34;&gt;斜線指令&lt;/a&gt;。&lt;br&gt;原本的 code 有點問題，這次改了寫法，並且拉進了&lt;a href=&#34;https://discord.js.org/#/docs/discord.js/v13/class/Client?scrollTo=e-ready&#34;&gt;Client#ready&lt;/a&gt;事件內。&lt;br&gt;以後執行時，就會將 bot 所在的所有群組都註冊一次斜線指令&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/wFQPoia.png&#34; alt=&#34;移除註解，修改傳入的參數&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/J8d01FY.png&#34; alt=&#34;實際在ready呼叫了InsertSlash&#34;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h3 id=&#34;次要更新說明&#34;&gt;&lt;a href=&#34;#次要更新說明&#34; class=&#34;headerlink&#34; title=&#34;次要更新說明&#34;&gt;&lt;/a&gt;次要更新說明&lt;/h3&gt;&lt;p&gt;原本 BDB 在升級到 discord.js 13 時，目標著重在保全 &lt;strong&gt;功能模組化&lt;/strong&gt; 此一優點上，&lt;br&gt;斜線指令的兼容，並沒有花費過多的時間去研究。&lt;/p&gt;
&lt;p&gt;此次除了主要更新中提到的內容，還修改了斜線指令被觸發時的邏輯，&lt;br&gt;將 reply 一同寫在 json 內，以利於往後擴充。&lt;/p&gt;
&lt;p&gt;改動簡易，優點也是顯而易見的，&lt;br&gt;有效避免日後斜線指令過多，註冊與回傳列表不同步的風險。&lt;/p&gt;
&lt;p&gt;基於 &lt;strong&gt;功能模組化&lt;/strong&gt; 訴求，針對這一塊的下一步優化，&lt;br&gt;預計會是在程式碼上做出子母 json 檔案；&lt;br&gt;可以根據要使用的功能別，來直接套用各個功能對應的 json。&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;br&gt;

&lt;p&gt;原本 BDB 的啟動檔取名做 bot.js，因筆者自身寫的 bot，檔名都是 alice(女兒)。&lt;br&gt;BDB 畢竟也是我的專案，怎麼可以有差別待遇呢(不是&lt;br&gt;乾脆就一併統一成愛稱了。&lt;/p&gt;
&lt;p&gt;另外調整了一點點註解上的形容。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/l93RXrB.png&#34; alt=&#34;修改了斜線指令，以回傳類型決定邏輯&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/QOybZGB.png&#34; alt=&#34;調整後的slashJson&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/bvwPWkT.png&#34; alt=&#34;調整了註解與執行的jsName&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2021/12/14/racingScript-worldFlipper/</guid>
            <title>競速疊屍腳本 - 台版彈射世界</title>
            <link>https://smilin.net/2021/12/14/racingScript-worldFlipper/</link>
            <category>教學</category>
            <category>彈射世界</category>
            <category>遊戲</category>
            <category>腳本</category>
            <pubDate>Tue, 14 Dec 2021 12:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;腳本運作環境&#34;&gt;&lt;a href=&#34;#腳本運作環境&#34; class=&#34;headerlink&#34; title=&#34;腳本運作環境&#34;&gt;&lt;/a&gt;腳本運作環境&lt;/h2&gt;&lt;p&gt;型號&lt;br&gt;redmi note 8 pro&lt;/p&gt;
&lt;p&gt;解析度&lt;br&gt;1080x2340&lt;/p&gt;
&lt;p&gt;如果你跟筆者用的是同解析度甚至同一台手機&lt;br&gt;欸、恭喜、&lt;del&gt;我們貼貼&lt;/del&gt; 大部份體驗會很良好&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;適配機型-缺乏資料，歡迎各位踴躍提供&#34;&gt;&lt;a href=&#34;#適配機型-缺乏資料，歡迎各位踴躍提供&#34; class=&#34;headerlink&#34; title=&#34;適配機型(缺乏資料，歡迎各位踴躍提供)&#34;&gt;&lt;/a&gt;適配機型(缺乏資料，歡迎各位踴躍提供)&lt;/h2&gt;&lt;p&gt;缺乏資料，歡迎各位踴躍提供&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;載點&#34;&gt;&lt;a href=&#34;#載點&#34; class=&#34;headerlink&#34; title=&#34;載點&#34;&gt;&lt;/a&gt;載點&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.zdjl.org/&#34;&gt;腳本精靈 apk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://drive.google.com/file/d/15BtIQWg8qRVFHv9yN2u3V20YBUY0hlgq/view?usp=sharing&#34;&gt;雲水小號腳本三件套&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安裝教學&#34;&gt;&lt;a href=&#34;#安裝教學&#34; class=&#34;headerlink&#34; title=&#34;安裝教學&#34;&gt;&lt;/a&gt;安裝教學&lt;/h2&gt;&lt;p&gt;下載上方兩個檔案後，安裝腳本精靈&lt;/p&gt;
&lt;p&gt;開啟腳本精靈，給予權限後，點選畫面中下方的 &lt;strong&gt;製作&lt;/strong&gt;&lt;br&gt;直到彈回主畫面後，即可關閉腳本精靈&lt;/p&gt;
&lt;p&gt;這時候，手機根目錄會出現一個叫做 &lt;strong&gt;自动精灵&lt;/strong&gt; 的資料夾&lt;br&gt;將雲水小號三件套解壓，將檔案放入該資料夾&lt;/p&gt;
&lt;p&gt;回到腳本精靈就會看到此腳本&lt;/p&gt;
&lt;h2 id=&#34;使用教學&#34;&gt;&lt;a href=&#34;#使用教學&#34; class=&#34;headerlink&#34; title=&#34;使用教學&#34;&gt;&lt;/a&gt;使用教學&lt;/h2&gt;&lt;p&gt;請使用新角色開始遊戲，並且手動玩到 1-4-2，打完貓頭鷹並解鎖 auto 系統&lt;br&gt;之後運行腳本即可(不用再手動玩到貓頭鷹)&lt;/p&gt;
&lt;p&gt;會這樣設計是因為大家解析度不同，很有可能我寫完的腳本你不能用&lt;br&gt;而開啟 auto 後的腳本邏輯相對簡單，理論上相對不會有 bug，所以將腳本啟動點放在這&lt;/p&gt;
&lt;h2 id=&#34;無論如何都希望可以從創角開始就全自動&#34;&gt;&lt;a href=&#34;#無論如何都希望可以從創角開始就全自動&#34; class=&#34;headerlink&#34; title=&#34;無論如何都希望可以從創角開始就全自動&#34;&gt;&lt;/a&gt;無論如何都希望可以從創角開始就全自動&lt;/h2&gt;&lt;p&gt;開啟腳本，請點選 &lt;strong&gt;雲水小號全自動&lt;/strong&gt;，之後點右下角的編輯&lt;/p&gt;
&lt;div  align=&#34;center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/x11mtLv.jpg&#34; width = &#34;30%&#34; height = &#34;30%&#34; alt=&#34;&#34; align=center /&gt;
&lt;/div&gt;

&lt;p&gt;腳本出現後，開啟遊戲，到主畫面&lt;/p&gt;
&lt;div  align=&#34;center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/pMP0WVz.jpg&#34; width = &#34;30%&#34; height = &#34;30%&#34; alt=&#34;&#34; align=center /&gt;
&lt;/div&gt;
請確認當前是處於新角色且從未登入狀態，如果不是，請從右上角設定中 **刪除資料** 
之後將腳本拉到第六點 **創角流程** (圖中第四點是舊的，錯誤的)，長按後會出現 **從這裡開始運行** 
點選後就會從創角開始自動循環了。

&lt;h2 id=&#34;如果我在運行過程因為-BUG-充電-手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷&#34;&gt;&lt;a href=&#34;#如果我在運行過程因為-BUG-充電-手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷&#34; class=&#34;headerlink&#34; title=&#34;如果我在運行過程因為 BUG&amp;#x2F;充電&amp;#x2F;手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷&#34;&gt;&lt;/a&gt;如果我在運行過程因為 BUG&amp;#x2F;充電&amp;#x2F;手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷&lt;/h2&gt;&lt;p&gt;可以繼續運行腳本，不用重刷，這邊介紹一下腳本的大概流程&lt;br&gt;腳本大概可以拆成幾個區塊，由上到下依序是&lt;/p&gt;
&lt;p&gt;1.開啟 auto&amp;amp;跳過&amp;amp;下一步 2.打雲水囉 3.重開小號 4.關閉&amp;amp;開啟彈射世界 5.創角流程 6.手操&amp;amp;跳過&amp;amp;下一步 7.腳本手操&lt;br&gt;(以上名稱皆對應腳本描述)&lt;/p&gt;
&lt;h3 id=&#34;開啟-auto-跳過-下一步&#34;&gt;&lt;a href=&#34;#開啟-auto-跳過-下一步&#34; class=&#34;headerlink&#34; title=&#34;開啟 auto&amp;amp;跳過&amp;amp;下一步&#34;&gt;&lt;/a&gt;開啟 auto&amp;amp;跳過&amp;amp;下一步&lt;/h3&gt;&lt;p&gt;指通關貓頭鷹(1-4-2)以後，到第 1 章全通關，這期間的所有關卡都會在這個分類內循環&lt;br&gt;如果在這期間中斷了腳本，&lt;font color=#FF6600&gt;回到有 new 關卡的地方啟動腳本即可&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;打雲水囉&#34;&gt;&lt;a href=&#34;#打雲水囉&#34; class=&#34;headerlink&#34; title=&#34;打雲水囉&#34;&gt;&lt;/a&gt;打雲水囉&lt;/h3&gt;&lt;p&gt;指打通第一章最終 boss 並通過最後兩個故事，獲得第一章武器寶珠 精靈的微笑 後，會切換到此流程&lt;br&gt;此分類涵蓋從第一章退出，進入活動頁，進雲水，被送出來結算後&lt;br&gt;因此，如果打完第一章後忽然中斷，想從這裡繼續執行是可以的&lt;br&gt;但因為打完雲水就要換帳號了，個人是建議&lt;font color=#FF6600&gt;各位直接手動進雲水送死，重新刷號比較快。&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;重開小號&#34;&gt;&lt;a href=&#34;#重開小號&#34; class=&#34;headerlink&#34; title=&#34;重開小號&#34;&gt;&lt;/a&gt;重開小號&lt;/h3&gt;&lt;p&gt;指被雲水送出來後，回到標題畫面刪除帳號資料&lt;br&gt;這一段區間是不會無限執行的，跟上一個分類一樣，&lt;font color=#FF6600&gt;卡在這建議直接手動&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;關閉-開啟彈射世界&#34;&gt;&lt;a href=&#34;#關閉-開啟彈射世界&#34; class=&#34;headerlink&#34; title=&#34;關閉&amp;amp;開啟彈射世界&#34;&gt;&lt;/a&gt;關閉&amp;amp;開啟彈射世界&lt;/h3&gt;&lt;p&gt;指刪除完角色資料後，重新啟動彈射世界，以釋放部分記憶體&lt;br&gt;跟上一個分類一樣，&lt;font color=#FF6600&gt;卡在這建議自己重啟，並且改用 記憶體負載 版本&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;創角流程&#34;&gt;&lt;a href=&#34;#創角流程&#34; class=&#34;headerlink&#34; title=&#34;創角流程&#34;&gt;&lt;/a&gt;創角流程&lt;/h3&gt;&lt;p&gt;指從主畫面進入，直到領完登入獎勵&amp;amp;夏日登入獎勵這段時間&lt;br&gt;如果創角期間有任何原因中斷腳本，可以長按這個分類並且選擇 &lt;font color=#FF6600&gt;從這裡開始運行&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;手操-跳過-下一步&#34;&gt;&lt;a href=&#34;#手操-跳過-下一步&#34; class=&#34;headerlink&#34; title=&#34;手操&amp;amp;跳過&amp;amp;下一步&#34;&gt;&lt;/a&gt;手操&amp;amp;跳過&amp;amp;下一步&lt;/h3&gt;&lt;p&gt;指領完登入獎勵，1-1-1 到 1-4-2 期間的所有流程&lt;br&gt;如果是在打完貓頭鷹前就發生意外，導致腳本中斷的話&lt;br&gt;請回到有 new 關卡的地方，長按這個分類並且選擇 &lt;font color=#FF6600&gt;從這裡開始運行&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;腳本手操&#34;&gt;&lt;a href=&#34;#腳本手操&#34; class=&#34;headerlink&#34; title=&#34;腳本手操&#34;&gt;&lt;/a&gt;腳本手操&lt;/h3&gt;&lt;p&gt;此分類與上一個分類連動，當運行手操流程，進關卡時，會進入此分類&lt;br&gt;&lt;font color=#FF6600&gt;無論任何情況都不會從這個分類中繼續執行&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;若是因為解析度問題，導致這個腳本在你的環境中有一堆問題&#34;&gt;&lt;a href=&#34;#若是因為解析度問題，導致這個腳本在你的環境中有一堆問題&#34; class=&#34;headerlink&#34; title=&#34;若是因為解析度問題，導致這個腳本在你的環境中有一堆問題&#34;&gt;&lt;/a&gt;若是因為解析度問題，導致這個腳本在你的環境中有一堆問題&lt;/h2&gt;&lt;p&gt;請改為使用 &lt;strong&gt;雲水小號半自動&lt;/strong&gt;&lt;br&gt;此版本只會協助自動通關貓頭鷹後的關卡&amp;amp;進雲水送頭&lt;br&gt;這一段的邏輯相對簡易，如果遇到問題各位也可以試著修改。&lt;/p&gt;
&lt;h2 id=&#34;一些話&#34;&gt;&lt;a href=&#34;#一些話&#34; class=&#34;headerlink&#34; title=&#34;一些話&#34;&gt;&lt;/a&gt;一些話&lt;/h2&gt;&lt;details&gt;
  &lt;summary&gt;一些廢話&lt;/summary&gt;
  &lt;p&gt;
        想寫這個腳本的想法，從修車大開始寫的雲水行前手冊時就有了；
        時常一起玩的朋友沒有完美雷拳盤，希望可以繼續一起玩這款遊戲，大概是像這樣的想法。
        雖然現實似乎是連完美盤也只能哭，能不能幫到他已經是未知數了
  &lt;/p&gt;
  &lt;p&gt;
        官方在競速開始前一刻，加強了模擬器的驗證機制，
        這對於腳本的普及是毀滅性的；
        模擬器可以提供的是統一的硬體規格與解析度，
        關閉模擬器並不能遏阻使用外掛的使用者。
        對於腳本的分享，會因為要考慮到機種規格不同，遇到極大的考驗，
        這是十分打擊熱情的。
  &lt;/p&gt;	
  &lt;p&gt;
        儘管如此，活動開始幾天後，知道版上需要腳本的人仍佔大多數，死馬當活馬醫，姑且還是嘗試著寫了一下，雖然已經預想的到腳本會有多難推廣了(扶額)；
        希望各位願意點進這篇文章、願意幫助他人的你，哪怕只是想搶救下自己的排名，也別忘記保持善心，
        不用理會其他人說腳本是外掛這類反智言論，純粹的理念會是你堅持使用腳本的秘訣。
  &lt;/p&gt;
&lt;/details&gt;

&lt;hr&gt;
&lt;h2 id=&#34;常見問題&#34;&gt;&lt;a href=&#34;#常見問題&#34; class=&#34;headerlink&#34; title=&#34;常見問題&#34;&gt;&lt;/a&gt;常見問題&lt;/h2&gt;&lt;p&gt;Q: 腳本精靈自行停止運作&lt;br&gt;A: 通常是因為記憶體回收機制，自動將腳本精靈關閉導致，這時再次開啟腳本精靈也會有問題，請重開機，並且將腳本精靈設定成不可自動回收的應用程式(每家手機廠設定方式不同)&lt;br&gt;Ex:&lt;/p&gt;
&lt;div  align=&#34;center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/yoVC16o.jpg&#34; width = &#34;30%&#34; height = &#34;30%&#34; alt=&#34;&#34; align=center /&gt;
&lt;/div&gt;

&lt;p&gt;Q: 我的角色打關卡死掉，腳本就不會動了&lt;br&gt;A: 欸….我測試期間至少刷了 20 隻帳號，發文當下也在刷，目前沒有死過&lt;br&gt;亞里沙打 1 章跟鬼一樣，1 章的難度應該….是不會死的&lt;br&gt;萬一真刷出死掉的狀況…我..我再想想辦法。&lt;/p&gt;
&lt;p&gt;Q: 我的腳本擅自將遊戲關閉後，不會重新啟動&lt;br&gt;A: 部分機種不會讓腳本可以開關遊戲程式，筆者自己也是這一類機型，請使用 &lt;strong&gt;雲水小號全自動(記憶體負載)&lt;/strong&gt;&lt;br&gt;使用此版本不會自動重啟遊戲，大約 1 小時(刷 1~2 隻角色後)，需手動重啟遊戲，否則整隻手機會因為記憶體塞滿卡住。&lt;br&gt;p.s.就算是使用 &lt;strong&gt;雲水小號全自動&lt;/strong&gt; 的使用者，也推薦每隔一小時查看一次手機，尤其是一開始幾分鐘，最好一直看著，腳本終究只是腳本，只要出現突發狀況就會炸掉 &lt;del&gt;當然也有筆者寫得不好的原因&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;Q: 動作運行失敗，已暫停&lt;br&gt;A: 通常是運行期間閃退，導致部分權限拿不到，重開機解決&lt;/p&gt;
&lt;p&gt;Q: 截屏為空，請確定是否開啟了其他截屏軟件&lt;br&gt;A: 關閉其他允許顯示在應用上層的軟件後再嘗試&lt;/p&gt;
&lt;p&gt;Q: 運行失敗&amp;amp;卡在奇怪的地方不繼續動了&lt;br&gt;A: 請依照上方教學，從一般運行改為編輯模式，可以試著調整抓取圖片解析度，或是抓圖範圍，使腳本適配於自身機種&lt;br&gt;並且提供機型&amp;amp;解析度&amp;amp;卡住的地方，在下方留言給我，又或是透過巴哈站內信給我，以利資料蒐集&amp;amp;幫助更多的人&lt;/p&gt;
&lt;p&gt;不知道該怎麼留言時，可以試著使用的留言格式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;機種(必填):
解析度:
卡住的地方(必填):
狀況的補充說明:
想說的話:
截圖:
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2021/11/16/fluidThemeShare/</guid>
            <title>fluid支持pjax主題源碼分享</title>
            <link>https://smilin.net/2021/11/16/fluidThemeShare/</link>
            <category>教學</category>
            <category>hexo</category>
            <category>fluid</category>
            <pubDate>Tue, 16 Nov 2021 12:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;https://i.imgur.com/yl9bnuZ.png&#34; alt=&#34;theme&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;寫在前面&#34;&gt;&lt;a href=&#34;#寫在前面&#34; class=&#34;headerlink&#34; title=&#34;寫在前面&#34;&gt;&lt;/a&gt;寫在前面&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;本主題基於 fluid 1.8.11 版本製作，在此之上參雜了許多私貨
又因為本人前端並不熟練，源碼被改得亂七八糟的，因此有任何問題在blog聯繫我詢問即可。
再此感謝開發 and 維護源碼的所有大大們。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;fluid-主題主要改動&#34;&gt;&lt;a href=&#34;#fluid-主題主要改動&#34; class=&#34;headerlink&#34; title=&#34;fluid 主題主要改動&#34;&gt;&lt;/a&gt;fluid 主題主要改動&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; pjax 支持&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 添加本地音樂箱&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 添加右下角 Live2D 妹子&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; pjax JS 回調(解決大部分 fluid 不支持 pjax 之異常)&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 目錄頁次浮動顯示&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章列表搜出留言數&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Markdown 介面修改&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章底部上下篇連結位置對調(上一篇就該在左邊，下一篇就該在右邊 &amp;#x3D; &amp;#x3D; )&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 修復繁體中文字型&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; rss 功能&lt;/li&gt;
&lt;/ul&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;環境配置&#34;&gt;&lt;a href=&#34;#環境配置&#34; class=&#34;headerlink&#34; title=&#34;環境配置&#34;&gt;&lt;/a&gt;環境配置&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;hexo -v
INFO  Validating config
hexo: 5.4.0
hexo-cli: 4.3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主題下載&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://github.com/Mr-Smilin/hexo-theme-fluid.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;hexo _config 配置請添加以下&lt;/p&gt;
&lt;h3 id=&#34;rss&#34;&gt;&lt;a href=&#34;#rss&#34; class=&#34;headerlink&#34; title=&#34;rss&#34;&gt;&lt;/a&gt;rss&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;feed:
    type: atom # RSS的类型(atom/rss2)
    path: atom.xml # 文件路径,默认是atom.xml/rss2.xml
    limit: 20 # 展示文章的数量,使用0或则false代表展示全部
    hub:
    content: # 在RSS文件中是否包含内容 ,有3个值 true/false默认不填为false
    content_limit: # 指定内容的长度作为摘要,仅仅在上面content设置为false和没有自定义的描述出现
    content_limit_delim: &amp;#39; &amp;#39; # 上面截取描述的分隔符,截取内容是以指定的这个分隔符作为截取结束的标志.在达到规定的内容长度之前最后出现的这个分隔符之前的内容,，防止从中间截断.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;live-2D&#34;&gt;&lt;a href=&#34;#live-2D&#34; class=&#34;headerlink&#34; title=&#34;live 2D&#34;&gt;&lt;/a&gt;live 2D&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;live2d:
    enable: true
    scriptFrom: local
    pluginRootPath: live2dw/
    pluginJsPath: lib/
    pluginModelPath: assets/
    tagMode: false
    log: false
    model:
        use: live2d-widget-model-shizuku
    display:
        position: right
        width: 150
        height: 300
    mobile:
        show: false
    react:
        opacity: 0.7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更多 live2D 模組可訪問 &lt;code&gt;https://smilin.net/2021/11/16/live2DShareList/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;音樂箱音樂&#34;&gt;&lt;a href=&#34;#音樂箱音樂&#34; class=&#34;headerlink&#34; title=&#34;音樂箱音樂&#34;&gt;&lt;/a&gt;音樂箱音樂&lt;/h3&gt;&lt;p&gt;開啟 &lt;code&gt;source\dist\music.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;const ap = new APlayer(&amp;#123;
    container: document.getElementById(&amp;#39;aplayer&amp;#39;),
    fixed: true,
    mini: true,
    autoplay: false,
    loop: &amp;#39;all&amp;#39;,
    volume: 0.7,
    listFolded: true,
    listMaxHeight: 60,
    audio: [
        &amp;#123;
            name: &amp;#39;最近在聽的歌&amp;#39;,
            artist: &amp;#39;星茶会&amp;#39;,
            url: &amp;#39;/music/星茶会.mp3&amp;#39;,
            cover: &amp;#39;/img/avatar.png&amp;#39;,
        &amp;#125;,
        &amp;#123;
            name: &amp;#39;最近在聽的歌&amp;#39;,
            artist: &amp;#39;Fullmetal Alchemist Brotherhood&amp;#39;,
            url: &amp;#39;/music/Fullmetal-Alchemist-Brotherhood.mp3&amp;#39;,
            cover: &amp;#39;/img/avatar.png&amp;#39;,
        &amp;#125;
    ]
&amp;#125;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;對應路徑檔案可替換&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;配置好後，做 hexo 上傳 sop&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install #安裝library（僅第一次執行）
$ hexo clean #清除
$ hexo g #編譯
$ hexo d #上傳git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上就是配置此 theme 的流程，使用上若有遇到問題歡迎在底下詢問&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;期待這篇文章可以幫助到需要的人&#34;&gt;&lt;a href=&#34;#期待這篇文章可以幫助到需要的人&#34; class=&#34;headerlink&#34; title=&#34;期待這篇文章可以幫助到需要的人&#34;&gt;&lt;/a&gt;期待這篇文章可以幫助到需要的人&lt;/h2&gt;&lt;p&gt;fluid 是本 blog 第一個使用的 theme&lt;br&gt;fluid 的設計…非常讚!(詞窮)&lt;br&gt;逛著 blog 的期間，可以從各處巧思中感受到作者對美感的一套見解&lt;/p&gt;
&lt;p&gt;不過 fluid 因為其框架的侷限，其致命傷便是無法支援 pjax(ajax)做局部頁面更新&lt;br&gt;從 issues 上可以看到，對於 pjax 的開發目前是不了了之&lt;/p&gt;
&lt;p&gt;但這並非是 fluid 無法支援 pjax，而是因為引入 pjax 會破壞 fluid 既有框架&lt;br&gt;也因此這些改動要改進正式版本是十分困難的，但如果只是魔改的話，儘管是像筆者對前端並不精熟，也能試著修改(code 不保證好看就是了 xD)&lt;/p&gt;
&lt;p&gt;因為筆者最近可能會試著替換成其他主題，故想記錄下使用版本，算是分享。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2021/11/16/live2DShareList/</guid>
            <title>公開Live2D模型蒐集分享</title>
            <link>https://smilin.net/2021/11/16/live2DShareList/</link>
            <category>Live2D</category>
            <pubDate>Tue, 16 Nov 2021 10:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;此文章來源來自 &lt;a href=&#34;https://www.cnblogs.com/strengthen/p/11112215.html&#34;&gt;https://www.cnblogs.com/strengthen/p/11112215.html&lt;/a&gt;&lt;br&gt;此文章僅用於教學，不進行任何營利行為&lt;br&gt;引用時間 2021-11-16&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-chitose@1.0.5/assets/chitose.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-epsilon2_1@1.0.5/assets/epsilon2_1.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-gf@1.0.5/assets/gf.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-haru/01@1.0.5/assets/haru/01.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-haru/02@1.0.5/assets/haru/02.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-haruto@1.0.5/assets/haruto.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145737099-1995701915.png&#34; alt=&#34;6&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-hibiki@1.0.5/assets/hibiki.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145755122-1250198826.png&#34; alt=&#34;7&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-hijiki@1.0.5/assets/hijiki.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145808171-1134873927.png&#34; alt=&#34;8&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-izumi@1.0.5/assets/izumi.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145820786-1515142054.png&#34; alt=&#34;9&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-koharu@1.0.5/assets/koharu.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145837395-2129851551.png&#34; alt=&#34;10&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-miku@1.0.5/assets/miku.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145854892-1189973297.png&#34; alt=&#34;11&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-ni-j@1.0.5/assets/ni.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-nico@1.0.5/assets/nico.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145946543-386246366.png&#34; alt=&#34;13&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;14&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-nietzsche@1.0.5/assets/nietzsche.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;15&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-nipsilon@1.0.5/assets/nipsilon.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705145958186-1073145583.png&#34; alt=&#34;15&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;16&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-nito@1.0.5/assets/nito.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705150012305-869512378.png&#34; alt=&#34;16&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;17&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-shizuku@1.0.5/assets/shizuku.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705150021685-1723203157.png&#34; alt=&#34;17&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;18&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-tororo@1.0.5/assets/tororo.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705150030436-2105740210.png&#34; alt=&#34;18&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;19&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-tsumiki@1.0.5/assets/tsumiki.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705150044063-1455978557.png&#34; alt=&#34;19&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;20&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-unitychan@1.0.5/assets/unitychan.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705150055987-2049508002.png&#34; alt=&#34;20&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;21&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705150106688-127892585.png&#34; alt=&#34;21&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;22&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;https://unpkg.com/live2d-widget-model-z16@1.0.5/assets/z16.model.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://img2018.cnblogs.com/blog/960222/201907/960222-20190705150115397-624103248.png&#34; alt=&#34;22&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://smilin.net/2021/09/27/aboutDiscordJs13/</guid>
            <title>關於discord.js升級至13版本</title>
            <link>https://smilin.net/2021/09/27/aboutDiscordJs13/</link>
            <category>node.js</category>
            <category>bot</category>
            <category>discord</category>
            <category>discord.js</category>
            <pubDate>Mon, 27 Sep 2021 13:47:20 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;discord.js 是基於 node.js ，提供開發人員架設 discord bot 的一套 library&lt;/p&gt;
&lt;p&gt;在去年的這個月，我寫了一篇關於&lt;a href=&#34;https://smilin.net/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/&#34;&gt;使用 discord.js 架設 bot 的教學文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而在今年的 8 月 13 號， discord.js 從 12 版升至 13 版&lt;/p&gt;
&lt;p&gt;此改動影響了不少功能，聲明了以 message 事件為首的許多功能即將遭到廢棄(目前的 13 版仍然可用)，且使用前必須先行宣告 partials 與 intents&lt;/p&gt;
&lt;p&gt;至此，使用最新版本的開發者，理所當然的無法在網路上找到較為全面的教學，因為 13 版在一開始初始化時的寫法就與以往大相逕庭&lt;/p&gt;
&lt;p&gt;針對於現況，繼續使用 12 版 library ，又或是試著自己摸索 13 版的寫法都不失為一種辦法&lt;/p&gt;
&lt;p&gt;對此我也寫了一個模板，提供最基礎的套用&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;p&gt;此專案最初的起因，出自於不斷重構 bot 的過程&lt;/p&gt;
&lt;p&gt;考慮到 library 版本汰換的不方便，想將邏輯與函式分隔，中間用自己的方法重新宣告&lt;/p&gt;
&lt;p&gt;如此，往後 library 的更新，我們可以最大限度的僅更新自身提供的方法即可，而不修改邏輯&lt;/p&gt;
&lt;p&gt;截止於本文為止，此庫提供 12.5.3 與 13.1.0 的模板，可以直接輸入 bot key 套用&lt;/p&gt;
&lt;p&gt;由於此模板偏向基礎的重構，目前尚未添加額外的功能&lt;/p&gt;
&lt;p&gt;因此，此模板適合給&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原本就對 discord.js 有一定了解的人&lt;/li&gt;
&lt;li&gt;針對重構的方法沒有頭緒，同時又希望可以解決版本汰換問題的使用者&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;較不適合於&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原本對 discord.js 較不熟悉的人&lt;/li&gt;
&lt;li&gt;希望啟動後可以立即實現多種功能的人&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不過，關於功能的部分，目前也有計畫開發；&lt;br&gt;諸如基本指令，音樂系統等功能，未來預計會以插件的形式，另外放在其他 project 中。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Mr-Smilin/BaseDiscordBot&#34;&gt;Git&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>