{
    "version": "https://jsonfeed.org/version/1",
    "title": "微笑工房 • All posts by \"教學\" tag",
    "description": "程式教學 C#/JAVA/HTML5/NODE.JS，後端開發，日常瑣記",
    "home_page_url": "https://smilin.net",
    "items": [
        {
            "id": "https://smilin.net/2024/04/13/autoPixai/",
            "url": "https://smilin.net/2024/04/13/autoPixai/",
            "title": "自動領取 Pixai 每日獎勵",
            "date_published": "2024-04-13T11:00:00.000Z",
            "content_html": "<p><img src=\"/img/post/autoPixai_01.jpg\" alt=\"title\"></p>\n<p>工程網址<br><a href=\"https://github.com/Mr-Smilin/auto-pixai\">Github</a><br><a href=\"https://hub.docker.com/r/smile0301/auto-pixai\">Docker Hub</a></p>\n<p>近幾年 AI 工具日新月異<br>我也有幸接觸了 AI 繪圖相關的一鱗半角</p>\n<p>其中 <a href=\"https://pixai.art/\">pixai</a> 是少有的雲端免費算圖網站</p>\n<p>在 pixai 如果對產出來的圖感到滿意的話<br>可以透過 AI 進一步運算，產出會動的圖</p>\n<span id=\"more\"></span>\n\n<hr>\n<br>\n\n<p>不過說是免費，其實還是有些限制的</p>\n<p>在網站上的運算行為都需要消耗點數，無論是靜態或動態</p>\n<p>而點數除了透過付費與活動取得以外<br>pixai 每日都有一萬點數可供會員領取，也就是每日獎勵</p>\n<p><img src=\"/img/post/autoPixai_02.jpg\" alt=\"每日獎勵\"></p>\n<p>只要每天領取就可以免費算圖了，整個佛心來著對吧</p>\n<p>不過我最喜歡花費幾個小時來搞定原本一分鐘可以做到的事情(x</p>\n<hr>\n<br>\n\n<p><a href=\"https://github.com/Mr-Smilin/auto-pixai\">auto-pixai</a></p>\n<p>只要輸入帳號跟密碼，該腳本執行一次就會自動進網站領取每日獎勵</p>\n<p>使用 node.js 撰寫，另有 Docker 容器化，開箱即用</p>\n<pre><code>docker pull smile0301/auto-pixai\ndocker run -e LOGINNAME=&lt;你的帳號&gt; -e PASSWORD=&lt;你的密碼&gt; --name &lt;container-name&gt; smile0301/auto-pixai\n</code></pre>\n",
            "tags": [
                "node.js",
                "教學",
                "docker"
            ]
        },
        {
            "id": "https://smilin.net/2022/11/01/bdb3/",
            "url": "https://smilin.net/2022/11/01/bdb3/",
            "title": "BDB更新日誌#3",
            "date_published": "2022-11-01T10:00:00.000Z",
            "content_html": "<h2 id=\"主要更新\"><a href=\"#主要更新\" class=\"headerlink\" title=\"主要更新\"></a>主要更新</h2><ul>\n<li>DiscordJSmySelf 更名為 BaseDiscordBot</li>\n<li>discord.js 的所有參考都塞進 BaseDiscordBot</li>\n<li>斜線 &#x2F; 選項 &#x2F; 按鈕 &#x2F; 菜單 框架完成</li>\n</ul>\n<h3 id=\"次要更新\"><a href=\"#次要更新\" class=\"headerlink\" title=\"次要更新\"></a>次要更新</h3><ul>\n<li>env 更新</li>\n<li>readMe 更新</li>\n</ul>\n<h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3><p><a href=\"https://github.com/Mr-Smilin/BaseDiscordBot/tree/v14.6.0\">github 頁面</a></p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"一些話\"><a href=\"#一些話\" class=\"headerlink\" title=\"一些話\"></a>一些話</h2><br>\n嗨，昨天才見面呢  \n最近比較閒，忽然就可以比較常更新日誌了\n\n<p>其實原本有點懶得寫，但 BDB 目前的狀態，跟之前相比算是有了非常大的改變<br>所以就稍微紀錄一下，雖然、大概、沒人看就是了 xD ~~</p>\n<br>\n\n<hr>\n<h3 id=\"主要更新說明\"><a href=\"#主要更新說明\" class=\"headerlink\" title=\"主要更新說明\"></a>主要更新說明</h3>  <br>\n首先，最重要的就是，DBD 的核心文件做了一次更名啦 ~~ <br> \n筆者實在是對命名很不在行，原本的想法很單純，想寫一套屬於我的翻譯文件  <br>\n用來翻譯 discord.js 的 API ，這樣以後 discord.js 改版的時候，就不用再把原有的邏輯拆掉重組了  \n  <br><br>\n新的名字與專案相同，也算是重新確立了本專案的方向 (啪嘰啪嘰~)  \n  \n  <br>\n  \n<p>雖然認真的朋友應該早就看出來了，其實筆者的程式水平並不怎樣呢，也難怪會當受薪階級了 (x)<br>不過筆者也沒有因此放棄，目標一直都是在程式的道路上磨練，所以相較於以往，對程式的理解還是有提高的喔</p>\n<p>這次花了些時間整理，正式將所有與 discord.js 有關的 import 都塞入 BDB 內了<br>也就是以後使用 BDB，就真正可以做到換一個檔案 -&gt; 升級完畢，的這種事情了 ~~<br>雖然只是初衷一般的事情，也是最近稍微閒下來才終於可以整理好啊..感覺審視了一次自己的作業效率阿 (汗)</p>\n  <br>\n\n<p>以及相比前兩個比較小咖，但也算是主要更新的<br>discord.js 13 版引入，14 版改過一次實例方式的各種功能都做出框架了<br>雖然沒能在 13 版時就做出來有點遺憾，但筆者對目前的框架很有自信，相信等 15 版出來的時候，這些 code 也會很容易維護吧！</p>\n<br>\n\n<hr>\n<h3 id=\"次要更新說明\"><a href=\"#次要更新說明\" class=\"headerlink\" title=\"次要更新說明\"></a>次要更新說明</h3>  <br>\n在env的部分加上了 `MASTER_ID`，並沒有實際功能<br>    \n更多是用於 DEBUG，或是往後要開一些只有自己能用的開發人員指令時可以使用  \n  \n  <br>\n  \n<p>因為更新內容眾多， readMe 也做了一次更新，改了不少，但還是缺很多東西，只交代了最基本的內容<br>畢竟使用 BDB 相當於重新認識一種 API ，未來想開一份專屬於 BDB 的文檔<br>不知道還要多久就是了，請大家等等我囉 xD ~</p>\n<br>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學"
            ]
        },
        {
            "id": "https://smilin.net/2022/10/31/bdb2/",
            "url": "https://smilin.net/2022/10/31/bdb2/",
            "title": "BDB更新日誌#2 - discord.js v14.6.0",
            "date_published": "2022-10-31T10:00:00.000Z",
            "content_html": "<h2 id=\"主要更新\"><a href=\"#主要更新\" class=\"headerlink\" title=\"主要更新\"></a>主要更新</h2><ul>\n<li>將專案適配到 <code>discord.js</code> v14.6.0 版本</li>\n<li>全版本專案棄用 <code>auth.json</code> ，改成 <code>.env</code></li>\n</ul>\n<h3 id=\"次要更新\"><a href=\"#次要更新\" class=\"headerlink\" title=\"次要更新\"></a>次要更新</h3><ul>\n<li>message 邏輯整合</li>\n<li>修改部分註解</li>\n</ul>\n<h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3><p><a href=\"https://github.com/Mr-Smilin/BaseDiscordBot/tree/v14.6.0\">github 頁面</a></p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"一些話\"><a href=\"#一些話\" class=\"headerlink\" title=\"一些話\"></a>一些話</h2><p>大家好，我是微笑</p>\n<p>這次版本更新，在基本架構上跟 13 並沒有差太多<br>主要是修改了之前 code 的一些架構設計，讓主體更加精簡了一些，以及使用更加正規的方式儲存私密數值</p>\n<p>之後如果時間允許，希望可以將自己的 bot 提升到 14.6.0 的版本(12 遇到的 bug 越來越多了<del>)<br>屆時或許會再將功能拆分，更新到這邊吧，不過因為已經真鹿太多次了，已經有點不好意思給承諾了，各位看看就好吧，哈哈哈</del></p>\n<br>\n\n<hr>\n<h3 id=\"主要更新說明\"><a href=\"#主要更新說明\" class=\"headerlink\" title=\"主要更新說明\"></a>主要更新說明</h3><p>原本專案使用 json 做參數管理<br>最近筆者因為換了上雲平台，重新研究了一次相關資料，這次索性將 <code>auth.json</code> 棄用，統一改成 <code>.env</code><br>利用 <code>dotenv</code> 的效果，就可以用 <code>process.env.</code> 的方式載入各種環境參數了</p>\n<p><img src=\"https://i.imgur.com/yCrkWDD.png\" alt=\"引入dotenv，改用process.env.xxx來取值\"></p>\n<br>\n\n<hr>\n<h3 id=\"次要更新說明\"><a href=\"#次要更新說明\" class=\"headerlink\" title=\"次要更新說明\"></a>次要更新說明</h3><p>另外比較重要的修改，就是原本將 message 入口放在主程序，看起來挺奇怪的，就跟 <code>prefix.json</code> 一起重新統合到獨立的分類了<br>以及在註解上，也重新做了一輪調整，讓文件間的註解存在統一性，相對不會太過雜亂</p>\n<p><img src=\"https://i.imgur.com/0m0R3m4.png\" alt=\"prefix.json更名，並且放入messageManager模組內\"></p>\n<p><img src=\"https://i.imgur.com/c7brWXz.png\" alt=\"把message邏輯搬到獨立文件內，以及部分註解統一\"></p>\n<br>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學"
            ]
        },
        {
            "id": "https://smilin.net/2022/10/25/herokuToRender/",
            "url": "https://smilin.net/2022/10/25/herokuToRender/",
            "title": "將專案從heroku轉到render過程思路",
            "date_published": "2022-10-25T10:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>大家好，我是微笑</p>\n<p>繼上次發文過了九個月了</p>\n<p>很可怕啊，感覺自己好混，哈哈哈</p>\n<p>疫情期間，遇到了不少事情，最近才終於有一點調整回正軌的感覺</p>\n<p>剛好 Heroku 發生了一些問題，需要搬移程序到其他託管平台，這邊順便 <del>水一點文章</del></p>\n<br>\n\n<span id=\"more\"></span>\n\n<hr>\n<h3 id=\"關於發生在-Heroku-上的一些問題\"><a href=\"#關於發生在-Heroku-上的一些問題\" class=\"headerlink\" title=\"關於發生在 Heroku 上的一些問題\"></a>關於發生在 Heroku 上的一些問題</h3><p>Heroku 在10月初時，寄送給了開發者一封信</p>\n<p>裡面提到，Heroku 將於2022年11月28號以後，全面關閉免費方案的主機</p>\n<p>如果繼續使用 Heroku 的話，根據目前定價方案，一台託管主機需要負擔一個月 7 美元的成本</p>\n<p>對於單純在學習的學生，又或是我這種程序用愛發電沒有利益的行為，顯然是十足的噩耗</p>\n<p>也因此，原本在 Heroku 上使用免費方案的使用者，開始到處尋找可以繼續使用的平台。</p>\n<p><img src=\"https://i.imgur.com/K3Pngg8.png\" alt=\"heroku將於2022年11月28號以後，全面關閉免費方案的主機\"></p>\n<br>\n\n<hr>\n<h3 id=\"多樣化的選擇\"><a href=\"#多樣化的選擇\" class=\"headerlink\" title=\"多樣化的選擇\"></a>多樣化的選擇</h3><p>因應 Heroku 收費化的開始，有許多平台陸續浮現到開發者的眼前，其中甚至有網站的標題是「Migrate from Heroku to Railway」</p>\n<p>可以看到，除了 Heroku 以外仍有許多平台等待著開發者發掘(Fly.io&#x2F;Railway.app&#x2F;GoogleCloudPlatform - CloudRun等..)</p>\n<p>雖然根據專案不同，沒有所謂最好的選擇，不過筆者在多次嘗試後，最後決定將程式搬遷到 Render 上</p>\n<br>\n\n<hr>\n<h3 id=\"render-com\"><a href=\"#render-com\" class=\"headerlink\" title=\"render.com\"></a>render.com</h3><p><img src=\"https://i.imgur.com/JqcraLM.png\" alt=\"render.com\"></p>\n<br>\n\n<p>當初搬遷主機時，最看中的點就是希望能盡量不用改動原本的架構，免費額度足夠</p>\n<p>Render 目前有著每月 750 小時的免費額度，只開一台機器的話等同免費</p>\n<p>並且他支援從 GitHub &#x2F; GitLab 等開源平台專案部署的方式，功能單一讓流程簡化</p>\n<p>除了支援許多語言直接部署，也支援 Docker 映像檔部署，這幾乎是現在主流平台都有的功能了。</p>\n<p>那因為筆者的專案使用 Node.js，剛好在 Render 支援的語言列表內，所以設定好之後，將專案推到 Github，他就會自動做部署行為了</p>\n<br>\n\n<hr>\n<h3 id=\"部署流程\"><a href=\"#部署流程\" class=\"headerlink\" title=\"部署流程\"></a>部署流程</h3><br>\n\n<p>第一次部署肯定會比較麻煩的</p>\n<p>首先我們要先用 Github 帳號登入 Render 註冊帳號，進來後他會先告訴你，免費方案如以下</p>\n<p><img src=\"https://i.imgur.com/TFqJqEB.png\" alt=\"免費方案\"></p>\n<br>\n\n<p>Render 提供許多方案，這邊我們要找到 web services 才能使用免費主機</p>\n<br>\n\n<p><img src=\"https://i.imgur.com/JgEO1dE.png\" alt=\"Overview\"></p>\n<br>\n\n<p>之後取得 Github 授權 repository，就可以載入專案，選擇主機地區，語言等設置</p>\n<p>比較需要注意的是，因為 Render 的 web 每個半小時無人訪問，會進入休眠(記得 Heroku 也有這類設定)</p>\n<p>需要再次訪問網站才能讓他喚醒</p>\n<p>以 Node 來說，我們可以使用 request 跟 node-schedule ，呼叫自己防止進入睡眠的方式，來讓真正需要的程序能不間斷運行</p>\n<br>\n\n<hr>\n<h3 id=\"env\"><a href=\"#env\" class=\"headerlink\" title=\"env\"></a>env</h3><br>\n\n<p>以前在 Heroku ，如果不透過 Github 自動部署，而是用 Heroku Git 的話，是可以直接將較為私密的 key 等資料，直接明碼上傳上去的</p>\n<p>雖然不是很好的做法，但是對於私人專案來說，這的確是個很方便的做法，只上傳在 Heroku 也有效的保障了程序的安全性</p>\n<p>但是 Render 只接受 Github 鏡像部署，私密的 key 是無論如何都不會放在 Github 上的</p>\n<p>Render 在 env 的設定上也是十分方便，<a href=\"https://render.com/docs/configure-environment-variables\">官方流程可參考這篇文檔</a></p>\n<p><img src=\"https://i.imgur.com/dvzYkqs.png\" alt=\"env\"></p>\n<br>\n\n<p>單一的 key 要放在 Environment Variables</p>\n<p>如果原本就習慣使用 .env 管理所有參數的話，可以將檔案的內容複製進 Secret Files</p>\n<p>Render 在 env 有個好處是，一般平台設置 env 後，基於安全性，平台都不會讓使用者在前台存取 env 的真實資料</p>\n<p>但是 Render 可以，而且還可以直接修改內容，雖然必須犧牲一些安全性，但這樣也方便了開發者對值的管理，對筆者來說是利大於弊</p>\n<br>\n\n<hr>\n<h3 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h3><br>\n\n<p>筆者當初使用 Heroku，是因為接觸了 discord bot，為此還寫了鐵人賽</p>\n<p>說長不長說短不短的兩年，Heroku 宣告收費化，對於筆者這樣的使用者來說，就像是一個平台的關閉一般</p>\n<p>這兩年從後端摸到前端，再從前端學回後端，因為疫情也遇到了不少事情，原本覺得搬遷主機，對於筆者這點能力來說一定是一件艱鉅的工程</p>\n<p>不過在搬遷的過程中，重新拾起 Node，摸索對筆者最好的平台時，感受到許多愉快，有一種 原來我還是能快樂寫 code 阿，的感想</p>\n<p>我想 sideProject 就像是開發者們心靈的綠洲吧，能因為這次機會，重新澆灌他，我也收穫頗豐。</p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10255630\">文末附上去年內部員工自己寫的推薦文</a></p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "heroku",
                "render",
                "render.com"
            ]
        },
        {
            "id": "https://smilin.net/2022/01/17/bdb1/",
            "url": "https://smilin.net/2022/01/17/bdb1/",
            "title": "BDB更新日誌#1",
            "date_published": "2022-01-17T10:00:00.000Z",
            "content_html": "<h2 id=\"主要更新\"><a href=\"#主要更新\" class=\"headerlink\" title=\"主要更新\"></a>主要更新</h2><ul>\n<li>bot 啟動時自動註冊斜線命令</li>\n</ul>\n<h3 id=\"次要更新\"><a href=\"#次要更新\" class=\"headerlink\" title=\"次要更新\"></a>次要更新</h3><ul>\n<li>斜線命令相關邏輯調整</li>\n<li>修改 js 檔名</li>\n<li>修改部分註解</li>\n</ul>\n<h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3><p><a href=\"https://github.com/Mr-Smilin/BaseDiscordBot/tree/2e168a31c74994c18e276f8f4bf1ff67d74803c9\">github 頁面</a></p>\n<span id=\"more\"></span>\n\n<br>\n\n<hr>\n<h2 id=\"一些話\"><a href=\"#一些話\" class=\"headerlink\" title=\"一些話\"></a>一些話</h2><p>大家好，我是微笑</p>\n<p>總覺得很久沒發文，自上次簡單介紹 discord.js 升版後有四個月了…</p>\n<p>與以往渾渾噩噩不同，<br>架設了 blog、有了實際的紀錄後更可以感覺到自己必需努力(雖然平常更多時間都在放電 haha)</p>\n<p>原本新年後第一篇文章，希望可以寫點想說的話；<br>可之前沒有相關經驗，一到真的要動筆時總是不知道該寫些甚麼。<br>結果就拖到現在了，實在是有點慚愧(抹臉</p>\n<p>雖然不是 2022 第一篇，相關的雜談就留待日後吧~<br>這邊做為更新日誌，會盡量以介紹更新為主的，恩恩。</p>\n<br>\n\n<hr>\n<h3 id=\"主要更新說明\"><a href=\"#主要更新說明\" class=\"headerlink\" title=\"主要更新說明\"></a>主要更新說明</h3><p>敘述上挺好懂的，BDB(BaseDiscordBot)原本並不會在註冊時自動跑<a href=\"https://discord.js.org/#/docs/discord.js/v13/class/GuildApplicationCommandManager\">斜線指令</a>。<br>原本的 code 有點問題，這次改了寫法，並且拉進了<a href=\"https://discord.js.org/#/docs/discord.js/v13/class/Client?scrollTo=e-ready\">Client#ready</a>事件內。<br>以後執行時，就會將 bot 所在的所有群組都註冊一次斜線指令</p>\n<p><img src=\"https://i.imgur.com/wFQPoia.png\" alt=\"移除註解，修改傳入的參數\"></p>\n<p><img src=\"https://i.imgur.com/J8d01FY.png\" alt=\"實際在ready呼叫了InsertSlash\"></p>\n<br>\n\n<hr>\n<h3 id=\"次要更新說明\"><a href=\"#次要更新說明\" class=\"headerlink\" title=\"次要更新說明\"></a>次要更新說明</h3><p>原本 BDB 在升級到 discord.js 13 時，目標著重在保全 <strong>功能模組化</strong> 此一優點上，<br>斜線指令的兼容，並沒有花費過多的時間去研究。</p>\n<p>此次除了主要更新中提到的內容，還修改了斜線指令被觸發時的邏輯，<br>將 reply 一同寫在 json 內，以利於往後擴充。</p>\n<p>改動簡易，優點也是顯而易見的，<br>有效避免日後斜線指令過多，註冊與回傳列表不同步的風險。</p>\n<p>基於 <strong>功能模組化</strong> 訴求，針對這一塊的下一步優化，<br>預計會是在程式碼上做出子母 json 檔案；<br>可以根據要使用的功能別，來直接套用各個功能對應的 json。</p>\n<br>\n\n<hr>\n<br>\n\n<p>原本 BDB 的啟動檔取名做 bot.js，因筆者自身寫的 bot，檔名都是 alice(女兒)。<br>BDB 畢竟也是我的專案，怎麼可以有差別待遇呢(不是<br>乾脆就一併統一成愛稱了。</p>\n<p>另外調整了一點點註解上的形容。</p>\n<p><img src=\"https://i.imgur.com/l93RXrB.png\" alt=\"修改了斜線指令，以回傳類型決定邏輯\"></p>\n<p><img src=\"https://i.imgur.com/QOybZGB.png\" alt=\"調整後的slashJson\"></p>\n<p><img src=\"https://i.imgur.com/bvwPWkT.png\" alt=\"調整了註解與執行的jsName\"></p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學"
            ]
        },
        {
            "id": "https://smilin.net/2021/12/14/racingScript-worldFlipper/",
            "url": "https://smilin.net/2021/12/14/racingScript-worldFlipper/",
            "title": "競速疊屍腳本 - 台版彈射世界",
            "date_published": "2021-12-14T04:00:00.000Z",
            "content_html": "<h2 id=\"腳本運作環境\"><a href=\"#腳本運作環境\" class=\"headerlink\" title=\"腳本運作環境\"></a>腳本運作環境</h2><p>型號<br>redmi note 8 pro</p>\n<p>解析度<br>1080x2340</p>\n<p>如果你跟筆者用的是同解析度甚至同一台手機<br>欸、恭喜、<del>我們貼貼</del> 大部份體驗會很良好</p>\n<span id=\"more\"></span>\n\n<h2 id=\"適配機型-缺乏資料，歡迎各位踴躍提供\"><a href=\"#適配機型-缺乏資料，歡迎各位踴躍提供\" class=\"headerlink\" title=\"適配機型(缺乏資料，歡迎各位踴躍提供)\"></a>適配機型(缺乏資料，歡迎各位踴躍提供)</h2><p>缺乏資料，歡迎各位踴躍提供</p>\n<hr>\n<h2 id=\"載點\"><a href=\"#載點\" class=\"headerlink\" title=\"載點\"></a>載點</h2><p><a href=\"https://www.zdjl.org/\">腳本精靈 apk</a></p>\n<p><a href=\"https://drive.google.com/file/d/15BtIQWg8qRVFHv9yN2u3V20YBUY0hlgq/view?usp=sharing\">雲水小號腳本三件套</a></p>\n<h2 id=\"安裝教學\"><a href=\"#安裝教學\" class=\"headerlink\" title=\"安裝教學\"></a>安裝教學</h2><p>下載上方兩個檔案後，安裝腳本精靈</p>\n<p>開啟腳本精靈，給予權限後，點選畫面中下方的 <strong>製作</strong><br>直到彈回主畫面後，即可關閉腳本精靈</p>\n<p>這時候，手機根目錄會出現一個叫做 <strong>自动精灵</strong> 的資料夾<br>將雲水小號三件套解壓，將檔案放入該資料夾</p>\n<p>回到腳本精靈就會看到此腳本</p>\n<h2 id=\"使用教學\"><a href=\"#使用教學\" class=\"headerlink\" title=\"使用教學\"></a>使用教學</h2><p>請使用新角色開始遊戲，並且手動玩到 1-4-2，打完貓頭鷹並解鎖 auto 系統<br>之後運行腳本即可(不用再手動玩到貓頭鷹)</p>\n<p>會這樣設計是因為大家解析度不同，很有可能我寫完的腳本你不能用<br>而開啟 auto 後的腳本邏輯相對簡單，理論上相對不會有 bug，所以將腳本啟動點放在這</p>\n<h2 id=\"無論如何都希望可以從創角開始就全自動\"><a href=\"#無論如何都希望可以從創角開始就全自動\" class=\"headerlink\" title=\"無論如何都希望可以從創角開始就全自動\"></a>無論如何都希望可以從創角開始就全自動</h2><p>開啟腳本，請點選 <strong>雲水小號全自動</strong>，之後點右下角的編輯</p>\n<div  align=\"center\">\n<img src=\"https://i.imgur.com/x11mtLv.jpg\" width = \"30%\" height = \"30%\" alt=\"\" align=center />\n</div>\n\n<p>腳本出現後，開啟遊戲，到主畫面</p>\n<div  align=\"center\">\n<img src=\"https://i.imgur.com/pMP0WVz.jpg\" width = \"30%\" height = \"30%\" alt=\"\" align=center />\n</div>\n請確認當前是處於新角色且從未登入狀態，如果不是，請從右上角設定中 **刪除資料** \n之後將腳本拉到第六點 **創角流程** (圖中第四點是舊的，錯誤的)，長按後會出現 **從這裡開始運行** \n點選後就會從創角開始自動循環了。\n\n<h2 id=\"如果我在運行過程因為-BUG-充電-手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷\"><a href=\"#如果我在運行過程因為-BUG-充電-手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷\" class=\"headerlink\" title=\"如果我在運行過程因為 BUG&#x2F;充電&#x2F;手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷\"></a>如果我在運行過程因為 BUG&#x2F;充電&#x2F;手不小心按到等原因，導致中斷執行了，可以再繼續運行腳本嗎，還是只能重刷</h2><p>可以繼續運行腳本，不用重刷，這邊介紹一下腳本的大概流程<br>腳本大概可以拆成幾個區塊，由上到下依序是</p>\n<p>1.開啟 auto&amp;跳過&amp;下一步 2.打雲水囉 3.重開小號 4.關閉&amp;開啟彈射世界 5.創角流程 6.手操&amp;跳過&amp;下一步 7.腳本手操<br>(以上名稱皆對應腳本描述)</p>\n<h3 id=\"開啟-auto-跳過-下一步\"><a href=\"#開啟-auto-跳過-下一步\" class=\"headerlink\" title=\"開啟 auto&amp;跳過&amp;下一步\"></a>開啟 auto&amp;跳過&amp;下一步</h3><p>指通關貓頭鷹(1-4-2)以後，到第 1 章全通關，這期間的所有關卡都會在這個分類內循環<br>如果在這期間中斷了腳本，<font color=#FF6600>回到有 new 關卡的地方啟動腳本即可</font></p>\n<h3 id=\"打雲水囉\"><a href=\"#打雲水囉\" class=\"headerlink\" title=\"打雲水囉\"></a>打雲水囉</h3><p>指打通第一章最終 boss 並通過最後兩個故事，獲得第一章武器寶珠 精靈的微笑 後，會切換到此流程<br>此分類涵蓋從第一章退出，進入活動頁，進雲水，被送出來結算後<br>因此，如果打完第一章後忽然中斷，想從這裡繼續執行是可以的<br>但因為打完雲水就要換帳號了，個人是建議<font color=#FF6600>各位直接手動進雲水送死，重新刷號比較快。</font></p>\n<h3 id=\"重開小號\"><a href=\"#重開小號\" class=\"headerlink\" title=\"重開小號\"></a>重開小號</h3><p>指被雲水送出來後，回到標題畫面刪除帳號資料<br>這一段區間是不會無限執行的，跟上一個分類一樣，<font color=#FF6600>卡在這建議直接手動</font></p>\n<h3 id=\"關閉-開啟彈射世界\"><a href=\"#關閉-開啟彈射世界\" class=\"headerlink\" title=\"關閉&amp;開啟彈射世界\"></a>關閉&amp;開啟彈射世界</h3><p>指刪除完角色資料後，重新啟動彈射世界，以釋放部分記憶體<br>跟上一個分類一樣，<font color=#FF6600>卡在這建議自己重啟，並且改用 記憶體負載 版本</font></p>\n<h3 id=\"創角流程\"><a href=\"#創角流程\" class=\"headerlink\" title=\"創角流程\"></a>創角流程</h3><p>指從主畫面進入，直到領完登入獎勵&amp;夏日登入獎勵這段時間<br>如果創角期間有任何原因中斷腳本，可以長按這個分類並且選擇 <font color=#FF6600>從這裡開始運行</font></p>\n<h3 id=\"手操-跳過-下一步\"><a href=\"#手操-跳過-下一步\" class=\"headerlink\" title=\"手操&amp;跳過&amp;下一步\"></a>手操&amp;跳過&amp;下一步</h3><p>指領完登入獎勵，1-1-1 到 1-4-2 期間的所有流程<br>如果是在打完貓頭鷹前就發生意外，導致腳本中斷的話<br>請回到有 new 關卡的地方，長按這個分類並且選擇 <font color=#FF6600>從這裡開始運行</font></p>\n<h3 id=\"腳本手操\"><a href=\"#腳本手操\" class=\"headerlink\" title=\"腳本手操\"></a>腳本手操</h3><p>此分類與上一個分類連動，當運行手操流程，進關卡時，會進入此分類<br><font color=#FF6600>無論任何情況都不會從這個分類中繼續執行</font></p>\n<h2 id=\"若是因為解析度問題，導致這個腳本在你的環境中有一堆問題\"><a href=\"#若是因為解析度問題，導致這個腳本在你的環境中有一堆問題\" class=\"headerlink\" title=\"若是因為解析度問題，導致這個腳本在你的環境中有一堆問題\"></a>若是因為解析度問題，導致這個腳本在你的環境中有一堆問題</h2><p>請改為使用 <strong>雲水小號半自動</strong><br>此版本只會協助自動通關貓頭鷹後的關卡&amp;進雲水送頭<br>這一段的邏輯相對簡易，如果遇到問題各位也可以試著修改。</p>\n<h2 id=\"一些話\"><a href=\"#一些話\" class=\"headerlink\" title=\"一些話\"></a>一些話</h2><details>\n  <summary>一些廢話</summary>\n  <p>\n        想寫這個腳本的想法，從修車大開始寫的雲水行前手冊時就有了；\n        時常一起玩的朋友沒有完美雷拳盤，希望可以繼續一起玩這款遊戲，大概是像這樣的想法。\n        雖然現實似乎是連完美盤也只能哭，能不能幫到他已經是未知數了\n  </p>\n  <p>\n        官方在競速開始前一刻，加強了模擬器的驗證機制，\n        這對於腳本的普及是毀滅性的；\n        模擬器可以提供的是統一的硬體規格與解析度，\n        關閉模擬器並不能遏阻使用外掛的使用者。\n        對於腳本的分享，會因為要考慮到機種規格不同，遇到極大的考驗，\n        這是十分打擊熱情的。\n  </p>\t\n  <p>\n        儘管如此，活動開始幾天後，知道版上需要腳本的人仍佔大多數，死馬當活馬醫，姑且還是嘗試著寫了一下，雖然已經預想的到腳本會有多難推廣了(扶額)；\n        希望各位願意點進這篇文章、願意幫助他人的你，哪怕只是想搶救下自己的排名，也別忘記保持善心，\n        不用理會其他人說腳本是外掛這類反智言論，純粹的理念會是你堅持使用腳本的秘訣。\n  </p>\n</details>\n\n<hr>\n<h2 id=\"常見問題\"><a href=\"#常見問題\" class=\"headerlink\" title=\"常見問題\"></a>常見問題</h2><p>Q: 腳本精靈自行停止運作<br>A: 通常是因為記憶體回收機制，自動將腳本精靈關閉導致，這時再次開啟腳本精靈也會有問題，請重開機，並且將腳本精靈設定成不可自動回收的應用程式(每家手機廠設定方式不同)<br>Ex:</p>\n<div  align=\"center\">\n<img src=\"https://i.imgur.com/yoVC16o.jpg\" width = \"30%\" height = \"30%\" alt=\"\" align=center />\n</div>\n\n<p>Q: 我的角色打關卡死掉，腳本就不會動了<br>A: 欸….我測試期間至少刷了 20 隻帳號，發文當下也在刷，目前沒有死過<br>亞里沙打 1 章跟鬼一樣，1 章的難度應該….是不會死的<br>萬一真刷出死掉的狀況…我..我再想想辦法。</p>\n<p>Q: 我的腳本擅自將遊戲關閉後，不會重新啟動<br>A: 部分機種不會讓腳本可以開關遊戲程式，筆者自己也是這一類機型，請使用 <strong>雲水小號全自動(記憶體負載)</strong><br>使用此版本不會自動重啟遊戲，大約 1 小時(刷 1~2 隻角色後)，需手動重啟遊戲，否則整隻手機會因為記憶體塞滿卡住。<br>p.s.就算是使用 <strong>雲水小號全自動</strong> 的使用者，也推薦每隔一小時查看一次手機，尤其是一開始幾分鐘，最好一直看著，腳本終究只是腳本，只要出現突發狀況就會炸掉 <del>當然也有筆者寫得不好的原因</del></p>\n<p>Q: 動作運行失敗，已暫停<br>A: 通常是運行期間閃退，導致部分權限拿不到，重開機解決</p>\n<p>Q: 截屏為空，請確定是否開啟了其他截屏軟件<br>A: 關閉其他允許顯示在應用上層的軟件後再嘗試</p>\n<p>Q: 運行失敗&amp;卡在奇怪的地方不繼續動了<br>A: 請依照上方教學，從一般運行改為編輯模式，可以試著調整抓取圖片解析度，或是抓圖範圍，使腳本適配於自身機種<br>並且提供機型&amp;解析度&amp;卡住的地方，在下方留言給我，又或是透過巴哈站內信給我，以利資料蒐集&amp;幫助更多的人</p>\n<p>不知道該怎麼留言時，可以試著使用的留言格式</p>\n<pre><code>機種(必填):\n解析度:\n卡住的地方(必填):\n狀況的補充說明:\n想說的話:\n截圖:\n</code></pre>\n",
            "tags": [
                "教學",
                "彈射世界",
                "遊戲",
                "腳本"
            ]
        },
        {
            "id": "https://smilin.net/2021/11/16/fluidThemeShare/",
            "url": "https://smilin.net/2021/11/16/fluidThemeShare/",
            "title": "fluid支持pjax主題源碼分享",
            "date_published": "2021-11-16T04:00:00.000Z",
            "content_html": "<p><img src=\"https://i.imgur.com/yl9bnuZ.png\" alt=\"theme\"></p>\n<h1 id=\"寫在前面\"><a href=\"#寫在前面\" class=\"headerlink\" title=\"寫在前面\"></a>寫在前面</h1><pre><code>本主題基於 fluid 1.8.11 版本製作，在此之上參雜了許多私貨\n又因為本人前端並不熟練，源碼被改得亂七八糟的，因此有任何問題在blog聯繫我詢問即可。\n再此感謝開發 and 維護源碼的所有大大們。\n</code></pre>\n<h2 id=\"fluid-主題主要改動\"><a href=\"#fluid-主題主要改動\" class=\"headerlink\" title=\"fluid 主題主要改動\"></a>fluid 主題主要改動</h2><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> pjax 支持</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 添加本地音樂箱</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 添加右下角 Live2D 妹子</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> pjax JS 回調(解決大部分 fluid 不支持 pjax 之異常)</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 目錄頁次浮動顯示</li>\n<li><input disabled=\"\" type=\"checkbox\"> 文章列表搜出留言數</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Markdown 介面修改</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 文章底部上下篇連結位置對調(上一篇就該在左邊，下一篇就該在右邊 &#x3D; &#x3D; )</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 修復繁體中文字型</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> rss 功能</li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"環境配置\"><a href=\"#環境配置\" class=\"headerlink\" title=\"環境配置\"></a>環境配置</h2><pre><code>hexo -v\nINFO  Validating config\nhexo: 5.4.0\nhexo-cli: 4.3.0\n</code></pre>\n<p>主題下載</p>\n<pre><code>https://github.com/Mr-Smilin/hexo-theme-fluid.git\n</code></pre>\n<p>hexo _config 配置請添加以下</p>\n<h3 id=\"rss\"><a href=\"#rss\" class=\"headerlink\" title=\"rss\"></a>rss</h3><pre><code>feed:\n    type: atom # RSS的类型(atom/rss2)\n    path: atom.xml # 文件路径,默认是atom.xml/rss2.xml\n    limit: 20 # 展示文章的数量,使用0或则false代表展示全部\n    hub:\n    content: # 在RSS文件中是否包含内容 ,有3个值 true/false默认不填为false\n    content_limit: # 指定内容的长度作为摘要,仅仅在上面content设置为false和没有自定义的描述出现\n    content_limit_delim: &#39; &#39; # 上面截取描述的分隔符,截取内容是以指定的这个分隔符作为截取结束的标志.在达到规定的内容长度之前最后出现的这个分隔符之前的内容,，防止从中间截断.\n</code></pre>\n<h3 id=\"live-2D\"><a href=\"#live-2D\" class=\"headerlink\" title=\"live 2D\"></a>live 2D</h3><pre><code>live2d:\n    enable: true\n    scriptFrom: local\n    pluginRootPath: live2dw/\n    pluginJsPath: lib/\n    pluginModelPath: assets/\n    tagMode: false\n    log: false\n    model:\n        use: live2d-widget-model-shizuku\n    display:\n        position: right\n        width: 150\n        height: 300\n    mobile:\n        show: false\n    react:\n        opacity: 0.7\n</code></pre>\n<p>更多 live2D 模組可訪問 <code>https://smilin.net/2021/11/16/live2DShareList/</code></p>\n<h3 id=\"音樂箱音樂\"><a href=\"#音樂箱音樂\" class=\"headerlink\" title=\"音樂箱音樂\"></a>音樂箱音樂</h3><p>開啟 <code>source\\dist\\music.js</code></p>\n<pre><code>const ap = new APlayer(&#123;\n    container: document.getElementById(&#39;aplayer&#39;),\n    fixed: true,\n    mini: true,\n    autoplay: false,\n    loop: &#39;all&#39;,\n    volume: 0.7,\n    listFolded: true,\n    listMaxHeight: 60,\n    audio: [\n        &#123;\n            name: &#39;最近在聽的歌&#39;,\n            artist: &#39;星茶会&#39;,\n            url: &#39;/music/星茶会.mp3&#39;,\n            cover: &#39;/img/avatar.png&#39;,\n        &#125;,\n        &#123;\n            name: &#39;最近在聽的歌&#39;,\n            artist: &#39;Fullmetal Alchemist Brotherhood&#39;,\n            url: &#39;/music/Fullmetal-Alchemist-Brotherhood.mp3&#39;,\n            cover: &#39;/img/avatar.png&#39;,\n        &#125;\n    ]\n&#125;);\n</code></pre>\n<p>對應路徑檔案可替換</p>\n<hr>\n<p>配置好後，做 hexo 上傳 sop</p>\n<pre><code>$ npm install #安裝library（僅第一次執行）\n$ hexo clean #清除\n$ hexo g #編譯\n$ hexo d #上傳git\n</code></pre>\n<p>以上就是配置此 theme 的流程，使用上若有遇到問題歡迎在底下詢問</p>\n<hr>\n<h2 id=\"期待這篇文章可以幫助到需要的人\"><a href=\"#期待這篇文章可以幫助到需要的人\" class=\"headerlink\" title=\"期待這篇文章可以幫助到需要的人\"></a>期待這篇文章可以幫助到需要的人</h2><p>fluid 是本 blog 第一個使用的 theme<br>fluid 的設計…非常讚!(詞窮)<br>逛著 blog 的期間，可以從各處巧思中感受到作者對美感的一套見解</p>\n<p>不過 fluid 因為其框架的侷限，其致命傷便是無法支援 pjax(ajax)做局部頁面更新<br>從 issues 上可以看到，對於 pjax 的開發目前是不了了之</p>\n<p>但這並非是 fluid 無法支援 pjax，而是因為引入 pjax 會破壞 fluid 既有框架<br>也因此這些改動要改進正式版本是十分困難的，但如果只是魔改的話，儘管是像筆者對前端並不精熟，也能試著修改(code 不保證好看就是了 xD)</p>\n<p>因為筆者最近可能會試著替換成其他主題，故想記錄下使用版本，算是分享。</p>\n",
            "tags": [
                "教學",
                "hexo",
                "fluid"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/30/12thDay30/",
            "url": "https://smilin.net/2020/09/30/12thDay30/",
            "title": "Day30 - tag控管機制(4)",
            "date_published": "2020-09-30T01:53:30.000Z",
            "content_html": "<p>今天把tag的最後一件事做完</p>\n<p>將使用者從指定權限組移除<br>將指定權限組移除</p>\n<p>在tag入口新增Delete方法</p>\n<span id=\"more\"></span>\n\n<p><img src=\"https://i.imgur.com/7Y2m2Rl.png\" alt=\"30-1\"></p>\n<p>創建實例</p>\n<p><img src=\"https://i.imgur.com/78vy8E8.png\" alt=\"30-2\"></p>\n<pre><code>//從權限組中刪除使用者 OR 刪除權限組\nfunction DeleteTag(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            tempIsAdmin = CheckID(msg, null, msg.author.id, function(msg, cmd, haveUserData) &#123;\n                if (haveUserData.IsAdmin) return true;\n                else return false;\n            &#125;);\n            if (tempIsAdmin) &#123;\n                nowDoFunction = DeleteTagNow;\n                DoUserID = msg.author.id;\n                DoData = new Array;\n                msg.channel.send(&#39;請問要編輯使用者權限還是權限組?\\n1 使用者權限 / 2 權限組&#39;);\n            &#125; else &#123;\n                msg.channel.send(&#39;此指令只有管理員可執行&#39;);\n            &#125;\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;DeleteTagError&#39;, err);\n    &#125;\n&#125;\n</code></pre>\n<p>創建續行實例</p>\n<pre><code>//從權限組中刪除使用者 OR 刪除權限組(續行)\nfunction DeleteTagNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                switch (msg.content) &#123;\n                    case &#39;1&#39;:\n                        msg.channel.send(&#39;請輸入要編輯的使用者ID&#39;);\n                        break;\n                    case &#39;2&#39;:\n                        DoingCount = 10;\n                        msg.channel.send(&#39;請輸入要編輯的權限組&#39;);\n                        break;\n                    default:\n                        DoingCount--;\n                        msg.channel.send(&#39;無法辨識訊息，請輸入1/2來選擇&#39;);\n                        break;\n                &#125;\n                break;\n            case 1:\n                if (msg.content == &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;指令關閉&#39;);\n                &#125; else &#123;\n                    if (CheckID(msg, null, msg.content, (msg, cmd, haveUserData) =&gt; &#123; return haveUserData &#125;)) &#123;\n                        DoData.push(msg.content); //userID\n                        DoData.push(msg.author.id); //userName\n                        msg.channel.send(&#39;請輸入要刪除的群組權限&#39;);\n                    &#125; else &#123;\n                        DoingCount--;\n                        msg.channel.send(&#39;此用戶不存在資料，請確認，如果要關閉指令請輸入 N&#39;);\n                    &#125;\n                &#125;\n                break;\n            case 2:\n                DoData.push(msg.content); // Power\n                DoData.push(false); // IsAdmin\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n使用者 &lt;@$&#123;DoData[0]&#125;&gt;\\n刪除權限組 $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 3:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    CheckID(msg, null, DoData[0], DeleteOldUserPower);\n                    GetGas.postUserPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            UserPowerData.unshift(&#123;\n                                &#39;userID&#39;: DoData[0],\n                                &#39;userName&#39;: DoData[1],\n                                &#39;Joins&#39;: DoData[2],\n                                &#39;IsAdmin&#39;: DoData[3]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n            case 11:\n                DoData.push(msg.content); //身分組ID\n                DoData.push(&#39;2&#39;); //type 2\n                DoData.push(&#39;&#39;);\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n刪除權限組 $&#123;DoData[0]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 12:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，沒有此身分組資料清除\n                    DeleteOldPartyPower();\n                    if (DoData[0] != &#39;&#39;) &#123;\n                        GetGas.postPartyPower(DoData, function(dataED) &#123;\n                            if (dataED) &#123;\n                                //bot內變數不會更新，手動更新\n                                PartyPowerData.unshift(&#123;\n                                    &#39;ID&#39;: DoData[0],\n                                    &#39;type&#39;: DoData[1],\n                                    &#39;Power&#39;: DoData[2]\n                                &#125;);\n                                msg.channel.send(&#39;輸入完畢!&#39;);\n                            &#125; else &#123;\n                                msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                            &#125;\n                            CloseAllDoingFunction();\n                        &#125;);\n                    &#125; else &#123;\n                        msg.channel.send(&#39;輸入完畢!&#39;);\n                        CloseAllDoingFunction();\n                    &#125;\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;DeleteTagNowError&#39;, err);\n    &#125;\n&#125;\n</code></pre>\n<p>創建刪除類方法</p>\n<p><img src=\"https://i.imgur.com/QZUmmzj.png\" alt=\"30-3\"></p>\n<pre><code>//用戶舊資料更新\nfunction DeleteOldUserPower(msg, cmd, haveUserData) &#123;\n    //二次確認\n    if (haveUserData) &#123;\n        if (DoData[0] == haveUserData.userID) &#123;\n            let str = haveUserData.Joins;\n            DoData[2] = str.toString().replace(DoData[2], &#39;&#39;);\n            DoData[3] = haveUserData.IsAdmin;\n            return true;\n        &#125; else return false;\n    &#125; else return false;\n&#125;\n</code></pre>\n<p><img src=\"https://i.imgur.com/6x3lpht.png\" alt=\"30-4\"></p>\n<pre><code>//權限組舊資料更新\nfunction DeleteOldPartyPower() &#123;\n    if (PartyPowerData) &#123;\n        const tempPartyData = PartyPowerData.find(element =&gt; &#123;\n            return element.ID == DoData[0];\n        &#125;)\n\n        if (tempPartyData == undefined) &#123;\n            DoData[0] = &#39;&#39;;\n            DoData[1] = &#39;&#39;;\n            DoData[2] = &#39;&#39;;\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<p>運行看看</p>\n<p><img src=\"https://i.imgur.com/QrQC5iq.png\" alt=\"30-5\"></p>\n<p><img src=\"https://i.imgur.com/vbEQ8EO.png\" alt=\"30-6\"></p>\n<p><img src=\"https://i.imgur.com/q9MDunU.png\" alt=\"30-7\"></p>\n<p><img src=\"https://i.imgur.com/RUpxxCl.png\" alt=\"30-8\"></p>\n<p>成功</p>\n<p>到此，番外的部分也說完了</p>\n<p>與基本的內容不同，多說了post的API，以及程式碼的部份相對複雜<br>且比起前面的篇幅，後續的文章大多都是直接貼了程式碼的順序，很少講解</p>\n<p>想必讀起來十分艱澀吧?能讀到這裡的你是十分了不起的，恭喜你看完了這篇文章</p>\n<p>儘管如此，這支程式仍然是不成熟的，筆者對每個功能盡量都只是點到為止，希望能把大部份的應用都帶到，後面便是要靠各位讀者<br>根據自己遇到的需求，來改善加強他吧，相信只要努力堅持，完成後的機器人一定會帶給各位程式能力上的提升的</p>\n<p>那麼，用Node.js製作後台零負擔的DiscordBot到此結束<br>祝各位中秋佳節愉快</p>\n<p>底下附上完整的bot.js，供參考</p>\n<pre><code>//#region 全域變數\nconst Discord = require(&#39;discord.js&#39;);\nconst client = new Discord.Client();\nconst ytdl = require(&#39;ytdl-core&#39;);\nconst ytpl = require(&#39;ytpl&#39;);\nconst auth = require(&#39;./JSONHome/auth.json&#39;);\nconst prefix = require(&#39;./JSONHome/prefix.json&#39;);\nconst GetGas = require(&#39;./Script/GetGas.js&#39;);\nconst shup = require(&#39;./JSONHome/shup.json&#39;);\n\n//存放BaseExcelAPI資料\nlet BaseExcelData = false;\nlet UserPowerData = false;\nlet PartyPowerData = false;\n\n//持續執行方法\nlet nowDoFunction = false;\nlet DoingCount = 0;\nlet DoUserID = &#39;&#39;;\nlet DoData = undefined;\n\n//#endregion\n\n//#region 登入\nclient.login(auth.key);\n\nclient.on(&#39;ready&#39;, () =&gt; &#123;\n    GetGas.getBaseExcel(function(dataED) &#123;\n        if (dataED) &#123;\n            BaseExcelData = dataED //有資料\n        &#125;\n        GetGas.getUserPower(function(dataED) &#123;\n            if (dataED) &#123;\n                UserPowerData = dataED;\n            &#125;\n            GetGas.getPartyPower(function(dataED) &#123;\n                if (dataED) &#123;\n                    PartyPowerData = dataED;\n                &#125;\n                console.log(`Logged in as $&#123;client.user.tag&#125;!`);\n            &#125;);\n        &#125;)\n    &#125;)\n&#125;);\n\n//#endregion\n\n//#region message事件入口\nclient.on(&#39;message&#39;, msg =&gt; &#123;\n    //前置判斷\n    try &#123;\n        if (!msg.guild || !msg.member) return; //訊息內不存在guild元素 = 非群組消息(私聊)\n        if (!msg.member.user) return; //幫bot值多拉一層，判斷上層物件是否存在\n        if (msg.member.user.bot) return; //訊息內bot值為正 = 此消息為bot發送\n    &#125; catch (err) &#123;\n        return;\n    &#125;\n\n    //續行方法\n    if (nowDoFunction &amp;&amp; msg.author.id === DoUserID) &#123;\n        nowDoFunction(msg);\n        return;\n    &#125;\n\n    //字串分析\n    try &#123;\n        let tempPrefix = &#39;-1&#39;;\n        const prefixED = Object.keys(prefix); //前綴符號定義\n        prefixED.forEach(element =&gt; &#123;\n            if (msg.content.substring(0, prefix[element].Value.length) === prefix[element].Value) &#123;\n                tempPrefix = element;\n            &#125;\n        &#125;);\n\n        //禁言系統判斷\n        if (!IsShut(msg, tempPrefix)) return;\n\n        //實作\n        switch (tempPrefix) &#123;\n            case &#39;0&#39;: //文字回應功能\n                BasicFunction(msg, tempPrefix);\n                break;\n            case &#39;1&#39;: //音樂指令 \n                MusicFunction(msg);\n                break;\n            case &#39;2&#39;: //機器人tag指令\n                TagFunction(msg, tempPrefix);\n                break;\n            default:\n                BaseExcelFunction(msg);\n                break;\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;OnMessageError&#39;, err);\n    &#125;\n&#125;);\n\n//#endregion\n\n//#region 基本指令系統\nfunction BasicFunction(msg, tempPrefix) &#123;\n    const cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(&#39; &#39;); //以空白分割前綴以後的字串\n    switch (cmd[0]) &#123;\n        case &#39;ping&#39;:\n            msg.channel.send(&#39;pong&#39;);\n            break;\n        case &#39;老婆&#39;:\n            msg.reply(&#39;你沒有老婆!!&#39;);\n            break;\n        case &#39;myAvatar&#39;:\n            const avatar = GetMyAvatar(msg);\n            if (avatar.files) msg.channel.send(`$&#123;msg.author&#125;`, avatar).catch(err =&gt; &#123; console.log(err) &#125;);\n            break;\n            // case &#39;test&#39;:\n            //     const testStr2 = msg.content.split(&#39; &#39;);\n            //     console.log(client.users.fetch(testStr2[1]).then(element =&gt; console.log(element.displayAvatarURL())));\n            //     break;\n    &#125;\n&#125;\n\n//#endregion\n\n//#region 音樂系統\n//歌曲控制器\nlet dispatcher = new Map();\n//歌曲清單\nlet musicList = new Map();\n\nfunction MusicFunction(msg) &#123;\n    //將訊息內的前綴字截斷，後面的字是我們要的\n    const content = msg.content.substring(prefix[1].Value.length);\n    //指定我們的間隔符號\n    const splitText = &#39; &#39;;\n    //用間隔符號隔開訊息 contents[0] = 指令,contents[1] = 參數\n    const contents = content.split(splitText);\n    //因為會持續使用到，將群組ID獨立成參數\n    const guildID = msg.guild.id;\n\n    switch (contents[0]) &#123;\n        case &#39;play&#39;:\n            //點歌&amp;播放歌曲功能\n            playMusic(guildID, msg, contents);\n            break;\n        case &#39;replay&#39;:\n            //重播當前歌曲\n            replayMusic(guildID);\n            break;\n        case &#39;np&#39;:\n            //當前歌曲資訊\n            nowPlayMusic(guildID, msg.channel.id);\n            break;\n        case &#39;queue&#39;:\n            //歌曲清單\n            queueShow(guildID, msg.channel.id);\n            break;\n        case &#39;skip&#39;:\n            //中斷歌曲\n            skipMusic(guildID);\n            break;\n        case &#39;disconnect&#39;:\n            //退出語音頻道並且清空歌曲清單\n            disconnectMusic(guildID, msg.channel.id);\n            break;\n        case &#39;playList&#39;:\n            //載入歌單\n            playListMusic(guildID, msg);\n            break;\n    &#125;\n&#125;\n\n//?play\nasync function playMusic(guildID, msg, contents) &#123;\n    //定義我們的第一個參數必需是網址\n    const urlED = contents[1];\n    try &#123;\n        //第一個參數不是連結就要篩選掉\n        if (urlED.substring(0, 4) !== &#39;http&#39;) return msg.reply(&#39;The link is not working.1&#39;);\n\n        //透過library判斷連結是否可運行\n        const validate = await ytdl.validateURL(urlED);\n        if (!validate) return msg.reply(&#39;The link is not working.2&#39;);\n\n        //獲取歌曲資訊\n        const info = await ytdl.getInfo(urlED);\n        //判斷資訊是否正常\n        if (info.videoDetails) &#123;\n            //指令下達者是否在語音頻道\n            if (msg.member.voice.channel) &#123;\n                //判斷bot是否已經連到語音頻道 是:將歌曲加入歌單 不是:進入語音頻道並且播放歌曲\n                if (!client.voice.connections.get(msg.guild.id)) &#123;\n                    //因為是第一次加入，宣告新的歌曲列表\n                    musicList.set(guildID, new Array());\n\n                    //將歌曲加入歌單\n                    musicList.get(guildID).push(urlED);\n                    //進入語音頻道\n                    msg.member.voice.channel.join()\n                        .then(connection =&gt; &#123;\n                            msg.reply(&#39;來了~&#39;);\n                            //const guildID = msg.guild.id;\n                            const channelID = msg.channel.id;\n                            //播放歌曲\n                            playMusic2(connection, guildID, channelID);\n                        &#125;)\n                        .catch(err =&gt; &#123;\n                            msg.reply(&#39;bot進入語音頻道時發生錯誤，請再試一次&#39;);\n                            console.log(err, &#39;playMusicError2&#39;);\n                        &#125;)\n                &#125; else &#123;\n                    //將歌曲加入歌單\n                    musicList.get(guildID).push(urlED);\n                    msg.reply(&#39;已將歌曲加入歌單!&#39;);\n                &#125;\n            &#125; else return msg.reply(&#39;請先進入頻道:3...&#39;);\n        &#125; else return msg.reply(&#39;The link is not working.3&#39;);\n    &#125; catch (err) &#123;\n        console.log(err, &#39;playMusicError&#39;);\n    &#125;\n&#125;\n\n//?play 遞迴函式\nasync function playMusic2(connection, guildID, channelID) &#123;\n    try &#123;\n        //播放前歌曲清單不能沒有網址\n        if (musicList.get(guildID).length &gt; 0) &#123;\n            //設定音樂相關參數\n            const streamOptions = &#123;\n                seek: 0,\n                volume: 0.5,\n                Bitrate: 192000,\n                Passes: 1,\n                highWaterMark: 1\n            &#125;;\n            //讀取清單第一位網址\n            const stream = await ytdl(musicList.get(guildID)[0], &#123;\n                filter: &#39;audioonly&#39;,\n                quality: &#39;highestaudio&#39;,\n                highWaterMark: 26214400 //25ms\n            &#125;)\n\n            //播放歌曲，並且存入dispatcher\n            dispatcher.set(guildID, connection.play(stream, streamOptions));\n            //監聽歌曲播放結束事件\n            dispatcher.get(guildID).on(&quot;finish&quot;, finish =&gt; &#123;\n                //將清單中第一首歌清除\n                if (musicList.get(guildID).length &gt; 0) musicList.get(guildID).shift();\n                //播放歌曲\n                playMusic2(connection, guildID, channelID);\n            &#125;)\n        &#125; else disconnectMusic(guildID, channelID); //清空歌單並且退出語音頻道\n    &#125; catch (err) &#123;\n        console.log(err, &#39;playMusic2Error&#39;);\n    &#125;\n&#125;\n\n//?disconnect\nfunction disconnectMusic(guildID, channelID) &#123;\n    try &#123;\n        //判斷bot是否在此群組的語音頻道\n        if (client.voice.connections.get(guildID)) &#123;\n            //清空歌曲清單\n            musicList.set(guildID, new Array());\n            //退出語音頻道\n            client.voice.connections.get(guildID).disconnect();\n\n            client.channels.fetch(channelID).then(channel =&gt; channel.send(&#39;晚安~&#39;));\n        &#125; else client.channels.fetch(channelID).then(channel =&gt; channel.send(&#39;可是..我還沒進來:3&#39;))\n    &#125; catch (err) &#123;\n        console.log(err, &#39;disconnectMusicError&#39;);\n    &#125;\n&#125;\n\n//?replay\nfunction replayMusic(guildID) &#123;\n    if (musicList.get(guildID).length &gt; 0) &#123;\n        //把當前曲目再推一個到最前面\n        musicList.get(guildID).unshift(musicList[0]);\n        //將歌曲關閉，觸發finish事件\n        //finish事件將清單第一首歌排出，然後繼續播放下一首\n        if (dispatcher.get(guildID) !== undefined) dispatcher.get(guildID).end();\n    &#125;\n&#125;\n\n//?skip\nfunction skipMusic(guildID) &#123;\n    //將歌曲關閉，觸發finish事件\n    if (dispatcher.get(guildID) !== undefined) dispatcher.get(guildID).end();\n&#125;\n\n//?np\nasync function nowPlayMusic(guildID, channelID) &#123;\n    try &#123;\n        if (dispatcher.get(guildID) !== undefined &amp;&amp; musicList.get(guildID).length &gt; 0) &#123;\n            //從連結中獲取歌曲資訊 標題 總長度等\n            const info = await ytdl.getInfo(musicList.get(guildID)[0]);\n            //歌曲標題\n            const title = info.videoDetails.title;\n            //歌曲全長(s)\n            const songLength = info.videoDetails.lengthSeconds;\n            //當前播放時間(ms)\n            const nowSongLength = Math.floor(dispatcher.get(guildID).streamTime / 1000);\n            //串字串\n            const message = `$&#123;title&#125;\\n$&#123;streamString(songLength,nowSongLength)&#125;`;\n            client.channels.fetch(channelID).then(channel =&gt; channel.send(message))\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(err, &#39;nowPlayMusicError&#39;);\n    &#125;\n&#125;\n\n//▬▬▬▬▬▬▬▬▬?▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nfunction streamString(songLength, nowSongLength) &#123;\n    let mainText = &#39;?&#39;;\n    const secondText = &#39;▬&#39;;\n    const whereMain = Math.floor((nowSongLength / songLength) * 100);\n    let message = &#39;&#39;;\n    for (i = 1; i &lt;= 30; i++) &#123;\n        if (i * 3.3 + 1 &gt;= whereMain) &#123;\n            message = message + mainText;\n            mainText = secondText;\n        &#125; else &#123;\n            message = message + secondText;\n        &#125;\n    &#125;\n    return message;\n&#125;\n\n//?queue\nasync function queueShow(guildID, channelID) &#123;\n    try &#123;\n        if (musicList.get(guildID).length &gt; 0) &#123;\n            let info;\n            let message = &#39;&#39;;\n            for (i = 0; i &lt; musicList.get(guildID).length; i++) &#123;\n                //從連結中獲取歌曲資訊 標題 總長度等\n                info = await ytdl.getInfo(musicList.get(guildID)[i]);\n                //歌曲標題\n                title = info.videoDetails.title;\n                //串字串\n                message = message + `\\n$&#123;i+1&#125;. $&#123;title&#125;`;\n            &#125;\n            //把最前面的\\n拿掉\n            message = message.substring(1, message.length);\n            if (message.length &gt; 1900) message = message.substring(0, 1900);\n            client.channels.fetch(channelID).then(channel =&gt; channel.send(message))\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(err, &#39;queueShowError&#39;);\n    &#125;\n&#125;\n\n//?playList\nasync function playListMusic(guildID, msg) &#123;\n    try &#123;\n        //沒在音樂廳不能使用此功能\n        if (!client.voice.connections.get(guildID)) &#123;\n            msg.channel.send(`請先正常啟用音樂指令後，再使用歌單載入喔`);\n            return false;\n        &#125;\n        //網址\n        const valueED = msg.content.split(&#39; &#39;);\n        //先用library自帶的方式檢查一次能不能用\n        const canPlay = await ytpl.validateID(valueED[1]);\n        //讀取到幾首歌，上限默認100首\n        let a = 0;\n        //幾首成功放入歌單\n        let b = 0;\n        if (canPlay) &#123;\n            const listED = await ytpl(valueED[1]);\n            await listED.items.forEach(async function(element) &#123;\n                a = a + 1;\n                if (element.title !== &#39;[Deleted video]&#39;) &#123;\n                    canPlay2 = await ytdl.validateURL(element.url_simple);\n                    if (canPlay2) &#123;\n                        b = b + 1;\n                        musicList.get(guildID).push(element.url_simple);\n                    &#125;\n                &#125;\n            &#125;);\n            //回傳統計資訊\n            msg.channel.send(`歌單 $&#123;listED.title&#125;\\n共載入$&#123;b&#125;首歌曲\\n$&#123;a-b&#125;首載入失敗`);\n        &#125; else &#123;\n            msg.channel.send(`This Url isn&#39;t working in function.`);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(err, &#39;playListMusicError&#39;);\n    &#125;\n&#125;\n//#endregion\n\n//#region tag系統\nfunction TagFunction(msg, tempPrefix) &#123;\n    const cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(&#39; &#39;); //以空白分割前綴以後的字串\n\n    switch (cmd[0]) &#123;\n        case &#39;AddUser&#39;: //將使用者加入身份組\n            addUserFunction(msg);\n            break;\n        case &#39;CreateParty&#39;: //創建身分組&amp;增加身分組可tag對象\n            CreatePartyFunction(msg);\n            break;\n        case &#39;Delete&#39;: //從權限組中刪除使用者 OR 刪除權限組\n            DeleteTag(msg);\n            break;\n        default: //身份組ID\n            tagOther(msg, cmd);\n            break;\n    &#125;\n&#125;\n\n//tag人\nfunction tagOther(msg, cmd) &#123;\n    CheckID(msg, cmd, msg.author.id, (msg, cmd, haveUserData) =&gt; &#123;\n        CheckParty(msg, cmd, haveUserData, SendTagMessage);\n    &#125;);\n&#125;\n\n//判斷此人有沒有登記資料\nfunction CheckID(msg, cmd, userID, OtherFunction) &#123;\n    const haveUserData = UserPowerData.find(element =&gt; &#123;\n        return element.userID == userID;\n    &#125;)\n\n    if (haveUserData !== undefined) &#123;\n        //有資料\n        return OtherFunction(msg, cmd, haveUserData);\n    &#125; else &#123;\n        return OtherFunction(msg, cmd, false);\n    &#125;\n&#125;\n\n//根據UserPower獲得Party\nfunction CheckParty(msg, cmd, haveUserData, OtherFunction) &#123;\n    let havePartyPower;\n    havePartyPower = PartyPowerData.filter(element =&gt; &#123;\n        if (haveUserData.Joins[i].indexOf(element.ID) != -1) &#123;\n            return element.Power.indexOf(cmd[1]) != -1\n        &#125;\n    &#125;)\n\n    if (isEmptyObject(havePartyPower)) &#123;\n        return OtherFunction(msg, cmd, haveUserData, false);\n    &#125; else &#123;\n        return OtherFunction(msg, cmd, haveUserData, havePartyPower);\n    &#125;\n&#125;\n\n//傳送訊息單獨實例\nfunction SendTagMessage(msg, cmd, haveUserData, havePartyPower) &#123;\n    if (haveUserData.IsAdmin) &#123;\n        msg.channel.send(`&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自管理員&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n    &#125; else if (havePartyPower) &#123;\n        msg.channel.send(`&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n    &#125; else &#123;\n        msg.channel.send(&#39;無權限，請確認參數是否正確&#39;);\n    &#125;\n&#125;\n\n//將xxx加入身分組\nfunction addUserFunction(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            tempIsAdmin = CheckID(msg, null, msg.author.id, function(msg, cmd, haveUserData) &#123;\n                if (haveUserData.IsAdmin) return true;\n                else return false;\n            &#125;);\n            if (tempIsAdmin) &#123;\n                nowDoFunction = addUserFunctionNow;\n                DoUserID = msg.author.id;\n                DoData = new Array;\n                msg.channel.send(&#39;請輸入要加入的使用者id&#39;);\n            &#125; else &#123;\n                msg.channel.send(&#39;此指令只有管理員可執行&#39;);\n            &#125;\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;addUserFunctionError&#39;, err);\n    &#125;\n&#125;\n\n//將xxx加入身份組(續行方法)\nfunction addUserFunctionNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                DoData.push(msg.content); //加入使用者id\n                DoData.push(msg.author.username); //加入申請者名字\n                msg.channel.send(`請輸入要加入的群組`);\n                break;\n            case 1:\n                DoData.push(msg.content); //加入群組\n                DoData.push(false); //IsAdmin預設False不可修改\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n使用者 &lt;@$&#123;DoData[0]&#125;&gt;\\n加入權限組 $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 2:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    CheckID(msg, null, DoData[0], EditOldUserPower);\n                    GetGas.postUserPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            UserPowerData.unshift(&#123;\n                                &#39;userID&#39;: DoData[0],\n                                &#39;userName&#39;: DoData[1],\n                                &#39;Joins&#39;: DoData[2],\n                                &#39;IsAdmin&#39;: DoData[3]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;addUserFunctionNowError&#39;, err);\n    &#125;\n&#125;\n\n//用戶舊資料更新\nfunction EditOldUserPower(msg, cmd, haveUserData) &#123;\n    //二次確認\n    if (haveUserData) &#123;\n        if (DoData[0] == haveUserData.userID) &#123;\n            DoData[2] = haveUserData.Joins + &#39;;&#39; + DoData[2];\n            DoData[3] = haveUserData.IsAdmin;\n            return true;\n        &#125; else return false;\n    &#125; else return false;\n&#125;\n\n//用戶舊資料更新\nfunction DeleteOldUserPower(msg, cmd, haveUserData) &#123;\n    //二次確認\n    if (haveUserData) &#123;\n        if (DoData[0] == haveUserData.userID) &#123;\n            let str = haveUserData.Joins;\n            DoData[2] = str.toString().replace(DoData[2], &#39;&#39;);\n            DoData[3] = haveUserData.IsAdmin;\n            return true;\n        &#125; else return false;\n    &#125; else return false;\n&#125;\n\n//創建身分組&amp;增加身分組可tag對象\nfunction CreatePartyFunction(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            tempIsAdmin = CheckID(msg, null, msg.author.id, function(msg, cmd, haveUserData) &#123;\n                if (haveUserData) &#123;\n                    if (haveUserData.IsAdmin) return true;\n                    else return false;\n                &#125; else return false;\n            &#125;);\n            if (tempIsAdmin) &#123;\n                nowDoFunction = CreatePartyFunctionNow;\n                DoUserID = msg.author.id;\n                DoData = new Array;\n                msg.channel.send(&#39;請輸入身份組名稱&#39;);\n            &#125; else &#123;\n                msg.channel.send(&#39;此指令只有管理員可執行&#39;);\n            &#125;\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;CreatePartyFunctionError&#39;, err);\n    &#125;\n&#125;\n\n//創建身分組&amp;增加身分組可tag對象(續行)\nfunction CreatePartyFunctionNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                DoData.push(msg.content); //身分組ID\n                DoData.push(&#39;2&#39;); //type 2\n                msg.channel.send(`請輸入要加入的tagID`);\n                break;\n            case 1:\n                DoData.push(msg.content); //加入tagID\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n權限組 $&#123;DoData[0]&#125;\\ntagID $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 2:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    EditOldPartyPower();\n                    GetGas.postPartyPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            PartyPowerData.unshift(&#123;\n                                &#39;ID&#39;: DoData[0],\n                                &#39;type&#39;: DoData[1],\n                                &#39;Power&#39;: DoData[2]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;CreatePartyFunctionNowError&#39;, err);\n    &#125;\n&#125;\n\n//權限組舊資料更新\nfunction EditOldPartyPower() &#123;\n    if (PartyPowerData) &#123;\n        const tempPartyData = PartyPowerData.find(element =&gt; &#123;\n            return element.ID == DoData[0];\n        &#125;)\n\n        if (tempPartyData !== undefined) &#123;\n            DoData[2] = tempPartyData.Power + &#39;;&#39; + DoData[2];\n        &#125;\n    &#125;\n&#125;\n\n//權限組舊資料更新\nfunction DeleteOldPartyPower() &#123;\n    if (PartyPowerData) &#123;\n        const tempPartyData = PartyPowerData.find(element =&gt; &#123;\n            return element.ID == DoData[0];\n        &#125;)\n\n        if (tempPartyData == undefined) &#123;\n            DoData[0] = &#39;&#39;;\n            DoData[1] = &#39;&#39;;\n            DoData[2] = &#39;&#39;;\n        &#125;\n    &#125;\n&#125;\n\n//從權限組中刪除使用者 OR 刪除權限組\nfunction DeleteTag(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            tempIsAdmin = CheckID(msg, null, msg.author.id, function(msg, cmd, haveUserData) &#123;\n                if (haveUserData.IsAdmin) return true;\n                else return false;\n            &#125;);\n            if (tempIsAdmin) &#123;\n                nowDoFunction = DeleteTagNow;\n                DoUserID = msg.author.id;\n                DoData = new Array;\n                msg.channel.send(&#39;請問要編輯使用者權限還是權限組?\\n1 使用者權限 / 2 權限組&#39;);\n            &#125; else &#123;\n                msg.channel.send(&#39;此指令只有管理員可執行&#39;);\n            &#125;\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;DeleteTagError&#39;, err);\n    &#125;\n&#125;\n\n//從權限組中刪除使用者 OR 刪除權限組(續行)\nfunction DeleteTagNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                switch (msg.content) &#123;\n                    case &#39;1&#39;:\n                        msg.channel.send(&#39;請輸入要編輯的使用者ID&#39;);\n                        break;\n                    case &#39;2&#39;:\n                        DoingCount = 10;\n                        msg.channel.send(&#39;請輸入要編輯的權限組&#39;);\n                        break;\n                    default:\n                        DoingCount--;\n                        msg.channel.send(&#39;無法辨識訊息，請輸入1/2來選擇&#39;);\n                        break;\n                &#125;\n                break;\n            case 1:\n                if (msg.content == &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;指令關閉&#39;);\n                &#125; else &#123;\n                    if (CheckID(msg, null, msg.content, (msg, cmd, haveUserData) =&gt; &#123; return haveUserData &#125;)) &#123;\n                        DoData.push(msg.content); //userID\n                        DoData.push(msg.author.id); //userName\n                        msg.channel.send(&#39;請輸入要刪除的群組權限&#39;);\n                    &#125; else &#123;\n                        DoingCount--;\n                        msg.channel.send(&#39;此用戶不存在資料，請確認，如果要關閉指令請輸入 N&#39;);\n                    &#125;\n                &#125;\n                break;\n            case 2:\n                DoData.push(msg.content); // Power\n                DoData.push(false); // IsAdmin\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n使用者 &lt;@$&#123;DoData[0]&#125;&gt;\\n刪除權限組 $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 3:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    CheckID(msg, null, DoData[0], DeleteOldUserPower);\n                    GetGas.postUserPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            UserPowerData.unshift(&#123;\n                                &#39;userID&#39;: DoData[0],\n                                &#39;userName&#39;: DoData[1],\n                                &#39;Joins&#39;: DoData[2],\n                                &#39;IsAdmin&#39;: DoData[3]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n            case 11:\n                DoData.push(msg.content); //身分組ID\n                DoData.push(&#39;2&#39;); //type 2\n                DoData.push(&#39;&#39;);\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n刪除權限組 $&#123;DoData[0]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 12:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，沒有此身分組資料清除\n                    DeleteOldPartyPower();\n                    if (DoData[0] != &#39;&#39;) &#123;\n                        GetGas.postPartyPower(DoData, function(dataED) &#123;\n                            if (dataED) &#123;\n                                //bot內變數不會更新，手動更新\n                                PartyPowerData.unshift(&#123;\n                                    &#39;ID&#39;: DoData[0],\n                                    &#39;type&#39;: DoData[1],\n                                    &#39;Power&#39;: DoData[2]\n                                &#125;);\n                                msg.channel.send(&#39;輸入完畢!&#39;);\n                            &#125; else &#123;\n                                msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                            &#125;\n                            CloseAllDoingFunction();\n                        &#125;);\n                    &#125; else &#123;\n                        msg.channel.send(&#39;輸入完畢!&#39;);\n                        CloseAllDoingFunction();\n                    &#125;\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;DeleteTagNowError&#39;, err);\n    &#125;\n&#125;\n\n//#endregion\n\n//#region 對話資料庫系統\nfunction BaseExcelFunction(msg) &#123;\n    const messageED = GetBaseExcelData(msg);\n    if (messageED) msg.channel.send(messageED);\n&#125;\n\n//#endregion\n\n//#region 子類方法\n//獲取頭像\nfunction GetMyAvatar(msg) &#123;\n    try &#123;\n        return &#123;\n            files: [&#123;\n                attachment: msg.users.author.displayAvatarURL(&#39;png&#39;, true),\n                name: &#39;avatar.jpg&#39;\n            &#125;]\n        &#125;;\n    &#125; catch (err) &#123;\n        console.log(&#39;GetMyAvatar,Error&#39;);\n    &#125;\n&#125;\n\n//BaseExcel字串比對\nfunction GetBaseExcelData(msg) &#123;\n    try &#123;\n        if (BaseExcelData) &#123;\n            const userMessage = msg.content;\n\n            e = BaseExcelData.filter(element =&gt; &#123;\n                return element.NAME === userMessage;\n            &#125;)\n\n            if (e.length != 0) return e[0].VALUE;\n            else return false;\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;GetBaseExcelDataError&#39;, err);\n    &#125;\n&#125;\n\n//禁言系統判斷\nfunction IsShut(msg, tempPrefix) &#123;\n    //群組id\n    const guildID = msg.guild.id;\n    //頻道id\n    const channelID = msg.channel.id;\n    //當前狀態\n    let status = true;\n\n    //先判斷群組，群組判斷完判斷頻道(頻道權限優先於群組)\n    const guildIF = shup.Group.find(element =&gt; &#123;\n        if (element.GroupID == guildID) &#123;\n            return element.Power.indexOf(tempPrefix) !== -1;\n        &#125;\n        return false;\n    &#125;)\n\n    //找到資料 = 此群組存在Group中且Power存在此次指令代碼\n    if (guildIF !== undefined) &#123;\n        status = false;\n    &#125;\n\n    //頻道\n    const channelIF = shup.Channel.find(element =&gt; &#123;\n        if (element.ChannelID == channelID) &#123;\n            return true;\n        &#125;\n        return false;\n    &#125;)\n\n    //找到資料 = 此頻道存在Channel中\n    if (channelIF !== undefined) &#123;\n        //Power有此資料=&gt;禁用功能 無資料=&gt;不設限\n        if (channelIF.Power.indexOf(tempPrefix) !== -1) &#123;\n            status = false;\n        &#125; else &#123;\n            status = true;\n        &#125;\n    &#125;\n\n    return status;\n&#125;\n\n//ArrayIsEmpty\nfunction isEmptyObject(obj) &#123;\n    return !Object.keys(obj).length;\n&#125;\n\n//關閉續行方法\nfunction CloseAllDoingFunction() &#123;\n    nowDoFunction = false;\n    DoingCount = 0;\n    DoUserID = &#39;&#39;;\n    DoData = undefined;\n&#125;\n//#endregion\n</code></pre>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/29/12thDay29/",
            "url": "https://smilin.net/2020/09/29/12thDay29/",
            "title": "Day29 - tag控管機制(3)",
            "date_published": "2020-09-29T01:27:13.000Z",
            "content_html": "<p>昨天我們做好了 將使用者加入身份組指令<br>今天把 創建身分組的指令做好</p>\n<span id=\"more\"></span>\n\n<p>跟昨天一樣，請先開啟GAS，身分組的GAS叫做getPartyPower<br>新增以下</p>\n<p><img src=\"https://i.imgur.com/eqoYtRi.png\" alt=\"29-1\"></p>\n<pre><code>function doPost(e)&#123;\n  var para = e.parameter; // 存放 post 所有傳送的參數\n  \n  var id = &#39;1mQ6qTJfOs3Gv5--K9r87w56wmDc3hUcpHm5hF1YKTms&#39;; //抓取表單\n  var spreadsheet = SpreadsheetApp.openById(id); // Sheet id\n  var sheet1 = spreadsheet.getSheetByName(&quot;PartyPower&quot;); // 根據表格名稱取表\n  var rowLength = sheet1.getLastRow()-1;\n  var columnLength = sheet1.getLastColumn();\n  var data = sheet1.getRange(2,1,rowLength,columnLength).getValues(); // 取得的資料\n  var ID   = para.ID,\n      type = para.type,\n      Power    = para.Power;\n  \n  var upData = [];\n  \n  for(i=0;i&lt;=rowLength-1;i++)&#123;\n    upData = data[i]\n    if((upData[0]==ID) == false)&#123;\n      upData = undefined;\n    &#125;\n  \n  \n    if(upData != undefined)&#123;\n      sheet1.getRange(i+2, 1).setValue(ID);\n      sheet1.getRange(i+2, 2).setValue(type);\n      sheet1.getRange(i+2, 3).setValue(Power);\n      return ContentService.createTextOutput(upData).setMimeType(ContentService.MimeType.JSON);\n    &#125;\n  &#125;\n  \n  \n  sheet1.appendRow([ID,type,Power]); // 插入一列新的資料\n  var dataExportFormat = JSON.stringify(para);\n  return ContentService.createTextOutput(dataExportFormat).setMimeType(ContentService.MimeType.JSON);\n&#125;\n</code></pre>\n<p>加到auth.json</p>\n<p><img src=\"https://i.imgur.com/0brSMZw.png\" alt=\"29-2\"></p>\n<p>GetGas.js</p>\n<p><img src=\"https://i.imgur.com/9KlDFkj.png\" alt=\"29-3\"></p>\n<p>bot.js</p>\n<p><img src=\"https://i.imgur.com/oKcdCTg.png\" alt=\"29-4\"></p>\n<p><img src=\"https://i.imgur.com/nQgPf3p.png\" alt=\"29-5\"></p>\n<pre><code>//創建身分組&amp;增加身分組可tag對象(續行)\nfunction CreatePartyFunctionNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                DoData.push(msg.content); //身分組ID\n                DoData.push(&#39;2&#39;); //type 2\n                msg.channel.send(`請輸入要加入的tagID`);\n                break;\n            case 1:\n                DoData.push(msg.content); //加入tagID\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n權限組 &lt;@$&#123;DoData[0]&#125;&gt;\\ntagID $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 2:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    EditOldPartyPower();\n                    GetGas.postPartyPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            PartyPowerData.unshift(&#123;\n                                &#39;ID&#39;: DoData[0],\n                                &#39;type&#39;: DoData[1],\n                                &#39;Power&#39;: DoData[2]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;CreatePartyFunctionNowError&#39;, err);\n    &#125;\n&#125;\n</code></pre>\n<p><img src=\"https://i.imgur.com/FB6RfAd.png\" alt=\"29-6\"></p>\n<p>作法基本上跟上次新增使用者一樣<br>試著運行看看</p>\n<p><img src=\"https://i.imgur.com/x3Qx41S.png\" alt=\"29-7\"></p>\n<p><img src=\"https://i.imgur.com/Mf6vO49.png\" alt=\"29-8\"></p>\n<p><img src=\"https://i.imgur.com/VH2f5L2.png\" alt=\"29-9\"></p>\n<p>成功<br>明天就是最後一篇了，筆者會把刪除的指令做好<br>其實跟現在新增的作法是大同小異的，各位不彷試試看</p>\n<p>為了將CheckID與CheckParty的分工化更明確一點，因此有稍微修改程式碼<br>這邊貼上程式碼</p>\n<pre><code>//#region tag系統\nfunction TagFunction(msg, tempPrefix) &#123;\n    const cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(&#39; &#39;); //以空白分割前綴以後的字串\n\n    switch (cmd[0]) &#123;\n        case &#39;AddUser&#39;: //將使用者加入身份組\n            addUserFunction(msg);\n            break;\n        case &#39;CreateParty&#39;: //創建身分組&amp;增加身分組可tag對象\n            CreatePartyFunction(msg);\n            break;\n        default: //身份組ID\n            tagOther(msg, cmd);\n            break;\n    &#125;\n&#125;\n\n//tag人\nfunction tagOther(msg, cmd) &#123;\n    CheckID(msg, cmd, msg.author.id, (msg, cmd, haveUserData) =&gt; &#123;\n        CheckParty(msg, cmd, haveUserData, SendTagMessage);\n    &#125;);\n&#125;\n\n//判斷此人有沒有登記資料\nfunction CheckID(msg, cmd, userID, OtherFunction) &#123;\n    const haveUserData = UserPowerData.find(element =&gt; &#123;\n        return element.userID == userID;\n    &#125;)\n\n    if (haveUserData !== undefined) &#123;\n        //有資料\n        return OtherFunction(msg, cmd, haveUserData);\n    &#125; else &#123;\n        return OtherFunction(msg, cmd, false);\n    &#125;\n&#125;\n\n//根據UserPower獲得Party\nfunction CheckParty(msg, cmd, haveUserData, OtherFunction) &#123;\n    let havePartyPower;\n    havePartyPower = PartyPowerData.filter(element =&gt; &#123;\n        if (haveUserData.Joins[i].indexOf(element.ID) != -1) &#123;\n            return element.Power.indexOf(cmd[1]) != -1\n        &#125;\n    &#125;)\n\n    if (isEmptyObject(havePartyPower)) &#123;\n        OtherFunction(msg, cmd, haveUserData, false);\n    &#125; else &#123;\n        OtherFunction(msg, cmd, haveUserData, havePartyPower);\n    &#125;\n&#125;\n\n//傳送訊息單獨實例\nfunction SendTagMessage(msg, cmd, haveUserData, havePartyPower) &#123;\n    if (haveUserData.IsAdmin) &#123;\n        msg.channel.send(`&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自管理員&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n    &#125; else if (havePartyPower) &#123;\n        msg.channel.send(`&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n    &#125; else &#123;\n        msg.channel.send(&#39;無權限，請確認參數是否正確&#39;);\n    &#125;\n&#125;\n\n//將xxx加入身分組\nfunction addUserFunction(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            tempIsAdmin = CheckID(msg, null, msg.author.id, function(msg, cmd, haveUserData) &#123;\n                if (haveUserData.IsAdmin) return true;\n                else return false;\n            &#125;);\n            if (tempIsAdmin) &#123;\n                nowDoFunction = addUserFunctionNow;\n                DoUserID = msg.author.id;\n                DoData = new Array;\n                msg.channel.send(&#39;請輸入要加入的使用者id&#39;);\n            &#125; else &#123;\n                msg.channel.send(&#39;此指令只有管理員可執行&#39;);\n            &#125;\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;addUserFunctionError&#39;, err);\n    &#125;\n&#125;\n\n//將xxx加入身份組(續行方法)\nfunction addUserFunctionNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                DoData.push(msg.content); //加入使用者id\n                DoData.push(msg.author.username); //加入申請者名字\n                msg.channel.send(`請輸入要加入的群組`);\n                break;\n            case 1:\n                DoData.push(msg.content); //加入群組\n                DoData.push(false); //IsAdmin預設False不可修改\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n使用者 &lt;@$&#123;DoData[0]&#125;&gt;\\n加入權限組 $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 2:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    CheckID(msg, null, DoData[0], EditOldUserPower);\n                    GetGas.postUserPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            UserPowerData.unshift(&#123;\n                                &#39;userID&#39;: DoData[0],\n                                &#39;userName&#39;: DoData[1],\n                                &#39;Joins&#39;: DoData[2],\n                                &#39;IsAdmin&#39;: DoData[3]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;addUserFunctionNowError&#39;, err);\n    &#125;\n&#125;\n\n//用戶舊資料更新\nfunction EditOldUserPower(msg, cmd, haveUserData) &#123;\n    //二次確認\n    if (haveUserData) &#123;\n        if (DoData[0] == haveUserData.userID) &#123;\n            DoData[2] = haveUserData.Joins + &#39;;&#39; + DoData[2];\n            DoData[3] = haveUserData.IsAdmin;\n            return true;\n        &#125; else return false;\n    &#125; else return false;\n&#125;\n\n//創建身分組&amp;增加身分組可tag對象\nfunction CreatePartyFunction(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            tempIsAdmin = CheckID(msg, null, msg.author.id, function(msg, cmd, haveUserData) &#123;\n                if (haveUserData) &#123;\n                    if (haveUserData.IsAdmin) return true;\n                    else return false;\n                &#125; else return false;\n            &#125;);\n            if (tempIsAdmin) &#123;\n                nowDoFunction = CreatePartyFunctionNow;\n                DoUserID = msg.author.id;\n                DoData = new Array;\n                msg.channel.send(&#39;請輸入身份組名稱&#39;);\n            &#125; else &#123;\n                msg.channel.send(&#39;此指令只有管理員可執行&#39;);\n            &#125;\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;CreatePartyFunctionError&#39;, err);\n    &#125;\n&#125;\n\n//創建身分組&amp;增加身分組可tag對象(續行)\nfunction CreatePartyFunctionNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                DoData.push(msg.content); //身分組ID\n                DoData.push(&#39;2&#39;); //type 2\n                msg.channel.send(`請輸入要加入的tagID`);\n                break;\n            case 1:\n                DoData.push(msg.content); //加入tagID\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n權限組 $&#123;DoData[0]&#125;\\ntagID $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 2:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    EditOldPartyPower();\n                    GetGas.postPartyPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            PartyPowerData.unshift(&#123;\n                                &#39;ID&#39;: DoData[0],\n                                &#39;type&#39;: DoData[1],\n                                &#39;Power&#39;: DoData[2]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;CreatePartyFunctionNowError&#39;, err);\n    &#125;\n&#125;\n\n//權限組舊資料更新\nfunction EditOldPartyPower() &#123;\n    if (PartyPowerData) &#123;\n        const tempPartyData = PartyPowerData.find(element =&gt; &#123;\n            return element.ID == DoData[0];\n        &#125;)\n\n        if (tempPartyData !== undefined) &#123;\n            DoData[2] = tempPartyData.Power + &#39;;&#39; + DoData[2];\n        &#125;\n    &#125;\n&#125;\n\n//#endregion\n</code></pre>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/28/12thDay28/",
            "url": "https://smilin.net/2020/09/28/12thDay28/",
            "title": "Day28 - tag控管機制(2)",
            "date_published": "2020-09-28T01:25:39.000Z",
            "content_html": "<p>今天來把postAPI跟續行的框架與加入使用者至身份組的功能寫好</p>\n<span id=\"more\"></span>\n\n<p>請打開之前再google雲端上創建的GAS ， getUserPower</p>\n<p><img src=\"https://i.imgur.com/cPksdp2.png\" alt=\"28-1\"></p>\n<p>原本的程式寫在doGet方法，我們在doGet方法下新增一個doPost方法，然後寫上這些東西</p>\n<pre><code>function doPost(e)&#123;\n  var para = e.parameter; // 存放 post 所有傳送的參數\n  \n  var id = &#39;1mQ6qTJfOs3Gv5--K9r87w56wmDc3hUcpHm5hF1YKTms&#39;; //抓取表單\n  var spreadsheet = SpreadsheetApp.openById(id); // Sheet id\n  var sheet1 = spreadsheet.getSheetByName(&quot;UserPower&quot;); // 根據表格名稱取表\n  var rowLength = sheet1.getLastRow()-1;\n  var columnLength = sheet1.getLastColumn();\n  var data = sheet1.getRange(2,1,rowLength,columnLength).getValues(); // 取得的資料\n  var userID   = para.userID,\n      userName = para.userName,\n      Joins    = para.Joins,\n      IsAdmin  = para.IsAdmin;\n  \n  var upData = [];\n  \n  for(i=0;i&lt;=rowLength-1;i++)&#123;\n    upData = data[i]\n    if((upData[0]==userID) == false)&#123;\n      upData = undefined;\n    &#125;\n  \n  \n    if(upData != undefined)&#123;\n      sheet1.getRange(i+2, 1).setValue(userID);\n      sheet1.getRange(i+2, 2).setValue(userName);\n      sheet1.getRange(i+2, 3).setValue(Joins);\n      sheet1.getRange(i+2, 4).setValue(IsAdmin);\n      return ContentService.createTextOutput(upData).setMimeType(ContentService.MimeType.JSON);\n    &#125;\n  &#125;\n  \n  \n  sheet1.appendRow([userID,userName,Joins,IsAdmin]); // 插入一列新的資料\n  var dataExportFormat = JSON.stringify(para);\n  return ContentService.createTextOutput(dataExportFormat).setMimeType(ContentService.MimeType.JSON);\n&#125;\n</code></pre>\n<p>doGet與doPost是GAS默認的Get與Post方法<br>使用他的Url執行Get請求就會進doGet<br>反之post就會進doPost</p>\n<p>回到程序，一樣在auth加入url<br>雖然值跟Get方法時的Url一樣，不過這樣寫會比較好分辨，之後想改成兩個檔案也可以</p>\n<p><img src=\"https://i.imgur.com/znAkUYg.png\" alt=\"28-2\"></p>\n<p>因為我們要在post請求帶入參數，這邊將請求URL的宣告直接放到實作裡面<br>這樣在創建的同時也會帶入參數</p>\n<p><img src=\"https://i.imgur.com/tiDcUkk.png\" alt=\"28-3\"></p>\n<pre><code>exports.postUserPower = function(bodyData, callback) &#123;\n    const userPowerPost = &#123;\n        &#39;method&#39;: &#39;POST&#39;,\n        &#39;url&#39;: auth.Gas.Post.UserPower,\n        &#39;headers&#39;: &#123;&#125;,\n        form: &#123;\n            &#39;userID&#39;: bodyData[0],\n            &#39;userName&#39;: bodyData[1],\n            &#39;Joins&#39;: bodyData[2],\n            &#39;IsAdmin&#39;: bodyData[3]\n        &#125;\n    &#125;;\n    request(userPowerPost, function(error, response) &#123;\n        try &#123;\n            if (error) &#123;\n                console.log(&#39;postUserPowerError1&#39;, error);\n                callback(false);\n            &#125; else &#123;\n                callback(true);\n            &#125;\n        &#125; catch (err) &#123;\n            console.log(&#39;postUserPowerError2&#39;, err);\n            callback(false);\n        &#125;\n    &#125;);\n&#125;;\n</code></pre>\n<p>在全域變數(最上方)新增這四個東西</p>\n<p><img src=\"https://i.imgur.com/qJhS30L.png\" alt=\"28-4\"></p>\n<p>在子類方法(最下方)加入初始化方法</p>\n<p><img src=\"https://i.imgur.com/bSFGj1I.png\" alt=\"28-5\"></p>\n<p>在onMessage中間加入續行方法入口</p>\n<p><img src=\"https://i.imgur.com/4NE1BQC.png\" alt=\"28-6\"></p>\n<pre><code>    //續行方法\n    if (nowDoFunction &amp;&amp; msg.author.id === DoUserID) &#123;\n        nowDoFunction(msg);\n        return;\n    &#125;\n</code></pre>\n<p>在tag系統入口加入addUser</p>\n<p><img src=\"https://i.imgur.com/66thUHz.png\" alt=\"28-7\"></p>\n<p>實例addUserFunction</p>\n<p><img src=\"https://i.imgur.com/Fxh4bSy.png\" alt=\"28-8\"></p>\n<pre><code>//將xxx加入身分組\nfunction addUserFunction(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            nowDoFunction = addUserFunctionNow;\n            DoUserID = msg.author.id;\n            DoData = new Array;\n            msg.channel.send(&#39;請輸入要加入的使用者id&#39;);\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;addUserFunctionError&#39;, err);\n    &#125;\n&#125;\n</code></pre>\n<p>實例addUserFunctionNow(續行方法)</p>\n<pre><code>//將xxx加入身份組(續行方法)\nfunction addUserFunctionNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                DoData.push(msg.content); //加入使用者id\n                DoData.push(msg.author.username); //加入申請者名字\n                msg.channel.send(`請輸入要加入的群組`);\n                break;\n            case 1:\n                DoData.push(msg.content); //加入群組\n                DoData.push(false); //IsAdmin預設False不可修改\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n使用者 &lt;@$&#123;DoData[0]&#125;&gt;\\n加入權限組 $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 2:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    CheckID(msg, null, EditOldUserPower, DoData[0]);\n                    GetGas.postUserPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            UserPowerData.unshift(&#123;\n                                &#39;userID&#39;: DoData[0],\n                                &#39;userName&#39;: DoData[1],\n                                &#39;Joins&#39;: DoData[2],\n                                &#39;IsAdmin&#39;: DoData[3]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;addUserFunctionNowError&#39;, err);\n    &#125;\n&#125;\n</code></pre>\n<p>微調CheckID與CheckParty<br>將userID的取值獨立，將admin判斷拉到CheckParty</p>\n<p><img src=\"https://i.imgur.com/EFqmBqa.png\" alt=\"28-9\"></p>\n<p><img src=\"https://i.imgur.com/6Oos50b.png\" alt=\"28-10\"></p>\n<p>實例EditOldUserPower</p>\n<p><img src=\"https://i.imgur.com/0HXohq7.png\" alt=\"28-11\"></p>\n<hr>\n<h1 id=\"測試環節\"><a href=\"#測試環節\" class=\"headerlink\" title=\"測試環節\"></a>測試環節</h1><p><img src=\"https://i.imgur.com/HWloU7g.png\" alt=\"28-12\"></p>\n<p><img src=\"https://i.imgur.com/dJplXOG.png\" alt=\"28-13\"></p>\n<p><img src=\"https://i.imgur.com/ppMXmB4.png\" alt=\"28-14\"> </p>\n<p><img src=\"https://i.imgur.com/EO9pkZt.png\" alt=\"28-15\"></p>\n<p>完成</p>\n<p>因為今天有修改到Day26的東西，這可能導致教學有點雜亂<br>底下附上tag系統目前的程式碼，當作彌補</p>\n<pre><code>//#region tag系統\nfunction TagFunction(msg, tempPrefix) &#123;\n    const cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(&#39; &#39;); //以空白分割前綴以後的字串\n\n    switch (cmd[0]) &#123;\n        case &#39;addUser&#39;: //將使用者加入身份組\n            addUserFunction(msg);\n            break;\n        default: //身份組ID\n            CheckID(msg, cmd, CheckParty, msg.author.id);\n            break;\n    &#125;\n&#125;\n\n//判斷此人有沒有登記資料\nfunction CheckID(msg, cmd, OtherFunction, userID) &#123;\n    const haveUserData = UserPowerData.find(element =&gt; &#123;\n        return element.userID == userID;\n    &#125;)\n\n    if (haveUserData !== undefined) &#123;\n        //有資料\n        return OtherFunction(msg, cmd, haveUserData);\n    &#125; else &#123;\n        return false;\n    &#125;\n&#125;\n\n//根據UserPower獲得Party\nfunction CheckParty(msg, cmd, haveUserData) &#123;\n\n    if (haveUserData.IsAdmin) &#123;\n        //是管理員，直接做後續事情\n        return SendTagMessage(msg, `&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自管理員&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n    &#125;\n\n    let havePartyPower;\n    havePartyPower = PartyPowerData.filter(element =&gt; &#123;\n        if (haveUserData.Joins[i].indexOf(element.ID) != -1) &#123;\n            return element.Power.indexOf(cmd[1]) != -1\n        &#125;\n    &#125;)\n\n    if (isEmptyObject(havePartyPower)) &#123;\n        SendTagMessage(msg, &#39;無權限，請確認參數是否正確&#39;);\n    &#125; else &#123;\n        SendTagMessage(msg, `&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n    &#125;\n&#125;\n\n//傳送訊息單獨實例\nfunction SendTagMessage(msg, data) &#123;\n    msg.channel.send(data);\n&#125;\n\n//將xxx加入身分組\nfunction addUserFunction(msg) &#123;\n    try &#123;\n        if (DoUserID === &#39;&#39;) &#123;\n            nowDoFunction = addUserFunctionNow;\n            DoUserID = msg.author.id;\n            DoData = new Array;\n            msg.channel.send(&#39;請輸入要加入的使用者id&#39;);\n        &#125; else &#123;\n            msg.channel.send(&#39;有其他人正在使用續行中，請稍等&#39;);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;addUserFunctionError&#39;, err);\n    &#125;\n&#125;\n\n//將xxx加入身份組(續行方法)\nfunction addUserFunctionNow(msg) &#123;\n    try &#123;\n        switch (DoingCount) &#123;\n            case 0:\n                DoData.push(msg.content); //加入使用者id\n                DoData.push(msg.author.username); //加入申請者名字\n                msg.channel.send(`請輸入要加入的群組`);\n                break;\n            case 1:\n                DoData.push(msg.content); //加入群組\n                DoData.push(false); //IsAdmin預設False不可修改\n                msg.channel.send(`申請資料如下:\\n申請人 &lt;@$&#123;msg.author.id&#125;&gt;\\n使用者 &lt;@$&#123;DoData[0]&#125;&gt;\\n加入權限組 $&#123;DoData[2]&#125;\\n正確 Y / 錯誤 N`);\n                break;\n            case 2:\n                if (msg.content === &#39;Y&#39;) &#123;\n                    msg.channel.send(&#39;已確認，輸入資料中...&#39;);\n                    //與舊資料比對，已有此人資料變進行更新\n                    CheckID(msg, null, EditOldUserPower, DoData[0]);\n                    GetGas.postUserPower(DoData, function(dataED) &#123;\n                        if (dataED) &#123;\n                            //bot內變數不會更新，手動更新\n                            UserPowerData.unshift(&#123;\n                                &#39;userID&#39;: DoData[0],\n                                &#39;userName&#39;: DoData[1],\n                                &#39;Joins&#39;: DoData[2],\n                                &#39;IsAdmin&#39;: DoData[3]\n                            &#125;);\n                            msg.channel.send(&#39;輸入完畢!&#39;);\n                        &#125; else &#123;\n                            msg.channel.send(&#39;資料輸入失敗，請重新嘗試&#39;);\n                        &#125;\n                        CloseAllDoingFunction();\n                    &#125;);\n                &#125; else if (msg.content === &#39;N&#39;) &#123;\n                    CloseAllDoingFunction();\n                    msg.channel.send(&#39;已取消行為，請重新下達指令&#39;)\n                &#125; else &#123;\n                    DoingCount--;\n                    msg.channel.send(&#39;無法辨識訊息，請輸入Y/N來選擇&#39;);\n                &#125;\n                break;\n        &#125;\n        if (DoUserID !== &#39;&#39;) DoingCount++;\n    &#125; catch (err) &#123;\n        CloseAllDoingFunction();\n        client.channels.fetch(msg.channel.id).then(channel =&gt; channel.send(&#39;發生意外錯誤，中斷指令行為，請重新下達指令!&#39;))\n        console.log(&#39;addUserFunctionNowError&#39;, err);\n    &#125;\n&#125;\n\n//用戶舊資料更新\nfunction EditOldUserPower(msg, cmd, haveUserData) &#123;\n    //二次確認\n    if (DoData[0] == haveUserData.userID) &#123;\n        DoData[2] = haveUserData.Joins + &#39;;&#39; + DoData[2];\n        DoData[3] = haveUserData.IsAdmin;\n        return true;\n    &#125; else return false;\n&#125;\n//#endregion\n</code></pre>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/27/12thDay27/",
            "url": "https://smilin.net/2020/09/27/12thDay27/",
            "title": "Day27 - tag控管 - 續行方法解說",
            "date_published": "2020-09-27T07:59:10.000Z",
            "content_html": "<p>昨天我們實作了tag身份組功能<br>使用者透過機器人tag一整個身份組的功能<br>我們希望還可以有</p>\n<ul>\n<li>創建身分組的指令</li>\n<li>將使用者加入身份組指令</li>\n<li>刪除身分組的指令</li>\n<li>將使用者從某個身份組中刪除的指令</li>\n</ul>\n<span id=\"more\"></span>\n\n<p>這些功能與以往的做法不同<br>API會從原本的Get改成使用Post方法<br>bot程序會需要用到續行方法，來彌補當前機器人框架無法實現的功能</p>\n<h1 id=\"續行方法\"><a href=\"#續行方法\" class=\"headerlink\" title=\"續行方法\"></a>續行方法</h1><p>程式上並沒有這種寫法的稱呼，只是在當前框架下，我給這個寫法的一種叫法而已</p>\n<p>目前我們機器人指令的呼叫方式基本模式是</p>\n<p>前綴字 + 指令 + 間隔符 + 參數(如果有)</p>\n<p>如果前綴字沒有匹配，就對資料庫做判斷，是否有相同觸發字來自動回應(卡米狗模式)</p>\n<p>這種做法會面臨到一個問題，指令都是在一行內完成的</p>\n<p>如果希望先下達指令，等待機器人給予回饋，再繼續輸入指令呢?</p>\n<p>沒錯，使用者的操作會變得相對複雜<br>假設一個指令叫做 !AFK ，然後要輸入三次且三次的參數都正確，機器人才會醒來<br>那使用者就要連續輸入三次</p>\n<p>!AFK 1<br>!AFK 2<br>!AFK 3</p>\n<p>而不是</p>\n<p>!AFK<br>1<br>2<br>3</p>\n<p>讓使用者不斷重複的輸入指令顯然不是我們希望的</p>\n<p>因此我們會需要使用續行，讓BOT觸發到特定指令後，綁定此用戶進行接下來的行為</p>\n<p>明天我們會實作postAPI，以及將 將使用者加入特定身分組的功能 寫好<br>如果篇幅足夠會再講 將使用者從某個身份組中刪除</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/26/12thDay26/",
            "url": "https://smilin.net/2020/09/26/12thDay26/",
            "title": "Day26 - tag控管機制(1)",
            "date_published": "2020-09-26T01:54:26.000Z",
            "content_html": "<p>昨天我們描繪了權限系統的架構，今天來建立身份組環境</p>\n<span id=\"more\"></span>\n\n<p>打開我們之前的試算表，新增兩個table</p>\n<p><img src=\"https://i.imgur.com/uoHRTQ9.png\" alt=\"26-1\"></p>\n<p>UserPower<br>代表成員table</p>\n<p>userID<br>discord的userID，主要用來辨識訊息方是否是此用戶</p>\n<p>userName<br>用處一樣不大，給人看的</p>\n<p>Joins<br>表示此用戶有哪些身份組的權限，筆者打算之後把所有身份都寫在這欄，用分號來做區隔</p>\n<p>IsAdmin<br>管理員開關，開啟後不做任何身份組判斷，可以使用任何功能</p>\n<p>下圖中，筆者的userID有E有+的，這是Excel自動給予的格式，可以在左上角看到實際數值，讀取時仍然是讀取165753385385984000，不用修改</p>\n<p><img src=\"https://i.imgur.com/2ilbHq9.png\" alt=\"26-2\"></p>\n<p>PartyPower<br>代表身份組table</p>\n<p>ID<br>該身份組的ID，使用者透過這個ID來判斷自己有哪些權限</p>\n<p>type<br>代表這個身份組的類型<br>目前暫定1是禁言類身份組，2是tag權限身份組</p>\n<p>Power<br>代表實際可行駛的權限，會根據type的不同有不同的含意<br>在tag權限下，Power帶入tagID，代表可以行使此tag<br>這邊帶入Power的是身份組ID</p>\n<p><img src=\"https://i.imgur.com/uNgxfC1.png\" alt=\"26-3\"></p>\n<p>教一下手動獲取身份組ID</p>\n<p>把人點開，對身份組右鍵</p>\n<p><img src=\"https://i.imgur.com/Z2t6akk.png\" alt=\"26-4\"></p>\n<p>或是先拉出tag，然後在tag前方加上一個反斜線</p>\n<p><img src=\"https://i.imgur.com/vtlv8pE.png\" alt=\"26-5\"></p>\n<p><img src=\"https://i.imgur.com/tlpvlge.png\" alt=\"26-6\"></p>\n<p>如果以上操作遇到問題，甚至是UserID也抓不到<br>可以看一下<a href=\"https://support.discord.com/hc/zh-tw/articles/206346498-%E6%88%91%E5%9C%A8%E5%93%AA%E8%A3%A1%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%E6%88%91%E7%9A%84%E7%94%A8%E6%88%B6-%E6%9C%8D%E5%8B%99%E5%99%A8-%E6%B6%88%E6%81%AFID-\">這篇文章</a></p>\n<p>或是找找怎麼開啟Discord的開發者模式</p>\n<hr>\n<p>再來我們要新增兩個GAS檔案</p>\n<p><img src=\"https://i.imgur.com/L7WOiyD.png\" alt=\"26-7\"></p>\n<pre><code>function doGet(e) &#123;\n  var id = &#39;你的ID&#39;; //抓取表單\n  var spreadsheet = SpreadsheetApp.openById(id); // Sheet id\n  var sheet = spreadsheet.getSheetByName(&quot;UserPower&quot;); // 根據表格名稱取表\n  var rowLength = sheet.getLastRow()-1; //取行長度\n  var columnLength = sheet.getLastColumn(); //取列長度\n  var data = sheet.getRange(2,1,rowLength,columnLength).getValues(); // 取得的資料\n  \n  var dataExport = [];\n  \n  for(i in data)&#123;\n    if(data[i][0] != &quot;&quot;)&#123;\n    dataExport[i] = &#123;\n      userID:     data[i][0],\n      userName:   data[i][1],\n      Joins:   data[i][2],\n      IsAdmin: data[i][3]\n      &#125;\n    &#125;\n  &#125;\n  \n  \n  var dataExportFormat = JSON.stringify(dataExport);\n  return ContentService.createTextOutput(dataExportFormat).setMimeType(ContentService.MimeType.JSON);\n&#125;\n</code></pre>\n<p><img src=\"https://i.imgur.com/7P09NvS.png\" alt=\"26-8\"></p>\n<pre><code>function doGet(e) &#123;\n  var id = &#39;你的ID&#39;; //抓取表單\n  var spreadsheet = SpreadsheetApp.openById(id); // Sheet id\n  var sheet = spreadsheet.getSheetByName(&quot;PartyPower&quot;); // 根據表格名稱取表\n  var rowLength = sheet.getLastRow()-1; //取行長度\n  var columnLength = sheet.getLastColumn(); //取列長度\n  var data = sheet.getRange(2,1,rowLength,columnLength).getValues(); // 取得的資料\n  \n  var dataExport = [];\n  \n  for(i in data)&#123;\n    if(data[i][0] != &quot;&quot;)&#123;\n    dataExport[i] = &#123;\n      ID:     data[i][0],\n      type:   data[i][1],\n      Power:   data[i][2]\n      &#125;\n    &#125;\n  &#125;\n  \n  \n  var dataExportFormat = JSON.stringify(dataExport);\n  return ContentService.createTextOutput(dataExportFormat).setMimeType(ContentService.MimeType.JSON);\n&#125;\n</code></pre>\n<p>記得都要存檔後，發佈成網路應用，獲取URL</p>\n<p><img src=\"https://i.imgur.com/iohSLWG.png\" alt=\"26-9\"></p>\n<p>(之前示範JSONArray的[]，可以拿掉)<br>跟baseExcel一樣，我們會希望bot在啟動時就把表都讀取進來，從雲端下載成本地db的感覺，順便做資料二次處理</p>\n<p><img src=\"https://i.imgur.com/s3bibHM.png\" alt=\"26-10\"></p>\n<pre><code>const userPower = &#123;\n    &#39;method&#39;: &#39;GET&#39;,\n    &#39;url&#39;: auth.Gas.Get[0].UserPower,\n    &#39;headers&#39;: &#123;&#125;\n&#125;;\n\nconst partyPower = &#123;\n    &#39;method&#39;: &#39;GET&#39;,\n    &#39;url&#39;: auth.Gas.Get[0].PartyPower,\n    &#39;headers&#39;: &#123;&#125;\n&#125;;\n</code></pre>\n<p><img src=\"https://i.imgur.com/hykI0wE.png\" alt=\"26-11\"></p>\n<p><img src=\"https://i.imgur.com/2K8yobJ.png\" alt=\"26-12\"></p>\n<pre><code>exports.getUserPower = function(callback) &#123;\n    let backValue = new Array;\n    request(userPower, function(error, response) &#123;\n        try &#123;\n            if (error) &#123;\n                console.log(&#39;getUserPowerError1&#39;, error);\n                callback(false);\n            &#125; else &#123;\n                const data = JSON.parse(response.body); //接收回傳(response)的body\n                for (i in data) &#123;\n                    backValue.push(data[i]);\n                    backValue[i].Joins = backValue[i].Joins.split(&#39;;&#39;);\n                &#125;\n                callback(backValue);\n            &#125;\n        &#125; catch (err) &#123;\n            console.log(&#39;getUserPowerError2&#39;, err);\n            callback(false);\n        &#125;\n    &#125;);\n&#125;;\n\nexports.getPartyPower = function(callback) &#123;\n    let backValue = new Array;\n    request(partyPower, function(error, response) &#123;\n        try &#123;\n            if (error) &#123;\n                console.log(&#39;getPartyPowerError1&#39;, error);\n                callback(false);\n            &#125; else &#123;\n                const data = JSON.parse(response.body); //接收回傳(response)的body\n                for (i in data) &#123;\n                    backValue.push(data[i]);\n                    backValue[i].Power = backValue[i].Power.split(&#39;;&#39;);\n                &#125;\n                callback(backValue);\n            &#125;\n        &#125; catch (err) &#123;\n            console.log(&#39;getPartyPowerError2&#39;, err);\n            callback(false);\n        &#125;\n    &#125;);\n&#125;;\n</code></pre>\n<p><img src=\"https://i.imgur.com/PEI3XAU.png\" alt=\"26-13\"></p>\n<p>(開始變成callback地獄了)</p>\n<p>資料都接到也處理好了，再來要用這些資料實作功能</p>\n<p>增加指令列表的一個新系統</p>\n<p><img src=\"https://i.imgur.com/8g2yKAQ.png\" alt=\"26-14\"></p>\n<p>在message事件新增入口</p>\n<p><img src=\"https://i.imgur.com/5k6UBOp.png\" alt=\"26-15\"></p>\n<p>然後做出實際功能</p>\n<p><img src=\"https://i.imgur.com/f4FEeTh.png\" alt=\"26-16\"></p>\n<pre><code>//#region tag系統\nfunction TagFunction(msg, tempPrefix) &#123;\n    const cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(&#39; &#39;); //以空白分割前綴以後的字串\n\n    switch (cmd[0]) &#123;\n        case &#39;其餘指令&#39;:\n            break;\n        default: //身份組ID\n            CheckID(msg, cmd, CheckParty);\n            break;\n    &#125;\n&#125;\n\n//判斷此人有沒有登記資料\nfunction CheckID(msg, cmd, OtherFunction) &#123;\n    const haveUserData = UserPowerData.find(element =&gt; &#123;\n        return element.userID == msg.author.id;\n    &#125;)\n\n    if (haveUserData !== undefined) &#123;\n        //有資料\n        if (haveUserData.IsAdmin) &#123;\n            //是管理員，直接做後續事情\n            return SendTagMessage(msg, `&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自管理員&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n        &#125; else &#123;\n            //不是管理員，先看有甚麼群組\n            return OtherFunction(msg, cmd, haveUserData);\n        &#125;\n    &#125;\n&#125;\n\n//根據UserPower獲得Party\nfunction CheckParty(msg, cmd, haveUserData) &#123;\n    let havePartyPower;\n    havePartyPower = PartyPowerData.filter(element =&gt; &#123;\n        if (haveUserData.Joins[i].indexOf(element.ID) != -1) &#123;\n            return element.Power.indexOf(cmd[1]) != -1\n        &#125;\n    &#125;)\n\n    if (isEmptyObject(havePartyPower)) &#123;\n        SendTagMessage(msg, &#39;無權限，請確認參數是否正確&#39;);\n    &#125; else &#123;\n        SendTagMessage(msg, `&lt;@&amp;$&#123;cmd[1]&#125;&gt;\\n來自&lt;@$&#123;msg.author.id&#125;&gt;的指令呼叫`);\n    &#125;\n&#125;\n\n//傳送訊息單獨實例\nfunction SendTagMessage(msg, data) &#123;\n    msg.channel.send(data);\n&#125;\n</code></pre>\n<p>最後補個判斷Array是不是空集合的小function</p>\n<p><img src=\"https://i.imgur.com/LWubzzI.png\" alt=\"26-17\"></p>\n<hr>\n<p>大致解說一下</p>\n<p><img src=\"https://i.imgur.com/I4egiAN.png\" alt=\"26-18\"></p>\n<p>Tag系統的入口function<br>跟其他系統一樣，判斷要使用甚麼指令<br>今天先把預設(default)指令，也就是tag身分組做出來</p>\n<p><img src=\"https://i.imgur.com/leRaRUt.png\" alt=\"26-19\"></p>\n<p>檢查UserPower中是否有此人資料，以及是否是管理員<br>如果有資料且不是管理員，繼續檢查其所屬身份組權限</p>\n<p><img src=\"https://i.imgur.com/5u8N8DC.png\" alt=\"26-20\"></p>\n<p>檢查身份組中是否有權限符合這次要tag的對象id，有的話代表此次指令滿足權限，給予tag</p>\n<p>我們跑看看</p>\n<p><img src=\"https://i.imgur.com/R4VEGBa.png\" alt=\"26-21\"></p>\n<p>成功</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/25/12thDay25/",
            "url": "https://smilin.net/2020/09/25/12thDay25/",
            "title": "Day25 - 權限系統規格",
            "date_published": "2020-09-25T01:42:13.000Z",
            "content_html": "<p>最近在編寫群組權限相關的功能，就說說這個吧</p>\n<span id=\"more\"></span>\n\n<p>先說明此功能需求情境:</p>\n<p>群組人數過多，管理層不希望群組人員可以使用 every 或 身分組 或 頻道等會群體呼叫的tag</p>\n<p>但又希望在必要的時候，其他人可以使用此功能</p>\n<p>因此希望將此權限關閉，並且給予機器人此權限<br>透過機器人做二次權限管理，並且對使用人與時間等進行紀錄</p>\n<hr>\n<p>為了完成需求，我們假設機器人權限是admin，我們需要…</p>\n<p>三層身份組<br>群主-&gt;管理員-&gt;自定義身份<br>不是dc的身份組，是寫在機器人內的身份組<br>身分組內有此人id-&gt;可以行使此身份組下所開通的功能<br>例如管理員身份組下的人可以指派新的身份組，此身份組可以使用哪幾種tag<br>要把誰加入身份組等</p>\n<p>指派管理員<br>可以將指定人員加入管理員身份組<br>此指令只有群主身份組可以行使</p>\n<p>創建新身份組<br>創建自定義的身份組，會給予一組id，後續此id代表身份組</p>\n<p>修改身份組名稱<br>修改身份組名稱，便於管理，參數需帶入身份組id</p>\n<p>新增身份組可tag內容<br>新增身份組內可以tag的類型，參數需帶入身份組id與要tag內容的id</p>\n<p>刪除身分組可tag內容<br>同上</p>\n<p>新增身份組成員<br>將群組成員加入身份組，參數帶入身份組id與成員id</p>\n<p>刪除身份組成員<br>同上</p>\n<p>使用tag<br>透過bot tag指定id，參數需帶入tagID，可額外帶入要說的話</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/24/12thDay24/",
            "url": "https://smilin.net/2020/09/24/12thDay24/",
            "title": "Day24 - 愛麗絲安靜!",
            "date_published": "2020-09-24T02:58:46.000Z",
            "content_html": "<p>今天想教怎麼讓機器人安靜&#x2F;啟動<br>這樣才能說之後想教的東西</p>\n<span id=\"more\"></span>\n\n<h1 id=\"情境描述\"><a href=\"#情境描述\" class=\"headerlink\" title=\"情境描述\"></a>情境描述</h1><p>機器人需要有個控制是否啟動的開關<br>可設定在該群組 or 頻道是否可以接收指令</p>\n<p>因為我們的機器人會有多組系統(文字回答&amp;音樂系統)<br>會希望再額外設定可以在指定的群組 or 頻道是否可以接收特定系統的指令</p>\n<h1 id=\"實作開始\"><a href=\"#實作開始\" class=\"headerlink\" title=\"實作開始\"></a>實作開始</h1><p>首先請先幫我新建一個JSON檔案，叫做shup.json…或是你喜歡的名字xD</p>\n<p><img src=\"https://i.imgur.com/A3FgZSp.png\" alt=\"24-1\"></p>\n<p>記得JSON檔案都要放在JSONHome喔</p>\n<p>type<br>型態，代表這一筆JSONObject是甚麼類型<br>目前還用不到，都設1就好</p>\n<p>GroupID<br>群組ID，主要給後續判定的部份</p>\n<p>GroupName<br>群組名稱，用處不大、主要給使用者好分辨的</p>\n<p>Power<br>代表不可使用的權限，後面會一邊寫一邊解說</p>\n<p>禁言指令，顧名思義、希望機器人是否被禁言的開關<br>這開關需要放在所有指令之前，這樣才可以判斷出內容是否需要被禁止</p>\n<p>老樣子，我們要先引入json</p>\n<p><img src=\"https://i.imgur.com/P7TjmyD.png\" alt=\"24-2\"></p>\n<p>放在message事件的上方，當判斷權限為false，就停止後續行為</p>\n<p><img src=\"https://i.imgur.com/Ijtpyyk.png\" alt=\"24-3\"></p>\n<p>接著我們實作IsShut<br>IsShut根據shup.json，先判斷訊息群組&amp;訊息有沒有資料，再來判斷資料中存不存在tempPrefix，存在的話就要禁用功能，因為默認不存在時文檔中不會有資料，自然就不該設限</p>\n<pre><code>//禁言系統判斷\nfunction IsShut(msg, tempPrefix) &#123;\n    //群組id\n    const guildID = msg.guild.id;\n    //頻道id\n    const channelID = msg.channel.id;\n    //當前狀態\n    let status = true;\n\n    //先判斷群組，群組判斷完判斷頻道(頻道權限優先於群組)\n    const guildIF = shup.Group.find(element =&gt; &#123;\n        if (element.GroupID == guildID) &#123;\n            return element.Power.indexOf(tempPrefix) !== -1;\n        &#125;\n        return false;\n    &#125;)\n\n    //找到資料 = 此群組存在Group中且Power存在此次指令代碼\n    if (guildIF !== undefined) &#123;\n        status = false;\n    &#125;\n\n    //頻道\n    const channelIF = shup.Channel.find(element =&gt; &#123;\n        if (element.ChannelID == channelID) &#123;\n            return true;\n        &#125;\n        return false;\n    &#125;)\n\n    //找到資料 = 此頻道存在Channel中\n    if (channelIF !== undefined) &#123;\n        //Power有此資料=&gt;禁用功能 無資料=&gt;不設限\n        if (channelIF.Power.indexOf(tempPrefix) !== -1) &#123;\n            status = false;\n        &#125; else &#123;\n            status = true;\n        &#125;\n    &#125;\n\n    return status;\n&#125;\n</code></pre>\n<p>接著我們將資料實際key入shup.json看看</p>\n<p><img src=\"https://i.imgur.com/r2YX14O.png\" alt=\"24-4\"></p>\n<p>不知道同學有沒有看出Power的判斷依據了?</p>\n<p><img src=\"https://i.imgur.com/IQw9uKQ.png\" alt=\"24-5\"></p>\n<p>沒錯，就是依據prefix時設置的各系統代表ID</p>\n<p>我們試著跑看看</p>\n<p><img src=\"https://i.imgur.com/fPPlTwE.png\" alt=\"24-6\"></p>\n<p>另一個頻道</p>\n<p><img src=\"https://i.imgur.com/uV9zJ4q.png\" alt=\"24-7\"></p>\n<p>大成功~<br>這樣就做到各頻道各功能權限設置了</p>\n<p>不過存在一些問題<br>例如放在預設(default)的資料庫文字比對功能要怎麼判，應該是預設的-1吧<br>如果是-1要怎麼判斷呢?</p>\n<p>以及目前這樣的做法只做到判斷禁言功能的實作，還沒有辦法在前台讓使用者手動新增</p>\n<p>這部份筆者先賣個關子，各位可以嘗試寫看看，明天我們繼續做別的功能，之後再繞回來</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/23/12thDay23/",
            "url": "https://smilin.net/2020/09/23/12thDay23/",
            "title": "Day23 - 音樂系統的歌單批量載入(額外)",
            "date_published": "2020-09-23T07:04:44.000Z",
            "content_html": "<p>昨天我們把音樂系統的多群組支援做好了<br>今天想講一下怎麼直接導入歌單</p>\n<span id=\"more\"></span>\n\n<p>首先請在專案目錄下的終端機安裝</p>\n<pre><code>npm install ytpl\n</code></pre>\n<p><img src=\"https://i.imgur.com/Ugc2fg4.png\" alt=\"23-1\"> </p>\n<p>安裝完成後，我們打開看package.json</p>\n<p><img src=\"https://i.imgur.com/BZIUj5U.png\" alt=\"23-2\"> </p>\n<p>最後一行出現了ytpl<br>請到這個網站比對ytpl的版本，如果像筆者一樣版本過低的話，請將package.json內的ytpl版本拉高，然後更新一次ytpl<br><a href=\"https://www.npmjs.com/package/ytpl\">https://www.npmjs.com/package/ytpl</a></p>\n<p><img src=\"https://i.imgur.com/prueQ8r.png\" alt=\"23-3\"> </p>\n<p>官方文檔版本1.0.1</p>\n<p><img src=\"https://i.imgur.com/zDoQ0ox.png\" alt=\"23-4\"> </p>\n<p>手動把0.3.0改成1.0.1然後下指令</p>\n<p><img src=\"https://i.imgur.com/XAAeYn1.png\" alt=\"23-5\"> </p>\n<pre><code>npm update ytpl\n</code></pre>\n<p>這樣就會更新你的ytpl函式庫</p>\n<hr>\n<p>一安裝完就去確認版本是否最新，是因為舊版本的ytpl在抓取歌單資料時十分不穩，甚至有可能直接被yt擋下</p>\n<p>原因不明，但這道理可以套到ytdl-core上，之後同學們有任何問題都可以先更新版本看看</p>\n<hr>\n<p>更新好後，我們在bot.js引用ytpl</p>\n<p><img src=\"https://i.imgur.com/saOcdBI.png\" alt=\"23-6\"> </p>\n<p>在音樂指令底下加入歌單載入功能</p>\n<p><img src=\"https://i.imgur.com/r8rRLh7.png\" alt=\"23-7\">  </p>\n<pre><code>//?playList\nasync function playListMusic(guildID, msg) &#123;\n    try &#123;\n        //沒在音樂廳不能使用此功能\n        if (!client.voice.connections.get(guildID)) &#123;\n            msg.channel.send(`請先正常啟用音樂指令後，再使用歌單載入喔`);\n            return false;\n        &#125;\n        //網址\n        const valueED = msg.content.split(&#39; &#39;);\n        //先用library自帶的方式檢查一次能不能用\n        const canPlay = await ytpl.validateID(valueED[1]);\n        //讀取到幾首歌，上限默認100首\n        let a = 0;\n        //幾首成功放入歌單\n        let b = 0;\n        if (canPlay) &#123;\n            const listED = await ytpl(valueED[1]);\n            await listED.items.forEach(async function(element) &#123;\n                a = a + 1;\n                if (element.title !== &#39;[Deleted video]&#39;) &#123;\n                    canPlay2 = await ytdl.validateURL(element.url_simple);\n                    if (canPlay2) &#123;\n                        b = b + 1;\n                        musicList.get(guildID).push(element.url_simple);\n                    &#125;\n                &#125;\n            &#125;);\n            //回傳統計資訊\n            msg.channel.send(`歌單 $&#123;listED.title&#125;\\n共載入$&#123;b&#125;首歌曲\\n$&#123;a-b&#125;首載入失敗`);\n        &#125; else &#123;\n            msg.channel.send(`This Url isn&#39;t working in function.`);\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(err, &#39;playListMusicError&#39;);\n    &#125;\n&#125;\n</code></pre>\n<p>由上而下依序說明…</p>\n<p><img src=\"https://i.imgur.com/06WUq7e.png\" alt=\"23-8\"> </p>\n<p>因為歌單功能僅提供將yt歌單放入bot歌單的功能<br>正常使用play指令，不在語音廳的情況下是會直接進入語音廳並開始播放歌曲<br>筆者這邊寫成不能從歌單指令開始播歌</p>\n<p><img src=\"https://i.imgur.com/v9gRPGn.png\" alt=\"23-9\"> </p>\n<p>宣告了四份參數</p>\n<p>valueED<br>第一個單純是使用空白做字串分割，valueED[0]是前綴字+playList<br>valueED[1]則是一格空白後加上網址</p>\n<p>canPlay<br>使用ytpl自帶的檢查語法，會根據帶入的url回傳布林</p>\n<p>a<br>載入迴圈的每一次都會+1，代表著載入幾首歌</p>\n<p>b<br>載入迴圈的每一次，當成功將歌曲加入歌單時+1，表示成功抓取幾首歌</p>\n<p><img src=\"https://i.imgur.com/dBhEpU2.png\" alt=\"23-10\"> </p>\n<p>當canPlay等於ture後，正式查詢歌單並且將資料回傳給listED<br>listED底下有一items為JSONArray，他就是歌單的集合<br>對他使用迴圈，並在迴圈內用ytdl驗證一次網址是否可用<br>驗證全部通過後將歌曲加入該群組歌單<br>最後統計數字</p>\n<hr>\n<p>因為加入批量歌曲載入的緣故，當機器人在列出queueShow時，極有可能回傳大量文字<br>discord單封文字的上限數是2000，我們取1900就好</p>\n<p><img src=\"https://i.imgur.com/fdzjXHy.png\" alt=\"23-11\"> </p>\n<p>都好了後，試著運行看看</p>\n<p><img src=\"https://i.imgur.com/G0vZbae.png\" alt=\"23-12\"> </p>\n<p><img src=\"https://i.imgur.com/06dEnP9.png\" alt=\"23-13\"> </p>\n<p><img src=\"https://i.imgur.com/qSyICGj.png\" alt=\"23-14\"> </p>\n<p>這樣音樂系統也能做到批量載入音樂了<br>其餘還剩一些瑕疵，如歌單功能有限制，歌曲詳細資訊載入偏慢，沒有過濾私人影片還有更多可能的問題等…就讓各位自己嘗試看看吧</p>\n<p>那音樂系統就教到這，我們明天見</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/22/12thDay22/",
            "url": "https://smilin.net/2020/09/22/12thDay22/",
            "title": "Day22 - 音樂系統的多群組化(額外)",
            "date_published": "2020-09-22T02:10:05.000Z",
            "content_html": "<p>這兩天來把音樂系統教完好了</p>\n<span id=\"more\"></span>\n\n<p>目前為止的音樂系統只支援一隻機器人 for 一個群組的模式<br>如果有多群組同時要使用音樂系統，會導致歌單列表共用</p>\n<p>這是因為機器人的系統中，並沒有將群組納入判斷<br>要改起來並不難，但邏輯要清晰</p>\n<p>不知道當時有沒有小夥伴自己搞定這一塊的?我們今天會再帶過</p>\n<p>程式碼是依照之前的進度，不會重頭開始，如果需要但沒有基礎程式碼的話可以回去看音樂系統的教學</p>\n<hr>\n<h1 id=\"MusicFunction\"><a href=\"#MusicFunction\" class=\"headerlink\" title=\"MusicFunction\"></a>MusicFunction</h1><p><img src=\"https://i.imgur.com/sKuhlfp.png\" alt=\"22-1\"></p>\n<p>首先請把宣告成全域變數的兩個參數，初始化都設為Map()</p>\n<p><img src=\"https://i.imgur.com/KSRmbTG.png\" alt=\"22-2\"></p>\n<p>再來我們在音樂指令的入口提取guildID，並且放入每一個function內</p>\n<h1 id=\"playMusic\"><a href=\"#playMusic\" class=\"headerlink\" title=\"playMusic\"></a>playMusic</h1><p><img src=\"https://i.imgur.com/gax5Dun.png\" alt=\"22-3\"></p>\n<p>修改了151,155跟171行<br>(可以根據左側顏色判斷)</p>\n<p>第一次進入語音廳的群組需要先以群組ID宣告一個歌曲列表<br>原本歌曲列表放入資料的方法是這樣</p>\n<pre><code>musicList.push(網址)\n</code></pre>\n<p>現在變成</p>\n<pre><code>music.get(群組id).push(網址)\n</code></pre>\n<p>也就是根據群組id提取歌曲列表</p>\n<h1 id=\"playMusic2\"><a href=\"#playMusic2\" class=\"headerlink\" title=\"playMusic2\"></a>playMusic2</h1><p><img src=\"https://i.imgur.com/MpGvBiu.png\" alt=\"22-4\"></p>\n<p>改了185,195,202,204跟206行<br>(可以根據左側顏色判斷)</p>\n<p>原則上都跟剛剛一樣，注意歌曲清單跟播放遙控器應該是一個群組一個而已</p>\n<h1 id=\"disconnectMusic\"><a href=\"#disconnectMusic\" class=\"headerlink\" title=\"disconnectMusic\"></a>disconnectMusic</h1><p><img src=\"https://i.imgur.com/GHYrwdz.png\" alt=\"22-5\"></p>\n<p>修改了222行<br>(可以根據左側顏色判斷)</p>\n<h1 id=\"replayMusic\"><a href=\"#replayMusic\" class=\"headerlink\" title=\"replayMusic\"></a>replayMusic</h1><p><img src=\"https://i.imgur.com/0noksiD.png\" alt=\"22-6\"></p>\n<p>改了235,237與240行<br>(可以根據左側顏色判斷)</p>\n<h1 id=\"skipMusic\"><a href=\"#skipMusic\" class=\"headerlink\" title=\"skipMusic\"></a>skipMusic</h1><p><img src=\"https://i.imgur.com/j3vClrt.png\" alt=\"22-7\"></p>\n<p>只有一行</p>\n<h1 id=\"nowPlayMusic\"><a href=\"#nowPlayMusic\" class=\"headerlink\" title=\"nowPlayMusic\"></a>nowPlayMusic</h1><p><img src=\"https://i.imgur.com/0mjB6g9.png\" alt=\"22-8\"></p>\n<p>修改了253,255跟261行<br>(可以根據左側顏色判斷)</p>\n<p>字串串接部分拿的是已經處理好的參數，所以不用修改streamString</p>\n<h1 id=\"queueShow\"><a href=\"#queueShow\" class=\"headerlink\" title=\"queueShow\"></a>queueShow</h1><p><img src=\"https://i.imgur.com/6ekTspK.png\" alt=\"22-9\"></p>\n<p>修改了291,294跟296行<br>(可以根據左側顏色判斷)</p>\n<hr>\n<p>這樣基本就都改好了，我們試著運行看看</p>\n<p>運行前，因為之前我們已經上傳機器人到heroku上，理論上現在機器人是在運行狀態的<br>這時候如果我們使用node bot，雖然不會有bug，但會造成bot裡面同時有兩隻程序登入，會造成很有趣的現象，各位有興趣可以試試</p>\n<p>那這邊筆者為了繞過這問題，想直接上傳至heroku，這樣就可以只跑一個程序，也剛好介紹怎麼用heroku瀏覽程序歷程</p>\n<h1 id=\"測試\"><a href=\"#測試\" class=\"headerlink\" title=\"測試\"></a>測試</h1><p>我們先回到專案資料夾底下，將.git改名gitHub，然後將gitHeroku改回.git</p>\n<p>回到vsCode，將專案推上heroku</p>\n<p>推完看到Build succeeded後幫我下</p>\n<pre><code>heroku log -t\n</code></pre>\n<p>之前應該有提到<br>這是觀察專案在heroku上的託管狀態<br>如果我們要透過heroku來直接跑程序，或是之後出問題都是來這邊看error訊息</p>\n<p>開好訊息後，我們試著測試看看機器人是不是真的可以分群播音樂了</p>\n<p><img src=\"https://i.imgur.com/BMVGiLi.png\" alt=\"22-10\"></p>\n<p><img src=\"https://i.imgur.com/5dS1Qmq.png\" alt=\"22-11\"></p>\n<p><img src=\"https://i.imgur.com/7rysBLk.png\" alt=\"22-12\"></p>\n<p><img src=\"https://i.imgur.com/GdOBJIn.png\" alt=\"22-13\"></p>\n<p><img src=\"https://i.imgur.com/Eu0wFM2.png\" alt=\"22-14\"></p>\n<p><img src=\"https://i.imgur.com/FgMco0X.png\" alt=\"22-15\"></p>\n<p><img src=\"https://i.imgur.com/3J61doA.png\" alt=\"22-16\"></p>\n<hr>\n<p>大致如此，我們可以看到，機器人確實在兩個群組收到指令時，不會影響到對方了</p>\n<p>音樂系統的多群組支援教到這<br>明天看看要不要教一些額外的功能，我們明天見</p>\n<h1 id=\"主程序\"><a href=\"#主程序\" class=\"headerlink\" title=\"主程序\"></a>主程序</h1><pre><code>//#region 音樂系統\n//歌曲控制器\nlet dispatcher = new Map();\n//歌曲清單\nlet musicList = new Map();\n\nfunction MusicFunction(msg) &#123;\n    //將訊息內的前綴字截斷，後面的字是我們要的\n    const content = msg.content.substring(prefix[1].Value.length);\n    //指定我們的間隔符號\n    const splitText = &#39; &#39;;\n    //用間隔符號隔開訊息 contents[0] = 指令,contents[1] = 參數\n    const contents = content.split(splitText);\n    //因為會持續使用到，將群組ID獨立成參數\n    const guildID = msg.guild.id;\n\n    switch (contents[0]) &#123;\n        case &#39;play&#39;:\n            //點歌&amp;播放歌曲功能\n            playMusic(guildID, msg, contents);\n            break;\n        case &#39;replay&#39;:\n            //重播當前歌曲\n            replayMusic(guildID);\n            break;\n        case &#39;np&#39;:\n            //當前歌曲資訊\n            nowPlayMusic(guildID, msg.channel.id);\n            break;\n        case &#39;queue&#39;:\n            //歌曲清單\n            queueShow(guildID, msg.channel.id);\n            break;\n        case &#39;skip&#39;:\n            //中斷歌曲\n            skipMusic(guildID);\n            break;\n        case &#39;disconnect&#39;:\n            //退出語音頻道並且清空歌曲清單\n            disconnectMusic(guildID, msg.channel.id);\n            break;\n    &#125;\n&#125;\n\n//?play\nasync function playMusic(guildID, msg, contents) &#123;\n    //定義我們的第一個參數必需是網址\n    const urlED = contents[1];\n    try &#123;\n        //第一個參數不是連結就要篩選掉\n        if (urlED.substring(0, 4) !== &#39;http&#39;) return msg.reply(&#39;The link is not working.1&#39;);\n\n        //透過library判斷連結是否可運行\n        const validate = await ytdl.validateURL(urlED);\n        if (!validate) return msg.reply(&#39;The link is not working.2&#39;);\n\n        //獲取歌曲資訊\n        const info = await ytdl.getInfo(urlED);\n        //判斷資訊是否正常\n        if (info.videoDetails) &#123;\n            //指令下達者是否在語音頻道\n            if (msg.member.voice.channel) &#123;\n                //判斷bot是否已經連到語音頻道 是:將歌曲加入歌單 不是:進入語音頻道並且播放歌曲\n                if (!client.voice.connections.get(msg.guild.id)) &#123;\n                    //因為是第一次加入，宣告新的歌曲列表\n                    musicList.set(guildID, new Array());\n\n                    //將歌曲加入歌單\n                    musicList.get(guildID).push(urlED);\n                    //進入語音頻道\n                    msg.member.voice.channel.join()\n                        .then(connection =&gt; &#123;\n                            msg.reply(&#39;來了~&#39;);\n                            //const guildID = msg.guild.id;\n                            const channelID = msg.channel.id;\n                            //播放歌曲\n                            playMusic2(connection, guildID, channelID);\n                        &#125;)\n                        .catch(err =&gt; &#123;\n                            msg.reply(&#39;bot進入語音頻道時發生錯誤，請再試一次&#39;);\n                            console.log(err, &#39;playMusicError2&#39;);\n                        &#125;)\n                &#125; else &#123;\n                    //將歌曲加入歌單\n                    musicList.get(guildID).push(urlED);\n                    msg.reply(&#39;已將歌曲加入歌單!&#39;);\n                &#125;\n            &#125; else return msg.reply(&#39;請先進入頻道:3...&#39;);\n        &#125; else return msg.reply(&#39;The link is not working.3&#39;);\n    &#125; catch (err) &#123;\n        console.log(err, &#39;playMusicError&#39;);\n    &#125;\n&#125;\n\n//?play 遞迴函式\nasync function playMusic2(connection, guildID, channelID) &#123;\n    try &#123;\n        //播放前歌曲清單不能沒有網址\n        if (musicList.get(guildID).length &gt; 0) &#123;\n            //設定音樂相關參數\n            const streamOptions = &#123;\n                seek: 0,\n                volume: 0.5,\n                Bitrate: 192000,\n                Passes: 1,\n                highWaterMark: 1\n            &#125;;\n            //讀取清單第一位網址\n            const stream = await ytdl(musicList.get(guildID)[0], &#123;\n                filter: &#39;audioonly&#39;,\n                quality: &#39;highestaudio&#39;,\n                highWaterMark: 26214400 //25ms\n            &#125;)\n\n            //播放歌曲，並且存入dispatcher\n            dispatcher.set(guildID, connection.play(stream, streamOptions));\n            //監聽歌曲播放結束事件\n            dispatcher.get(guildID).on(&quot;finish&quot;, finish =&gt; &#123;\n                //將清單中第一首歌清除\n                if (musicList.get(guildID).length &gt; 0) musicList.get(guildID).shift();\n                //播放歌曲\n                playMusic2(connection, guildID, channelID);\n            &#125;)\n        &#125; else disconnectMusic(guildID, channelID); //清空歌單並且退出語音頻道\n    &#125; catch (err) &#123;\n        console.log(err, &#39;playMusic2Error&#39;);\n    &#125;\n&#125;\n\n//?disconnect\nfunction disconnectMusic(guildID, channelID) &#123;\n    try &#123;\n        //判斷bot是否在此群組的語音頻道\n        if (client.voice.connections.get(guildID)) &#123;\n            //清空歌曲清單\n            musicList.set(guildID, new Array());\n            //退出語音頻道\n            client.voice.connections.get(guildID).disconnect();\n\n            client.channels.fetch(channelID).then(channel =&gt; channel.send(&#39;晚安~&#39;));\n        &#125; else client.channels.fetch(channelID).then(channel =&gt; channel.send(&#39;可是..我還沒進來:3&#39;))\n    &#125; catch (err) &#123;\n        console.log(err, &#39;disconnectMusicError&#39;);\n    &#125;\n&#125;\n\n//?replay\nfunction replayMusic(guildID) &#123;\n    if (musicList.get(guildID).length &gt; 0) &#123;\n        //把當前曲目再推一個到最前面\n        musicList.get(guildID).unshift(musicList[0]);\n        //將歌曲關閉，觸發finish事件\n        //finish事件將清單第一首歌排出，然後繼續播放下一首\n        if (dispatcher.get(guildID) !== undefined) dispatcher.get(guildID).end();\n    &#125;\n&#125;\n\n//?skip\nfunction skipMusic(guildID) &#123;\n    //將歌曲關閉，觸發finish事件\n    if (dispatcher.get(guildID) !== undefined) dispatcher.get(guildID).end();\n&#125;\n\n//?np\nasync function nowPlayMusic(guildID, channelID) &#123;\n    try &#123;\n        if (dispatcher.get(guildID) !== undefined &amp;&amp; musicList.get(guildID).length &gt; 0) &#123;\n            //從連結中獲取歌曲資訊 標題 總長度等\n            const info = await ytdl.getInfo(musicList.get(guildID)[0]);\n            //歌曲標題\n            const title = info.videoDetails.title;\n            //歌曲全長(s)\n            const songLength = info.videoDetails.lengthSeconds;\n            //當前播放時間(ms)\n            const nowSongLength = Math.floor(dispatcher.get(guildID).streamTime / 1000);\n            //串字串\n            const message = `$&#123;title&#125;\\n$&#123;streamString(songLength,nowSongLength)&#125;`;\n            client.channels.fetch(channelID).then(channel =&gt; channel.send(message))\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(err, &#39;nowPlayMusicError&#39;);\n    &#125;\n&#125;\n\n//▬▬▬▬▬▬▬▬▬?▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nfunction streamString(songLength, nowSongLength) &#123;\n    let mainText = &#39;?&#39;;\n    const secondText = &#39;▬&#39;;\n    const whereMain = Math.floor((nowSongLength / songLength) * 100);\n    let message = &#39;&#39;;\n    for (i = 1; i &lt;= 30; i++) &#123;\n        if (i * 3.3 + 1 &gt;= whereMain) &#123;\n            message = message + mainText;\n            mainText = secondText;\n        &#125; else &#123;\n            message = message + secondText;\n        &#125;\n    &#125;\n    return message;\n&#125;\n\n//?queue\nasync function queueShow(guildID, channelID) &#123;\n    try &#123;\n        if (musicList.get(guildID).length &gt; 0) &#123;\n            let info;\n            let message = &#39;&#39;;\n            for (i = 0; i &lt; musicList.get(guildID).length; i++) &#123;\n                //從連結中獲取歌曲資訊 標題 總長度等\n                info = await ytdl.getInfo(musicList.get(guildID)[i]);\n                //歌曲標題\n                title = info.videoDetails.title;\n                //串字串\n                message = message + `\\n$&#123;i+1&#125;. $&#123;title&#125;`;\n            &#125;\n            //把最前面的\\n拿掉\n            message = message.substring(1, message.length);\n            client.channels.fetch(channelID).then(channel =&gt; channel.send(message))\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(err, &#39;queueShowError&#39;);\n    &#125;\n&#125;\n//#endregion\n</code></pre>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/21/12thDay21/",
            "url": "https://smilin.net/2020/09/21/12thDay21/",
            "title": "Day21 - 認識GitHub",
            "date_published": "2020-09-21T01:27:40.000Z",
            "content_html": "<p>今天想先說該怎麼把專案推上github，可以順便複習與heroku配套的git指令</p>\n<span id=\"more\"></span>\n\n<p>heroku會用到git是因為heroku推程序這個動作跟github一樣，都是將專案推到網路上某個地方，推到github或heroku的差別而已</p>\n<p>既然如此，heroku理所當然也可以做到跟github一樣的事情<br>那又為什麼還要額外放在github呢?</p>\n<h1 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h1><p><img src=\"https://i.imgur.com/J0tiaEH.png\" alt=\"21-1\"></p>\n<p>GitHub是基於Git語言的開源專案庫<br>他提供任何人將自己的程序打包成專案，透過Git推上GitHub進行開發&amp;版本紀錄<br>GitHub對開源有著良好的圖形介面支持，所有人都可以在GitHub上看到對方的專案，並且提出協作要求、讓多位工程師來協同完成一件專案</p>\n<p>一言以蔽之、將我們的機器人推上GitHub就像是展示你自己的作品，讓所有人都看的到你做過哪些東西，又是何時更新、更新了甚麼，是資訊人要讓人了解自己最快速的一步</p>\n<p>推GitHub專案雖然也要使用Git語言，但因為GitHub是圍繞著Git開發的網站，其對Git語言的支援十分強大，除了網站本身按一按就能把專案推上去以外，他還推出了專案管理的圖形使用者介面</p>\n<h1 id=\"GitHub-Desktop\"><a href=\"#GitHub-Desktop\" class=\"headerlink\" title=\"GitHub Desktop\"></a>GitHub Desktop</h1><p><a href=\"https://desktop.github.com/\">https://desktop.github.com/</a><br>請點擊連結並且下載GitHub Desktop</p>\n<p><img src=\"https://i.imgur.com/rIGrdAg.png\" alt=\"21-2\"></p>\n<p>安裝完開啟後會要求你登入，請直接登入<br>可以選擇亮或暗主題<br>一開始會問你要不要直接新增專案，請拒絕，想辦法進到這個畫面 </p>\n<p><img src=\"https://i.imgur.com/1YNrkrT.png\" alt=\"21-3\"></p>\n<p>點擊左上角，拉出Add下拉框，點開後有個Create new repository</p>\n<p><img src=\"https://i.imgur.com/ZAwEqcQ.png\" alt=\"21-4\"></p>\n<p>這是新增一個新專案，點下去後他會先要你選擇本機上的路徑</p>\n<p><img src=\"https://i.imgur.com/bj3clLV.png\" alt=\"21-5\"></p>\n<p>第一個是資料夾名稱，我們取DiscordBot<br>第二個是專案簡介，可以隨便寫、但注意不要太多，一行就好<br>第三個是路徑，請放在原專案外面<br>Initialize this repository with a README記得打勾<br>下面兩個是使用語言之類的，這部份GitHub上傳後會自動判斷，可以不管</p>\n<p>都好了之後我們按…..不對!還不能按Create repository!<br>我們先進到專案資料夾</p>\n<p><img src=\"https://i.imgur.com/G02dXTW.png\" alt=\"21-6\"></p>\n<p>我們把.git資料夾改名成Herokugit<br>如果看不到.git資料夾請上網查一下怎麼看到隱藏資料夾</p>\n<p><img src=\"https://i.imgur.com/g4EsJIR.png\" alt=\"21-7\"></p>\n<p>好了之後我們回去按Create repository<br>按完會發現資料夾內多了</p>\n<p>README.md<br>.gitattributes<br>.git</p>\n<p><img src=\"https://i.imgur.com/r8bUU7S.png\" alt=\"21-8\"></p>\n<p>記得我們一開始建Heroku有提到嗎，只要是Git專案都會有.git檔案<br>因為使用Heroku的同時，他就是屬於Heroku的專案了，我們如果也要推上GitHub的話，就要先讓他不是Heroku的專案，不然會覆蓋掉!</p>\n<p>然後我們新增一個.gitignore，注意沒有副檔名喔</p>\n<p><img src=\"https://i.imgur.com/HWtBE6s.png\" alt=\"21-9\"></p>\n<p><img src=\"https://i.imgur.com/JbUJatt.png\" alt=\"21-10\"></p>\n<pre><code>auth.json\n.gitignore\nHerokugit\n</code></pre>\n<p>這是給GitHub看的文件，可以讓GitHub在將專案commit前，選擇要忽略哪些檔案<br>我們的私密資料都在auth.json，所以auth.json自然不能推到任何人都能看得GitHub上<br>Herokugit是讓GitHub不會上傳到Heroku的.git檔案</p>\n<p><img src=\"https://i.imgur.com/CeXOZni.png\" alt=\"21-11\"></p>\n<p>這時我們回到GitHubDesktop，可以看到左下角告訴你，專案commit好了，並且版號是init(初始化)</p>\n<p>在宣告一個新專案庫時，相當於他幫你下了</p>\n<p>git add .<br>git commit init</p>\n<p>這兩個指令，我們可以點左上角的history看到我們有哪些檔案被commit，只要等等再下push就會被推上網際網路</p>\n<p>那我們點一下右上角的Publish repository</p>\n<p><img src=\"https://i.imgur.com/8oMDTIu.png\" alt=\"21-12\"></p>\n<p>第一次push時會有像這樣的提示框，他會二次確認你在GitHub上的專案要叫甚麼名字</p>\n<p>Keep this code private打勾的話，這個專案就會是私人的，只有你登錄帳號時看的見<br>我們希望程序是可以被人看見的，所以我們要把打勾取消掉</p>\n<p>好了之後我們點Publish repository，他就會開始上傳專案，第一次比較久，我們等一下，可以去到杯水再回來看看</p>\n<p><img src=\"https://i.imgur.com/2UQueAh.png\" alt=\"21-13\"></p>\n<p>畫面長這樣就是成功了，左下角的commit消失(被推上去)</p>\n<p><img src=\"https://i.imgur.com/RZ42yiU.png\" alt=\"21-14\"></p>\n<p>History可以看到我們的歷史版本，以及做了那些變動</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/20/12thDay20/",
            "url": "https://smilin.net/2020/09/20/12thDay20/",
            "title": "Day20 - GAS抓表(4)",
            "date_published": "2020-09-20T02:26:24.000Z",
            "content_html": "<p>昨天我們成功把API跟程式做了連結，並且可以在dc使用</p>\n<p>但從GAS到程序寫法都存在問題，今天筆者會一一修正</p>\n<span id=\"more\"></span>\n\n<p><img src=\"https://i.imgur.com/fR5A15o.png\" alt=\"20-1\"></p>\n<p>首先請開啟GAS，這是我們目前的樣子</p>\n<p>為了讓搜尋方式從JSONObject轉成JSONArray，第9~19行請改寫如下</p>\n<p><img src=\"https://i.imgur.com/T9RPJMS.png\" alt=\"20-2\"></p>\n<p>重點在於宣告dataExport的時候，從{}變成了[]<br>這就是JSONObject跟JSONArray的差別了<br>{}表示JSONObject，而[]表示JSONArray</p>\n<p>做好後我們跟上次一樣發布成網頁應用程式</p>\n<p><img src=\"https://i.imgur.com/ilA3YVL.png\" alt=\"20-3\"></p>\n<p>以後要記得，只要想修改GAS，修改完就一定要發布，然後版本一定要+1<br>版本只會越來越高，如果選擇舊的版號的話，API是抓不到你最新的修改的喔!</p>\n<p>成功改成JSONArray後，原本的寫法就不適用了，不過我們也不打算繼續使用舊的邏輯<br>先來整理目前程序接收到API後的邏輯</p>\n<p>discord訊息事件觸發 -&gt; 沒有前綴字，進入API字串比對 -&gt; 比對完成，反饋結果 -&gt; 將結果反饋回discord</p>\n<p>這樣做最明顯的問題就是每有一個訊息事件，bot就要打一次API上去<br>花費的時間過長，容易增加bot錯誤<br>且沒有考量過GAS每日免費額度問題</p>\n<p>那麼該怎麼解決這問題呢?其實也很簡單，只要讓抓取API的行為只要執行一次就好</p>\n<p>整個DiscordBot，唯一只會執行一次的地方就在ready事件</p>\n<p><img src=\"https://i.imgur.com/XBnoUg1.png\" alt=\"20-4\"></p>\n<p>當程序啟動，程序自動執行login方法，login成功就會收到唯一一次的ready</p>\n<p><img src=\"https://i.imgur.com/xRZkc3k.png\" alt=\"20-5\"></p>\n<p>將原本在下面的API事件拉上ready，並且將messageED改成dataED<br>我們之後就不讓GetGas做字串比對了，只要幫我們打API並且整理好資料後反饋就好</p>\n<p><img src=\"https://i.imgur.com/Tcb5HJq.png\" alt=\"20-6\"></p>\n<p><img src=\"https://i.imgur.com/lif9ZJN.png\" alt=\"20-7\"></p>\n<p>處理好上面後，做字串比對</p>\n<p><img src=\"https://i.imgur.com/xSzaxE8.png\" alt=\"20-8\"></p>\n<pre><code>//BaseExcel字串比對\nfunction GetBaseExcelData(msg) &#123;\n    try &#123;\n        if (BaseExcelData) &#123;\n            const userMessage = msg.content;\n\n            e = BaseExcelData.filter(element =&gt; &#123;\n                return element.NAME === userMessage;\n            &#125;)\n\n            if (e) return e[0].VALUE;\n            else return false;\n        &#125;\n    &#125; catch (err) &#123;\n        console.log(&#39;GetBaseExcelDataError&#39;, err);\n    &#125;\n&#125;\n</code></pre>\n<p>然後將字串比對的function拉到原本請求API的地方</p>\n<p><img src=\"https://i.imgur.com/jnV3w2k.png\" alt=\"20-9\"></p>\n<p>都完成後，我們試著執行看看</p>\n<p><img src=\"https://i.imgur.com/Y4k84C8.png\" alt=\"20-10\"></p>\n<p>成了!<br>這樣我們的bot只在執行時會去取API<br>解決了GAS限制的問題，並且每次的讀寫速度也提升許多</p>\n<p>到此，DiscordBot後台0負擔這個主題的基本設置大致說完了<br>這邊附上完整的教學專案<br><a href=\"https://supr.link/MePIY\">https://supr.link/MePIY</a></p>\n<p>剩下十天會教一些額外的內容，例如昨天提到GAS的訊息應該是分群組的，音樂系統如何分群使用等，以及GitHub使用….如果讀者有想看的也可以留言給筆者知道，筆者會的話再做安排</p>\n<p>最後我們將檔案推上Heroku，記得怎麼推嗎?</p>\n<p>git add .<br>git commit -m ‘版本說明’<br>git push heroku master</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/19/12thDay19/",
            "url": "https://smilin.net/2020/09/19/12thDay19/",
            "title": "Day19 - GAS抓表(3)",
            "date_published": "2020-09-19T12:00:43.000Z",
            "content_html": "<p>昨天我們的程式成功抓到API的資料並且對他做分析了<br>現在要串回主程序(bot.js)上</p>\n<span id=\"more\"></span>\n\n<p><img src=\"https://i.imgur.com/lLXAqcN.png\" alt=\"19-1\"></p>\n<p>請幫我在bot.js引用GetGas.js</p>\n<p><img src=\"https://i.imgur.com/mwE3NRg.png\" alt=\"19-2\"></p>\n<p><img src=\"https://i.imgur.com/xMGI9Fa.png\" alt=\"19-3\"> </p>\n<p>然後之前的文字回應系統，跟音樂系統一樣用一個function包起來，比較好看</p>\n<p><img src=\"https://i.imgur.com/uvfVZ2Q.png\" alt=\"19-4\"></p>\n<p>我們希望當訊息不符合任一前綴系統的情況，就要拿字串跟資料庫比對<br>所以我們把function放在default(默認)，只要前面的case都沒進去就會到default</p>\n<p><img src=\"https://i.imgur.com/N0R0NAW.png\" alt=\"19-5\"> </p>\n<p>之後新增BaseExcelFunction方法<br>內容是執行GetGas底下的getBaseExcel元素</p>\n<p><img src=\"https://i.imgur.com/lg1t1wq.png\" alt=\"19-6\"></p>\n<p>回來看GetGas的getBaseExcel<br>getBaseExcel元素指向一callback方法<br>帶了一個參數userTalk，callback方法使用callback代表方法的結束，呼叫方會在callback欄位宣告function，其帶回參數(messageED)就是getBaseExcel的方法中callback的值</p>\n<p><img src=\"https://i.imgur.com/XXBAW5u.png\" alt=\"19-7\"></p>\n<p>這樣寫完，機器人就能做簡單的回話了!</p>\n<hr>\n<p>雖然功能做好了，但有許多問題</p>\n<p>依嚴重性依序列舉的話</p>\n<ol>\n<li>   bot每從discord收到一則訊息就會使用一次API</li>\n<li>   使用JsonObject做迴圈查詢十分沒有效率</li>\n<li>   缺乏防呆&amp;參數替換</li>\n</ol>\n<p>理論上，機器人對對應的詞句回話這個動作是即時的，透過這個寫法，我們每次查詢API都必須等待2~3秒的時間，API才會將結果反饋給bot<br>而且多次傳送API不僅降低了程序的穩定，也要考慮GAS提供的每日配額<br>如果bot所在的群組一天訊息超過2萬筆，API就一定會被花光，而一天兩萬筆訊息、對於一個支援多群組的bot來說其實並不困難</p>\n<p>GetGas中對於data的處理方式也是極其低效的，雖然在捨棄SQL這種專為優化資料存取的系統時，就難以追求最高效的方法，但目前的做法也仍是相對低效的</p>\n<p>以及程序目前只是簡單的判A給B，功能十分單一<br>我沒辦法針對特定群組，有該群組專屬的詞彙，或是對特定回應帶tag等</p>\n<p>明天我們會將程序做一次翻新</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        },
        {
            "id": "https://smilin.net/2020/09/18/12thDay18/",
            "url": "https://smilin.net/2020/09/18/12thDay18/",
            "title": "Day18 - GAS抓表(2)",
            "date_published": "2020-09-18T01:17:51.000Z",
            "content_html": "<p>昨天我們在雲端上建好了試算表<br>將GAS發布成API的GET方法，只要我們訪問就能成功獲取試算表資料</p>\n<span id=\"more\"></span>\n\n<p>今天我們來寫點程式</p>\n<p>我們來回顧一下，目前機器人在Message下可以做到的事情</p>\n<ul>\n<li>文字回應</li>\n<li>音樂系統</li>\n</ul>\n<p>我們希望增加一個可以針對表格內容，動態觸發回應的功能<br>這種功能因為不會直接知道有哪些指令，應該要是沒有前綴字的，只要字串符合就會觸發</p>\n<p>由此可知，我們應該要將這個方法添加在所有功能的最底層<br>只有當前綴字都不符合時，才會來辨識表格資料</p>\n<p>觀念大致帶過，我們開始動手</p>\n<p>先幫我在專案目錄下建立一個Script資料夾，在裡面放一個GetGas.js</p>\n<p><img src=\"https://i.imgur.com/OJB3z4l.png\" alt=\"18-1\"></p>\n<pre><code>//#region 全域引用\nconst auth = require(&#39;../JSONHome/auth.json&#39;);\nconst request = require(&#39;request&#39;);\n\n//#endregion\n</code></pre>\n<p>裡面請先幫我引用auth.json跟request</p>\n<p>auth目前只有存放機器人的key，跟key一樣，我們不希望自己與GAS串接的API暴露&amp;寫死在程式裡面，所以之後要把連結寫在auth，之後透過auth來讀取連結<br>務必注意引用auth的路徑比bot.js多了一個點，這是因為GetGas.js要先從Script路徑出來才找的到JSONHome。</p>\n<p>request是提供給js的網路請求library，我們之後都會透過他來傳遞Get方法</p>\n<p><img src=\"https://i.imgur.com/pwcJ7OJ.png\" alt=\"18-2\"></p>\n<p>auth.json目前的樣子</p>\n<p>在原本的Key後面加上一個逗號，然後新增Gas參數，內涵一個JsonObject{}<br>{}裡面再包一個Get參數，內涵一個JsonArray[]<br>第一個JsonObject內包一個baseExcel參數<br>baseExcel參數會帶回我們昨天做的API連結</p>\n<p>包三層是為了增加程式含意，方便之後閱讀<br>跟Get同一層之後可以再添加post等<br>不過Get原本是包JsonObject就好，這邊為了多介紹JsonArray所以用了，原本就會的同學可以少包Array</p>\n<p>這種架構下，如果我們要獲取Url就會是<br>auth.Gas.Get[0].baseExcel</p>\n<p><img src=\"https://i.imgur.com/YcsHJpa.png\" alt=\"18-3\"></p>\n<pre><code>//#region 宣告請求\nconst baseExcel = &#123;\n    &#39;method&#39;: &#39;GET&#39;,\n    &#39;url&#39;: auth.Gas.Get[0].baseExcel,\n    &#39;headers&#39;: &#123;&#125;\n&#125;;\n\n//#endregion\n</code></pre>\n<p>再來我們宣告一個baseExcel常數，將http請求需要的參數帶給他<br>method表示我們使用的是Get方法<br>url就帶我們剛剛寫好的url<br>headers是傳送時的表頭，這邊放空值就好</p>\n<p><img src=\"https://i.imgur.com/8v4kmCE.png\" alt=\"18-4\"></p>\n<pre><code>//#region 傳送請求\nexports.getBaseExcel = function(userTalk, callback) &#123;\n    let backValue = new Array;\n    request(baseExcel, function(error, response) &#123;\n        try &#123;\n            if (error) &#123;\n                callback(error);\n            &#125; else &#123;\n                const data = JSON.parse(response.body); //接收回傳(response)的body\n                const keysValue = Object.keys(data); //將JsonObject的key值輸出成Array\n                //迴圈判斷是否符合\n                for (let i = 0; i &lt; keysValue.length; i++) &#123;\n                    if (data[keysValue[i]].NAME === userTalk) &#123;\n                        callback(data[keysValue[i]].VALUE); //正確回傳結果\n                    &#125;\n                &#125;\n                callback(false);\n            &#125;\n        &#125; catch (err) &#123;\n            console.log(&#39;getBaseExcelError&#39;, err);\n            callback(&#39;getBaseExcelError&#39;);\n        &#125;\n    &#125;);\n&#125;;\n\n//#endregion\n</code></pre>\n<p>最後我們實際創建一個callback方法，供外部調用<br>http請求後，將回傳值定義為JSON給data<br>之後讓data跑迴圈，判斷message是否與表格的NAME欄相符<br>叫到名字的話，機器人就要回傳VALUE值</p>\n<p>這樣我們就把GetGas.js做好了，剩下bot.js呼叫與傳送訊息的部分<br>我們明天繼續</p>\n",
            "tags": [
                "node.js",
                "bot",
                "discord",
                "discord.js",
                "教學",
                "12th鐵人賽"
            ]
        }
    ]
}