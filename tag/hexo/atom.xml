<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://smilin.net</id>
    <title>貓謎工坊 • Posts by &#34;hexo&#34; tag</title>
    <link href="https://smilin.net" />
    <updated>2024-04-23T10:00:00.000Z</updated>
    <category term="node.js" />
    <category term="bot" />
    <category term="discord" />
    <category term="discord.js" />
    <category term="教學" />
    <category term="12th鐵人賽" />
    <category term="日記" />
    <category term="Alist" />
    <category term="Cloudflare" />
    <category term="docker" />
    <category term="javascript" />
    <category term="hexo" />
    <category term="fluid" />
    <category term="heroku" />
    <category term="render" />
    <category term="render.com" />
    <category term="Live2D" />
    <category term="彈射世界" />
    <category term="遊戲" />
    <category term="腳本" />
    <category term="Rust" />
    <category term="addtoany" />
    <entry>
        <id>https://smilin.net/2024/04/23/shareButton1/</id>
        <title>使用 addtoany 分享箱，踩雷過程</title>
        <link rel="alternate" href="https://smilin.net/2024/04/23/shareButton1/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/01.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;網站之前有配置分享箱的系統，使用 &lt;a href=&#34;https://github.com/overtrue/share.js&#34;&gt;sharejs&lt;/a&gt; 依賴&lt;br&gt;該依賴只要套上預設即可，十分方便&lt;/p&gt;
&lt;p&gt;不過最新的 release 已經是 2016 年的事了…&lt;/p&gt;
&lt;p&gt;實際也有些按鈕已經過時，無法使用&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;&lt;a href=&#34;https://ppoffice.github.io/hexo-theme-icarus/Plugins/Share/icarus%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97-%E5%88%86%E4%BA%AB%E6%8C%89%E9%92%AE&#34;&gt;關於本主題的分享箱適配&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;icarus 本身是支援多種分享功能的，由於 sharejs 停止維護，官方也建議採用別的分享功能&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h1 id=&#34;addtoany&#34;&gt;&lt;a href=&#34;#addtoany&#34; class=&#34;headerlink&#34; title=&#34;addtoany&#34;&gt;&lt;/a&gt;addtoany&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/addtoany_logo.svg&#34; alt=&#34;addtoany&#34;&gt;&lt;/p&gt;
&lt;p&gt;看了一圈，決定改用 &lt;a href=&#34;https://www.addtoany.com/&#34;&gt;addtoany&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其一是因為該插件支援的社群足夠多，也有持續在維護&lt;/p&gt;
&lt;p&gt;與 blog 代碼沒甚麼交集，自定義客製方便&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h1 id=&#34;踩雷過程&#34;&gt;&lt;a href=&#34;#踩雷過程&#34; class=&#34;headerlink&#34; title=&#34;踩雷過程&#34;&gt;&lt;/a&gt;踩雷過程&lt;/h1&gt;&lt;p&gt;簡單選一下想要的按鈕，產出代碼後，扔進 jsx 內&lt;/p&gt;
&lt;p&gt;到此應該就搞定了，簡單 build 看下輸出&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/02.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;hmmm…為什麼會是一片空白呢？&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h2 id=&#34;沒有-CSS&#34;&gt;&lt;a href=&#34;#沒有-CSS&#34; class=&#34;headerlink&#34; title=&#34;沒有 CSS ?&#34;&gt;&lt;/a&gt;沒有 CSS ?&lt;/h2&gt;&lt;p&gt;看了下原始碼，似乎是 css 沒有載入&lt;/p&gt;
&lt;p&gt;不過 css 這些內容應該會隨著 js 懶加載一併輸出才對&lt;/p&gt;
&lt;p&gt;花了些時間尋找問題，之後發現&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/03.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;原來是被瀏覽器擋住了，會被瀏覽器攔截主要有幾個可能性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;混和內容(Mixed Content):&lt;br&gt;如果網站是透過 HTTPS 協定提供服務的，而嘗試載入的資源（如 page.js）使用的是 HTTP 鏈接，那麼這種「混合內容」可能會被現代瀏覽器封鎖。 確保所有外部載入的資源都使用 HTTPS 來避免這種問題。&lt;/li&gt;
&lt;li&gt;安全策略(CSP):&lt;br&gt;瀏覽器可能會因為安全策略(Content Security Policy)而阻止某些腳本的載入。&lt;/li&gt;
&lt;li&gt;跨域問題(CORS):&lt;br&gt;服務商有可能因為沒有提供適當的跨域策略(Cross-Origin Resource Sharing)，導致資源無法載入&lt;/li&gt;
&lt;li&gt;廣告攔截器:&lt;br&gt;一些廣告攔截器或安全相關的瀏覽器擴充功能可能會阻止諸如 AddToAny 這樣的第三方服務。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由於我們網站跟 addtoany 都是 https，第一點可以排除&lt;br&gt;本站並沒有設置 CSP (目前沒有)&lt;br&gt;addtoany 這類插件沒處理好 CORS 的機率是很低的&lt;/p&gt;
&lt;p&gt;簡單排除一下，比較有可能的是被廣告攔截器擋住了&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/04.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;喔喔喔！總算出來了！&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h2 id=&#34;廣告攔截器&#34;&gt;&lt;a href=&#34;#廣告攔截器&#34; class=&#34;headerlink&#34; title=&#34;廣告攔截器&#34;&gt;&lt;/a&gt;廣告攔截器&lt;/h2&gt;&lt;p&gt;試了一下分享功能正常，就是按鈕有點多&lt;br&gt;可能減少一些..style 之後客製一下…&lt;/p&gt;
&lt;p&gt;恩..不過這樣其實還沒有解決阿？&lt;/p&gt;
&lt;p&gt;根據統計，全世界有四成的人常駐開啟著廣告攔截器在上網&lt;/p&gt;
&lt;p&gt;只是我看的到而已，如果其他人看不到的話就沒意義了 qq&lt;/p&gt;
&lt;p&gt;不過攔截的問題其實也好解決，只要讓他不會被攔截就好了嗎！(廢話)&lt;/p&gt;
&lt;p&gt;方法有很多，不過最簡單的應該是將原本被攔截的檔案納入網域下&lt;br&gt;載入原本就是同域名下的資源，通常就能繞過限制了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;https://static.addtoany.com/menu/page.js&amp;quot; defer=&amp;#123;true&amp;#125;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;根據產出的代碼來看，主要是這個檔案需要拉進 blog&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/05.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;整理一下格式，創建一個 addtoany.js 放進去&lt;br&gt;以 hexo 來說就是將 js 檔案放在 &lt;code&gt;themes/&amp;#123;theme_name&amp;#125;/source/js&lt;/code&gt; 底下&lt;/p&gt;
&lt;p&gt;之後回到 addtoany.jsx 修改來源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;/js/addtoany.js&amp;quot; defer=&amp;#123;true&amp;#125;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RUN！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/02.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;失敗了！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/06.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;載入失敗的檔案反而變多了！&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;h2 id=&#34;更多的廣告&#34;&gt;&lt;a href=&#34;#更多的廣告&#34; class=&#34;headerlink&#34; title=&#34;更多的廣告&#34;&gt;&lt;/a&gt;更多的廣告&lt;/h2&gt;&lt;p&gt;稍微看了下失敗的內容，來源都是出自 addtoany.js，也就是剛剛新增的檔案&lt;/p&gt;
&lt;p&gt;回頭翻一下代碼…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/07.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/08.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;看來是原本的 page.js 又引入了其他檔案&lt;br&gt;然後其他檔案又被攔截了…&lt;/p&gt;
&lt;p&gt;雖然有點亂，但還是好解決的&lt;/p&gt;
&lt;p&gt;首先在 &lt;code&gt;source&lt;/code&gt; 目錄新增 &lt;code&gt;addtoany&lt;/code&gt; 資料夾&lt;br&gt;將 &lt;code&gt;addtoany.js&lt;/code&gt; 改名回 &lt;code&gt;page.js&lt;/code&gt; ，放進 &lt;code&gt;addtoany&lt;/code&gt; 資料夾&lt;br&gt;原本 &lt;code&gt;addtoany.jsx&lt;/code&gt; 的 script 也要修改&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;/addtoany/page.js&amp;quot; defer=&amp;#123;true&amp;#125;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;之後將三個攔截的檔案拷貝整理後，在 &lt;code&gt;source/addtoany&lt;/code&gt; 創建同名檔案&lt;/p&gt;
&lt;p&gt;然後..然後…&lt;br&gt;然後在 &lt;code&gt;core.js&lt;/code&gt; 引用了更多的 url…&lt;/p&gt;
&lt;p&gt;估計是進行一些第三方 icon 的載入等等…&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;br&gt;

&lt;h1 id=&#34;結語&#34;&gt;&lt;a href=&#34;#結語&#34; class=&#34;headerlink&#34; title=&#34;結語&#34;&gt;&lt;/a&gt;結語&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/img/post/shareButton1/09.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;重新看了 &lt;code&gt;core.js&lt;/code&gt; 的代碼，進行修改，最終是成功了&lt;/p&gt;
&lt;p&gt;但是&lt;br&gt;修改已經壓縮過的代碼，過程是麻煩且沒營養的&lt;br&gt;處理方法相當於暴力破解，也不排除往後產生其他 ERROR 的可能，故這邊不多贅述———&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;p&gt;如果有幸你也在想辦法處理 addtoany 的問題，又懶得架 cdn 等方式&lt;/p&gt;
&lt;p&gt;這邊提供整理後的檔案，歡迎參考。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/share_file/shareButton1/addtoany.7z&#34;&gt;addtoany.7z&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MD5: &lt;code&gt;9538bd7a7e38e69b473780f6e8b647ea&lt;/code&gt;&lt;br&gt;SHA1: &lt;code&gt;7ae1581db69d7ae27698fa979988d7a02ddb9f90&lt;/code&gt;&lt;/p&gt;
</content>
        <category term="hexo" />
        <category term="addtoany" />
        <updated>2024-04-23T10:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://smilin.net/2024/04/23/twikoo1/</id>
        <title>最近想更換評論系統</title>
        <link rel="alternate" href="https://smilin.net/2024/04/23/twikoo1/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/img/post/twikoo1/twikoo-logo-home.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;最近想把 blog 的評論系統換了&lt;/p&gt;
&lt;p&gt;原本的 gittalk 免費，開源&lt;br&gt;巧妙利用 github 的 issue，在靜態網站上也能加入評論系統&lt;/p&gt;
&lt;p&gt;存在些許不方便，仍瑕不掩瑜。&lt;/p&gt;
&lt;p&gt;不過既然存在限制，總有人會想開發更好的工具&lt;br&gt;twikoo 就挺符合 blog 需求的&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h1 id=&#34;gittalk&#34;&gt;&lt;a href=&#34;#gittalk&#34; class=&#34;headerlink&#34; title=&#34;gittalk&#34;&gt;&lt;/a&gt;gittalk&lt;/h1&gt;&lt;p&gt;既然原本是用 gittalk，先說說 gittalk 的優點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;與 github page 的高度適配&lt;/li&gt;
&lt;li&gt;基於 issue 特性，綁定 github 帳戶，防止小白&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;兩邊都有的優點不提，大概是這些&lt;br&gt;至於缺點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因為綁在 issue，評論必須先註冊 github&lt;/li&gt;
&lt;li&gt;對中國使用者的支援較差(疑似)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/twikoo1/01.jpg&#34; alt=&#34;01&#34;&gt;&lt;/p&gt;
&lt;p&gt;而且本站基於 gittalk ，魔改了許多功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;撈取最新留言&lt;/li&gt;
&lt;li&gt;撈取熱門留言&lt;/li&gt;
&lt;li&gt;從外部撈取文章留言數&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;替換評論系統，不只是舊有的評論會消失&lt;br&gt;也代表著這些功能都需要重新適配，或是棄用。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;twikoo&#34;&gt;&lt;a href=&#34;#twikoo&#34; class=&#34;headerlink&#34; title=&#34;twikoo&#34;&gt;&lt;/a&gt;twikoo&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://twikoo.js.org/&#34;&gt;官方文檔&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;twikoo 與 gittalk 不同，資料存放於 MongoDB&lt;br&gt;意味著我們需要自行架設 DB 跟 API Server&lt;/p&gt;
&lt;p&gt;不過兩者在網路上都有許多免費資源可用，用來支持一個 blog 的運作綽綽有餘&lt;/p&gt;
&lt;p&gt;說說這個評論系統的優點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;無須登入即可留言&lt;/li&gt;
&lt;li&gt;避免騷擾留言，分別配有多種自動偵測垃圾留言的接口，也能開啟人工審核&lt;/li&gt;
&lt;li&gt;暱稱&amp;amp;信箱&amp;amp;網址 的填寫方式，很有幾十年前，傳統 blog 那味，我超愛&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至於缺點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比起 gittalk，由於個人資料是自由填寫，相對難以得知發文者的背景&lt;/li&gt;
&lt;li&gt;與依附著 github issue 的 gittalk 相比，twikoo 於第三方架設 DB 跟 API Server 環境，長遠來看需要消耗更多的維護成本&lt;/li&gt;
&lt;li&gt;以前的評論會全部消失，嗚嗚嗚&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;/img/post/twikoo1/02.jpg&#34; alt=&#34;02&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本的配置已經做好了，只是還在猶豫是否該使用&lt;/p&gt;
&lt;p&gt;個人 blog 要提高評論數還是比較難的，至少沒辦法跟社群平台競爭&lt;br&gt;在這個前提下，評論門檻相對高的 gittalk，這份缺點也會被不斷放大&lt;/p&gt;
&lt;p&gt;但 gittalk 同樣有著他本身天然的優勢在——&lt;/p&gt;
</content>
        <category term="日記" />
        <category term="hexo" />
        <updated>2024-04-23T03:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://smilin.net/2021/11/16/fluidThemeShare/</id>
        <title>fluid支持pjax主題源碼分享</title>
        <link rel="alternate" href="https://smilin.net/2021/11/16/fluidThemeShare/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/yl9bnuZ.png&#34; alt=&#34;theme&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;寫在前面&#34;&gt;&lt;a href=&#34;#寫在前面&#34; class=&#34;headerlink&#34; title=&#34;寫在前面&#34;&gt;&lt;/a&gt;寫在前面&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;本主題基於 fluid 1.8.11 版本製作，在此之上參雜了許多私貨
又因為本人前端並不熟練，源碼被改得亂七八糟的，因此有任何問題在blog聯繫我詢問即可。
再此感謝開發 and 維護源碼的所有大大們。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;fluid-主題主要改動&#34;&gt;&lt;a href=&#34;#fluid-主題主要改動&#34; class=&#34;headerlink&#34; title=&#34;fluid 主題主要改動&#34;&gt;&lt;/a&gt;fluid 主題主要改動&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; pjax 支持&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 添加本地音樂箱&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 添加右下角 Live2D 妹子&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; pjax JS 回調(解決大部分 fluid 不支持 pjax 之異常)&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 目錄頁次浮動顯示&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章列表搜出留言數&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Markdown 介面修改&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章底部上下篇連結位置對調(上一篇就該在左邊，下一篇就該在右邊 &amp;#x3D; &amp;#x3D; )&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 修復繁體中文字型&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; rss 功能&lt;/li&gt;
&lt;/ul&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;環境配置&#34;&gt;&lt;a href=&#34;#環境配置&#34; class=&#34;headerlink&#34; title=&#34;環境配置&#34;&gt;&lt;/a&gt;環境配置&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;hexo -v
INFO  Validating config
hexo: 5.4.0
hexo-cli: 4.3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主題下載&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://github.com/Mr-Smilin/hexo-theme-fluid.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;hexo _config 配置請添加以下&lt;/p&gt;
&lt;h3 id=&#34;rss&#34;&gt;&lt;a href=&#34;#rss&#34; class=&#34;headerlink&#34; title=&#34;rss&#34;&gt;&lt;/a&gt;rss&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;feed:
    type: atom # RSS的类型(atom/rss2)
    path: atom.xml # 文件路径,默认是atom.xml/rss2.xml
    limit: 20 # 展示文章的数量,使用0或则false代表展示全部
    hub:
    content: # 在RSS文件中是否包含内容 ,有3个值 true/false默认不填为false
    content_limit: # 指定内容的长度作为摘要,仅仅在上面content设置为false和没有自定义的描述出现
    content_limit_delim: &amp;#39; &amp;#39; # 上面截取描述的分隔符,截取内容是以指定的这个分隔符作为截取结束的标志.在达到规定的内容长度之前最后出现的这个分隔符之前的内容,，防止从中间截断.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;live-2D&#34;&gt;&lt;a href=&#34;#live-2D&#34; class=&#34;headerlink&#34; title=&#34;live 2D&#34;&gt;&lt;/a&gt;live 2D&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;live2d:
    enable: true
    scriptFrom: local
    pluginRootPath: live2dw/
    pluginJsPath: lib/
    pluginModelPath: assets/
    tagMode: false
    log: false
    model:
        use: live2d-widget-model-shizuku
    display:
        position: right
        width: 150
        height: 300
    mobile:
        show: false
    react:
        opacity: 0.7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更多 live2D 模組可訪問 &lt;code&gt;https://smilin.net/2021/11/16/live2DShareList/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;音樂箱音樂&#34;&gt;&lt;a href=&#34;#音樂箱音樂&#34; class=&#34;headerlink&#34; title=&#34;音樂箱音樂&#34;&gt;&lt;/a&gt;音樂箱音樂&lt;/h3&gt;&lt;p&gt;開啟 &lt;code&gt;source\dist\music.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;const ap = new APlayer(&amp;#123;
    container: document.getElementById(&amp;#39;aplayer&amp;#39;),
    fixed: true,
    mini: true,
    autoplay: false,
    loop: &amp;#39;all&amp;#39;,
    volume: 0.7,
    listFolded: true,
    listMaxHeight: 60,
    audio: [
        &amp;#123;
            name: &amp;#39;最近在聽的歌&amp;#39;,
            artist: &amp;#39;星茶会&amp;#39;,
            url: &amp;#39;/music/星茶会.mp3&amp;#39;,
            cover: &amp;#39;/img/avatar.png&amp;#39;,
        &amp;#125;,
        &amp;#123;
            name: &amp;#39;最近在聽的歌&amp;#39;,
            artist: &amp;#39;Fullmetal Alchemist Brotherhood&amp;#39;,
            url: &amp;#39;/music/Fullmetal-Alchemist-Brotherhood.mp3&amp;#39;,
            cover: &amp;#39;/img/avatar.png&amp;#39;,
        &amp;#125;
    ]
&amp;#125;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;對應路徑檔案可替換&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;配置好後，做 hexo 上傳 sop&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install #安裝library（僅第一次執行）
$ hexo clean #清除
$ hexo g #編譯
$ hexo d #上傳git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上就是配置此 theme 的流程，使用上若有遇到問題歡迎在底下詢問&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;期待這篇文章可以幫助到需要的人&#34;&gt;&lt;a href=&#34;#期待這篇文章可以幫助到需要的人&#34; class=&#34;headerlink&#34; title=&#34;期待這篇文章可以幫助到需要的人&#34;&gt;&lt;/a&gt;期待這篇文章可以幫助到需要的人&lt;/h2&gt;&lt;p&gt;fluid 是本 blog 第一個使用的 theme&lt;br&gt;fluid 的設計…非常讚!(詞窮)&lt;br&gt;逛著 blog 的期間，可以從各處巧思中感受到作者對美感的一套見解&lt;/p&gt;
&lt;p&gt;不過 fluid 因為其框架的侷限，其致命傷便是無法支援 pjax(ajax)做局部頁面更新&lt;br&gt;從 issues 上可以看到，對於 pjax 的開發目前是不了了之&lt;/p&gt;
&lt;p&gt;但這並非是 fluid 無法支援 pjax，而是因為引入 pjax 會破壞 fluid 既有框架&lt;br&gt;也因此這些改動要改進正式版本是十分困難的，但如果只是魔改的話，儘管是像筆者對前端並不精熟，也能試著修改(code 不保證好看就是了 xD)&lt;/p&gt;
&lt;p&gt;因為筆者最近可能會試著替換成其他主題，故想記錄下使用版本，算是分享。&lt;/p&gt;
</content>
        <category term="教學" />
        <category term="hexo" />
        <category term="fluid" />
        <updated>2021-11-16T04:00:00.000Z</updated>
    </entry>
</feed>